<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CesiumLanguageWriter</name>
    </assembly>
    <members>
        <member name="T:CesiumLanguageWriter.Advanced.CachingCesiumUrlResolver">
            <summary>
            A URL resolver that downloads files and converts them to data URIs.  Downloaded files are cached
            using a least-recently used cache.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.ICesiumUrlResolver">
            <summary>
            A URL resolver transforms URLs into another form for inclusion in a CZML document.
            For example, <see cref="T:CesiumLanguageWriter.Advanced.CachingCesiumUrlResolver"/> downloads files and converts them to data URIs,
            while <see cref="T:CesiumLanguageWriter.Advanced.PassThroughCesiumUrlResolver"/> leaves URLs unchanged.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.ICesiumUrlResolver.ResolveUrl(System.String)">
            <summary>
            Resolves a URL, producing a new URL for inclusion in a CZML document.
            </summary>
            <param name="url">The source URL.</param>
            <returns>A URL suitable for CZML.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CachingCesiumUrlResolver.#ctor(System.Int32)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="max">The maximum number of remote files to cache before removing the oldest.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CachingCesiumUrlResolver.ResolveUrl(System.String)">
            <summary>
            Resolves a URL, producing a new URL for inclusion in a CZML document.
            </summary>
            <param name="url">The source URL.</param>
            <returns>A URL suitable for CZML.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CachingCesiumUrlResolver.AddUrl(System.String,System.String)">
            <summary>
            Add a URL to the cache for future calls to ResolveUrl.
            </summary>
            <param name="sourceUrl">The source URL.</param>
            <param name="resolvedUrl">The resolved URL.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CachingCesiumUrlResolver.ContainsUrl(System.String)">
            <summary>
            Checks whether the cache already contains a resolved URL for the given URL.
            </summary>
            <param name="sourceUrl">The source URL.</param>
            <returns>True if the cache already has a resolved URL for that URL, false otherwise.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CachingCesiumUrlResolver.ThreadLocalInstance">
            <summary>
            An instance of <see cref="T:CesiumLanguageWriter.Advanced.CachingCesiumUrlResolver"/> local to the calling thread.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.CesiumElementWriter">
            <summary>
            The base class for types that write <topic name="Cesium">Cesium</topic> data to a stream.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.ICesiumElementWriter">
            <summary>
            An interface to an instance that can write elements of <topic name="Cesium">Cesium</topic>.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)">
            <summary>
            Opens this writer on a given <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A single writer can write to multiple
            streams over its lifetime.  Opening a writer on a stream may cause data to be written to the stream.
            </summary>
            <param name="output">The stream to which to write.</param>
            <exception cref="T:System.InvalidOperationException">The writer is already open on a stream.</exception>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close">
            <summary>
            Closes this writer on a given stream, but does not close the underlying stream.  Closing a writer
            on a stream may cause data to be written to the stream.
            </summary>
            <exception cref="T:System.InvalidOperationException">The writer is not open on a stream.</exception>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.ICesiumElementWriter.IsOpen">
            <summary>
            Gets <see langword="true" /> if the writer is open; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Output">
            <summary>
            Gets the <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/> on which this writer is currently open.  If the writer is
            not open, accessing this property will throw an exception.
            </summary>
            <exception cref="T:System.InvalidOperationException">The writer is not currently open on a stream.</exception>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)">
            <summary>
            Opens this writer on a given <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A single writer can write to multiple
            streams over its lifetime.  Opening a writer on a stream may cause data to be written to the stream.
            </summary>
            <param name="output">The stream to which to write.</param>
            <exception cref="T:System.InvalidOperationException">The writer is already open on a stream.</exception>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Close">
            <summary>
            Closes this writer on a given stream, but does not close the underlying stream.  Closing a writer
            on a stream may cause data to be written to the stream.
            </summary>
            <exception cref="T:System.InvalidOperationException">The writer is not open on a stream.</exception>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.OnOpen">
            <summary>
            When overridden in a derived class, writes content to the stream immediately after opening the writer on it.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.OnClose">
            <summary>
            When overridden in a derived class, writes content to the stream immediately before closing the writer on it.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.OpenAndReturn``1(``0)">
            <summary>
            Opens a <see cref="T:CesiumLanguageWriter.Advanced.CesiumElementWriter"/> on the same stream on which this one is currently open.
            For convenience, this method returns a reference to the same writer passed to it.
            </summary>
            <typeparam name="T">The type of the writer to open.</typeparam>
            <param name="writer">The writer.</param>
            <returns>The same writer, now opened on the stream.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumElementWriter.IsOpen">
            <summary>
            Gets <see langword="true" /> if the writer is open; otherwise, <see langword="false" />.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumElementWriter.Output">
            <summary>
            Gets the <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/> on which this writer is currently open.  If the writer is
            not open, accessing this property will throw an exception.
            </summary>
            <exception cref="T:System.InvalidOperationException">The writer is not currently open on a stream.</exception>
            <seealso cref="P:CesiumLanguageWriter.Advanced.CesiumElementWriter.OutputOrNull"/>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumElementWriter.OutputOrNull">
            <summary>
            Gets the <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/> on which this writer is currently open, or
            <see langword="null"/> if the writer is not open.
            </summary>
            <seealso cref="P:CesiumLanguageWriter.Advanced.CesiumElementWriter.Output"/>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.CesiumFormattingHelper">
            <summary>
            Contains static methods for formatting data for writing to a <topic name="Cesium">Cesium</topic> stream.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.ToIso8601Interval(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.Iso8601Format)">
            <summary>
            Converts a <see cref="T:CesiumLanguageWriter.TimeInterval"/> as an ISO8601 interval string.
            </summary>
            <param name="start">The start of the interval.</param>
            <param name="stop">The end of the interval.</param>
            <param name="format">The format to use.</param>
            <returns>The interval represented as an ISO8601 interval string.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.ToIso8601Interval(CesiumLanguageWriter.TimeInterval,CesiumLanguageWriter.Iso8601Format)">
            <summary>
            Converts a <see cref="T:CesiumLanguageWriter.TimeInterval"/> as an ISO8601 interval string.
            </summary>
            <param name="interval">The interval to convert.</param>
            <param name="format">The format to use.</param>
            <returns>The interval represented as an ISO8601 interval string.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.ToIso8601(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.Iso8601Format)">
            <summary>
            Converts a <see cref="T:CesiumLanguageWriter.JulianDate"/> to an ISO8601 date string.
            </summary>
            <param name="date">The date to convert.</param>
            <param name="format">The format to use.</param>
            <returns>The date represented as an ISO8601 date string.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.DownloadUrlIntoDataUri(System.String)">
            <summary>
            Downloads and converts a remote resource URL into a data URI in the form
            <code>data:&lt;MimeType&gt;;base64,&lt;ImageData&gt;</code>, where
            <code>&lt;MimeType&gt;</code> is the MIME type of the specified resource, and
            <code>&lt;ImageData&gt;</code> is the data encoded as a Base 64 string.
            </summary>
            <param name="url">The URL of the resource to convert.</param>
            <returns>A data URI containing the content of the resource.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.ImageToDataUri(System.IO.Stream,CesiumLanguageWriter.CesiumImageFormat)">
            <summary>
            Reads from a stream containing an image into a data URI in the form
            <code>data:&lt;MimeType&gt;;base64,&lt;ImageData&gt;</code>, where
            <code>&lt;MimeType&gt;</code> is the MIME type of the specified image format, and
            <code>&lt;ImageData&gt;</code> is the image data encoded as a Base 64 string.
            This method does not attempt to decode the image data, but simply writes it directly to the data URI.
            </summary>
            <param name="stream">The stream containing the image to encode into a data URI.</param>
            <param name="imageFormat">The format of the image, which controls the mime type.</param>
            <returns>A data URI containing the content of the image.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.ImageToDataUri(System.Drawing.Image,CesiumLanguageWriter.CesiumImageFormat)">
            <summary>
            Converts an image to a data URI in the form
            <code>data:&lt;MimeType&gt;;base64,&lt;ImageData&gt;</code>, where
            <code>&lt;MimeType&gt;</code> is the MIME type of the specified <paramref name="image"/>, and
            <code>&lt;ImageData&gt;</code> is the image data encoded as a Base 64 string.
            </summary>
            <param name="image">The image to convert.</param>
            <param name="imageFormat">The format of the image, which controls the mime type.</param>
            <returns>A data URI containing the content of the image.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.HorizontalOriginToString(CesiumLanguageWriter.CesiumHorizontalOrigin)">
            <summary>
            Converts a <see cref="T:CesiumLanguageWriter.CesiumHorizontalOrigin"/> to the corresponding string in a
            <topic name="Cesium">Cesium</topic> stream.
            </summary>
            <param name="horizontalOrigin">The horizontal origin to convert.</param>
            <returns>The string representation of the specified <see cref="T:CesiumLanguageWriter.CesiumHorizontalOrigin"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.VerticalOriginToString(CesiumLanguageWriter.CesiumVerticalOrigin)">
            <summary>
            Converts a <see cref="T:CesiumLanguageWriter.CesiumVerticalOrigin"/> to the corresponding string in a
            <topic name="Cesium">Cesium</topic> stream.
            </summary>
            <param name="verticalOrigin">The vertical origin to convert.</param>
            <returns>The string representation of the specified <see cref="T:CesiumLanguageWriter.CesiumVerticalOrigin"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.InterpolationAlgorithmToString(CesiumLanguageWriter.CesiumInterpolationAlgorithm)">
            <summary>
            Converts a <see cref="T:CesiumLanguageWriter.CesiumInterpolationAlgorithm"/> to the corresponding string in a
            <topic name="Cesium">Cesium</topic> stream.
            </summary>
            <param name="interpolationAlgorithm">The interpolation algorithm to convert.</param>
            <returns>The string representing the specified <see cref="T:CesiumLanguageWriter.CesiumInterpolationAlgorithm"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.ClockRangeToString(CesiumLanguageWriter.ClockRange)">
            <summary>
            Converts a <see cref="T:CesiumLanguageWriter.ClockRange"/> to the corresponding string in a
            <topic name="Cesium">Cesium</topic> stream.
            </summary>
            <param name="clockRange">The label style to convert.</param>
            <returns>The string representing the specified <see cref="T:CesiumLanguageWriter.CesiumLabelStyle"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.ClockStepToString(CesiumLanguageWriter.ClockStep)">
            <summary>
            Converts a <see cref="T:CesiumLanguageWriter.ClockStep"/> to the corresponding string in a
            <topic name="Cesium">Cesium</topic> stream.
            </summary>
            <param name="clockStep">The label style to convert.</param>
            <returns>The string representing the specified <see cref="T:CesiumLanguageWriter.CesiumLabelStyle"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.LabelStyleToString(CesiumLanguageWriter.CesiumLabelStyle)">
            <summary>
            Converts a <see cref="T:CesiumLanguageWriter.CesiumLabelStyle"/> to the corresponding string in a
            <topic name="Cesium">Cesium</topic> stream.
            </summary>
            <param name="labelStyle">The label style to convert.</param>
            <returns>The string representing the specified <see cref="T:CesiumLanguageWriter.CesiumLabelStyle"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumFormattingHelper.GetResourceUrl(System.String,CesiumLanguageWriter.CesiumResourceBehavior)">
            <summary>
            Returns a resolved url, using the given <see cref="T:CesiumLanguageWriter.CesiumResourceBehavior"/>.
            </summary>
            <param name="url">The url of the resource.</param>
            <param name="resourceBehavior">A <see cref="T:CesiumLanguageWriter.CesiumResourceBehavior"/> specifying how include the resource into a CZML document.</param>
            <returns>The resolved url.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.CesiumInterpolatablePropertyWriter`1">
            <summary>
            A <topic name="Cesium">Cesium</topic> writer for a property that represents a value that may be sampled
            and interpolated.  The property may be defined over a single interval or over multiple intervals.
            </summary>
            <typeparam name="TDerived">The type of the class derived from this one.</typeparam>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1">
            <summary>
            A <topic name="Cesium">Cesium</topic> writer for a property.  The property may be defined over a
            single interval or over multiple intervals.
            </summary>
            <typeparam name="TDerived">The type of the class derived from this one.</typeparam>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.ICesiumPropertyWriter">
            <summary>
            An interface to an object that writes the values of a <topic name="Cesium">Cesium</topic>
            property over one or more intervals.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.ICesiumPropertyWriter.WriteInterval(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Writes the actual interval of time covered by this <topic name="Cesium">Cesium</topic> interval.
            </summary>
            <param name="start">The start of the interval.</param>
            <param name="stop">The end of the interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.ICesiumPropertyWriter.OpenInterval">
            <summary>
            Opens a writer that is used to write information about this property for a single interval.
            </summary>
            <returns>The writer.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.ICesiumPropertyWriter.OpenMultipleIntervals">
            <summary>
            Opens a writer that is used to write information about this property for multiple discrete intervals.
            </summary>
            <returns>The writer.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.ICesiumPropertyWriter.IntervalWriter">
            <summary>
            Gets a writer for intervals of this property.  The returned instance must be opened by calling
            the <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  Consider
            calling the <see cref="M:CesiumLanguageWriter.Advanced.ICesiumPropertyWriter.OpenInterval"/> or <see cref="M:CesiumLanguageWriter.Advanced.ICesiumPropertyWriter.OpenMultipleIntervals"/> method, which will automatically
            open the writer, instead of accessing this property directly.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.#ctor(CesiumLanguageWriter.Advanced.CesiumPropertyWriter{`0})">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.Clone">
            <summary>
            Copies this instance and returns the copy.
            </summary>
            <returns>The copy.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.OpenInterval">
            <summary>
            Opens a writer that is used to write information about this property for a single interval.
            </summary>
            <returns>The writer.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.OpenInterval(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Opens a writer that is used to write information about this property for a single interval.
            </summary>
            <param name="start">The start of the interval of time covered by this interval element.</param>
            <param name="stop">The end of the interval of time covered by this interval element.</param>
            <returns>The writer.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.OpenMultipleIntervals">
            <summary>
            Opens a writer that is used to write information about this property for multiple discrete intervals.
            </summary>
            <returns>The writer.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.WriteInterval(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Writes the actual interval of time covered by this <topic name="Cesium">Cesium</topic> interval.
            </summary>
            <param name="start">The first date of the interval.</param>
            <param name="stop">The last date of the interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.WriteInterval(CesiumLanguageWriter.TimeInterval)">
            <summary>
            Writes the actual interval of time covered by this <topic name="Cesium">Cesium</topic> interval.
            </summary>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.OnOpen">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.OnClose">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.OpenIntervalIfNecessary">
            <summary>
            Opens an interval for this property if one is not already open.  This method should be called by
            derived-class <filter name="DotNet,Silverlight"><code>Open...</code></filter>
            <filter name="Java"><code>open...</code></filter> methods prior to opening the nested property.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.PropertyName">
            <summary>
            Gets the name of the property written by this instance.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.IsInterval">
            <summary>
            Gets a value indicating whether this instance represents an open interval.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.IntervalWriter">
            <summary>
            Gets a writer for intervals of this property.  The returned instance must be opened by calling
            the <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  Consider
            calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.OpenInterval(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)"/> or <see cref="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.OpenMultipleIntervals"/> method, which will automatically
            open the writer, instead of accessing this property directly.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.ICesiumInterpolationInformationWriter">
            <summary>
            An interface to a writer that writes information about how to interpolate sampled values.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.ICesiumInterpolationInformationWriter.WriteInterpolationAlgorithm(CesiumLanguageWriter.CesiumInterpolationAlgorithm)">
            <summary>
            Writes the interpolation algorithm to use to interpolate the sampled data in this interval.
            </summary>
            <param name="interpolationAlgorithm">The interpolation algorithm.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.ICesiumInterpolationInformationWriter.WriteInterpolationDegree(System.Int32)">
            <summary>
            Writes the degree of polynomial to use to interpolate sampled data in this interval.
            </summary>
            <param name="degree">The degree.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatablePropertyWriter`1.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatablePropertyWriter`1.#ctor(CesiumLanguageWriter.Advanced.CesiumInterpolatablePropertyWriter{`0})">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatablePropertyWriter`1.WriteInterpolationAlgorithm(CesiumLanguageWriter.CesiumInterpolationAlgorithm)">
            <summary>
            Writes the interpolation algorithm to use to interpolate the sampled data in this interval.
            </summary>
            <param name="interpolationAlgorithm">The interpolation algorithm.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatablePropertyWriter`1.WriteInterpolationDegree(System.Int32)">
            <summary>
            Writes the degree of polynomial to use to interpolate sampled data in this interval.
            </summary>
            <param name="degree">The degree.</param>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.CesiumWriterAdaptorWriteSamplesCallback`2">
            <summary>
            A callback to write a value to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/> using a given
            wrapped property writer.
            </summary>
            <typeparam name="TWrappedWriter">The type of the wrapped writer.</typeparam>
            <typeparam name="TValue">The type of the value to write.</typeparam>
            <param name="wrappedWriter">The wrapper writer.</param>
            <param name="dates">The dates at which samples are provided.</param>
            <param name="values">The sampled value corresponding to each date.</param>
            <param name="startIndex">The index of the first sample to write.</param>
            <param name="length">The number of samples to write.</param>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2">
            <summary>
            Adapts a class derived from <see cref="T:CesiumLanguageWriter.Advanced.CesiumInterpolatablePropertyWriter`1"/> to implement
            <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> for a different type of value.  Typically, the
            class has a method to write values of the new type, but that method is not exposed via an interface.
            This class adapts the method to the interface via a callback delegate.
            </summary>
            <typeparam name="TFrom">The class derived from <see cref="T:CesiumLanguageWriter.Advanced.CesiumInterpolatablePropertyWriter`1"/> to adapt.</typeparam>
            <typeparam name="TValue">The type of value to which to adapt the class to write.</typeparam>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1">
            <summary>
            An interface to a property that writes a sampled, interpolatable value.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1">
            <summary>
            An interface to an object that writes the values of a <topic name="Cesium">Cesium</topic>
            property with values over one or more intervals.
            </summary>
            <typeparam name="T">The type written by the property writer.</typeparam>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1.WriteValue(`0)">
            <summary>
            Writes the value of the property for this interval of time.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1.WriteValue(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{`0},System.Int32,System.Int32)">
            <summary>
            Writes time-tagged samples for this property.  Clients will interpolate over the samples
            to determine the property value at a given time.  The <paramref name="dates"/> need not all
            fall within the <see cref="M:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1.WriteInterval(CesiumLanguageWriter.TimeInterval)"/>, because having samples
            outside the interval is often useful for interpolation.  However, the samples within an interval
            will never be used to determine the value within another interval.
            </summary>
            <param name="dates">The dates of the samples.  This collection must have the same number of elements as the <paramref name="values"/> collection.</param>
            <param name="values">The values corresponding to the <paramref name="dates"/>.  This collection must have the same number of elements as the <paramref name="dates"/> collection.</param>
            <param name="startIndex">The first index in the collections to write.</param>
            <param name="length">The number of elements from the collections to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.#ctor(`0,CesiumLanguageWriter.Advanced.CesiumWriterAdaptorWriteCallback{`0,`1},CesiumLanguageWriter.Advanced.CesiumWriterAdaptorWriteSamplesCallback{`0,`1})">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="parent">The instance to wrap.</param>
            <param name="writeValueCallback">The callback to write a value of type <typeparamref name="TValue"/>.</param>
            <param name="writeSamplesCallback">The callback to write samples of type <typeparamref name="TValue"/>.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.WriteValue(`1)">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.WriteValue(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{`1},System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.WriteInterpolationAlgorithm(CesiumLanguageWriter.CesiumInterpolationAlgorithm)">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.WriteInterpolationDegree(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.WriteInterval(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.OpenInterval">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.OpenMultipleIntervals">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.Open(CesiumLanguageWriter.CesiumOutputStream)">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.Close">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.Dispose">
            <inheritdoc />
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.IsOpen">
            <inheritdoc />
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.Output">
            <inheritdoc />
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumInterpolatableWriterAdaptor`2.IntervalWriter">
            <inheritdoc />
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.CesiumWriterAdaptorWriteCallback`2">
            <summary>
            A callback to write a value to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/> using a given
            wrapped property writer.
            </summary>
            <typeparam name="TWrappedWriter">The type of the wrapped writer.</typeparam>
            <typeparam name="TValue">The type of the value to write.</typeparam>
            <param name="wrappedWriter">The wrapper writer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2">
            <summary>
            Adapts a class derived from <see cref="T:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1"/> to implement
            <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> for a different type of value.  Typically, the
            class has a method to write values of the new type, but that method is not exposed via an interface.
            This class adapts the method to the interface via a callback delegate.
            </summary>
            <typeparam name="TFrom">The class derived from <see cref="T:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1"/> to adapt.</typeparam>
            <typeparam name="TValue">The type of value to which to adapt the class to write.</typeparam>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.#ctor(`0,CesiumLanguageWriter.Advanced.CesiumWriterAdaptorWriteCallback{`0,`1})">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="parent">The instance to wrap.</param>
            <param name="writeValueCallback">The callback to write values of type <typeparamref name="TValue"/>.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.WriteValue(`1)">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.WriteInterval(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.OpenInterval">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.OpenMultipleIntervals">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.Open(CesiumLanguageWriter.CesiumOutputStream)">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.Close">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.Dispose">
            <inheritdoc />
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.IsOpen">
            <inheritdoc />
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.Output">
            <inheritdoc />
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.CesiumWriterAdaptor`2.IntervalWriter">
            <inheritdoc />
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.CesiumWritingHelper">
            <summary>
            Contains helper methods for writing CZML values.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Advanced.CesiumWritingHelper.MaximumInterval">
            <summary>
            The maximum interval of time that can be specified.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteDate(CesiumLanguageWriter.CesiumOutputStream,CesiumLanguageWriter.JulianDate)">
            <summary>
            Writes a <see cref="T:CesiumLanguageWriter.JulianDate"/> as an ISO 8601 interval string.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="date">The date to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteTimeInterval(CesiumLanguageWriter.CesiumOutputStream,CesiumLanguageWriter.TimeInterval)">
            <summary>
            Writes a <see cref="T:CesiumLanguageWriter.TimeInterval"/> as an ISO 8601 interval string.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="interval">The interval to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteTimeIntervalCollection(CesiumLanguageWriter.CesiumOutputStream,System.Collections.Generic.IList{CesiumLanguageWriter.TimeInterval})">
            <summary>
            Writes a list of <see cref="T:CesiumLanguageWriter.TimeInterval">TimeIntervals</see>.  If the collection has a single
            interval, the interval is written as an ISO 8601 interval string.  If it has multiple intervals,
            it is written as an array of ISO 8601 interval strings.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="intervals">The intervals to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteCartesian2(CesiumLanguageWriter.CesiumOutputStream,CesiumLanguageWriter.Rectangular)">
            <summary>
            Writes a <see cref="T:CesiumLanguageWriter.Rectangular"/> value as an array in X, Y order.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteCartesian2(CesiumLanguageWriter.CesiumOutputStream,System.String,System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Rectangular},System.Int32,System.Int32)">
            <summary>
            Writes time-tagged <see cref="T:CesiumLanguageWriter.Rectangular"/> values as an array in [Time, X, Y] order.
            Times are epoch seconds since an epoch that is determined from the first date to be written.
            The epoch property is written as well.
            </summary>
            <param name="output">The stream to which to write the array.</param>
            <param name="propertyName">The name of the property to write.</param>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The corresponding value for each date.</param>
            <param name="startIndex">The index of the first element to use in the <paramref name="values"/> collection.</param>
            <param name="length">The number of elements to use from the <paramref name="values"/> collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteCartesian3(CesiumLanguageWriter.CesiumOutputStream,CesiumLanguageWriter.Cartesian)">
            <summary>
            Writes a <see cref="T:CesiumLanguageWriter.Cartesian"/> value as an array in X, Y, Z order.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteCartesian3(CesiumLanguageWriter.CesiumOutputStream,System.String,System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian},System.Int32,System.Int32)">
            <summary>
            Writes time-tagged <see cref="T:CesiumLanguageWriter.Cartesian"/> values as an array in [Time, X, Y, Z] order.
            Times are epoch seconds since an epoch that is determined from the first date to be written.
            The epoch property is written as well.
            </summary>
            <param name="output">The stream to which to write the array.</param>
            <param name="propertyName">The name of the property to write.</param>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The corresponding value for each date.</param>
            <param name="startIndex">The index of the first element to use in the <paramref name="values"/> collection.</param>
            <param name="length">The number of elements to use from the <paramref name="values"/> collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteCartesian3List(CesiumLanguageWriter.CesiumOutputStream,System.Collections.Generic.IEnumerable{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes a list of <see cref="T:CesiumLanguageWriter.Cartesian"/> values as an array in X, Y, Z order.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="values">The values to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteCartographic(CesiumLanguageWriter.CesiumOutputStream,CesiumLanguageWriter.Cartographic)">
            <summary>
            Writes a <see cref="T:CesiumLanguageWriter.Cartographic"/> value as an array in Longitude, Latitude, Height order.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteCartographic(CesiumLanguageWriter.CesiumOutputStream,System.String,System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartographic},System.Int32,System.Int32)">
            <summary>
            Writes time-tagged <see cref="T:CesiumLanguageWriter.Cartographic"/> values as an array in [Time, Longitude, Latitude, Height] order.
            Times are epoch seconds since an epoch that is determined from the first date to be written.
            The epoch property is written as well.
            </summary>
            <param name="output">The stream to which to write the array.</param>
            <param name="propertyName">The name of the property to write.</param>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The corresponding value for each date.</param>
            <param name="startIndex">The index of the first element to use in the <paramref name="values"/> collection.</param>
            <param name="length">The number of elements to use from the <paramref name="values"/> collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteCartographicList(CesiumLanguageWriter.CesiumOutputStream,System.Collections.Generic.IEnumerable{CesiumLanguageWriter.Cartographic})">
            <summary>
            Writes a list of <see cref="T:CesiumLanguageWriter.Cartographic"/> values as an array in Longitude, Latitude, Height order.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="values">The values to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteRgba(CesiumLanguageWriter.CesiumOutputStream,System.Drawing.Color)">
            <summary>
            Writes a color value as an array in Red, Green, Blue, Alpha order.
            </summary>
            <param name="output">The stream to which to write the color.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteRgba(CesiumLanguageWriter.CesiumOutputStream,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a color value as an array in Red, Green, Blue, Alpha order.
            </summary>
            <param name="output">The stream to which to write the color.</param>
            <param name="red">The red component in the range 0-255.</param>
            <param name="green">The green component in the range 0-255.</param>
            <param name="blue">The blue component in the range 0-255.</param>
            <param name="alpha">The alpha component in the range 0-255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteRgba(CesiumLanguageWriter.CesiumOutputStream,System.String,System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes time-tagged color values as an array in [Time, Red, Green, Blue, Alpha] order.
            Times are epoch seconds since an epoch that is determined from the first date to be written.
            The epoch property is written as well.
            </summary>
            <param name="output">The stream to which to write the array.</param>
            <param name="propertyName">The name of the property to write.</param>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The corresponding value for each date.</param>
            <param name="startIndex">The index of the first element to use in the <paramref name="values"/> collection.</param>
            <param name="length">The number of elements to use from the <paramref name="values"/> collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteRgbaf(CesiumLanguageWriter.CesiumOutputStream,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a color value as an array in Red, Green, Blue, Alpha order.
            </summary>
            <param name="output">The stream to which to write the color.</param>
            <param name="red">The red component in the range 0.0-1.0.</param>
            <param name="green">The green component in the range 0.0-1.0.</param>
            <param name="blue">The blue component in the range 0.0-1.0.</param>
            <param name="alpha">The alpha component in the range 0.0-1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteDouble(CesiumLanguageWriter.CesiumOutputStream,System.String,System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes time-tagged floating-point values as an array in [Time, Value] order.
            Times are epoch seconds since an epoch that is determined from the first date to be written.
            The epoch property is written as well.
            </summary>
            <param name="output">The stream to which to write the array.</param>
            <param name="propertyName">The name of the property to write.</param>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The corresponding value for each date.</param>
            <param name="startIndex">The index of the first element to use in the <paramref name="values"/> collection.</param>
            <param name="length">The number of elements to use from the <paramref name="values"/> collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteUnitQuaternion(CesiumLanguageWriter.CesiumOutputStream,CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Writes a <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> as an array in [X, Y, Z, W] order.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteUnitQuaternion(CesiumLanguageWriter.CesiumOutputStream,System.String,System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.UnitQuaternion},System.Int32,System.Int32)">
            <summary>
            Writes the time-tagged <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> collection as an array in
            [Time, X, Y, Z, W] order.
            Times are epoch seconds since an epoch that is determined from the first date to be written.
            The epoch property is written as well.
            </summary>
            <param name="output">The stream to which to write the array.</param>
            <param name="propertyName">The name of the property to write.</param>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The corresponding value for each date.</param>
            <param name="startIndex">The index of the first element to use in the <paramref name="values"/> collection.</param>
            <param name="length">The number of elements to use from the <paramref name="values"/> collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteReferences(CesiumLanguageWriter.CesiumOutputStream,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes a list of references.
            </summary>
            <param name="output">The stream to which to write.</param>
            <param name="references">The list of references to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteUnitCartesian3List(CesiumLanguageWriter.CesiumOutputStream,System.Collections.Generic.IEnumerable{CesiumLanguageWriter.UnitCartesian})">
            <summary>
            Writes a list of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> values as an array in X, Y, Z order.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="values">The values to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.WriteUnitSphericalList(CesiumLanguageWriter.CesiumOutputStream,System.Collections.Generic.IEnumerable{CesiumLanguageWriter.UnitSpherical})">
            <summary>
            Writes a list of <see cref="T:CesiumLanguageWriter.UnitSpherical"/> values as an array in Clock, Cone order.
            </summary>
            <param name="output">The stream to which to write the value.</param>
            <param name="values">The values to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.CesiumWritingHelper.GetAndWriteEpoch(CesiumLanguageWriter.CesiumOutputStream,System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Int32,System.Int32)">
            <summary>
            Gets an appropriate epoch from a list of dates and writes it to the <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>
            as the "epoch" property.  If the <paramref name="dates"/> collection is empty, the <paramref name="startIndex"/>
            is past the end of the collection, or the <paramref name="length"/> is zero, this method does not write
            the "epoch" property and returns <see cref="P:CesiumLanguageWriter.JulianDate.MinValue"/>.
            </summary>
            <param name="output">The stream to which to write the epoch.</param>
            <param name="dates">The collection of dates from which to determine the epoch.</param>
            <param name="startIndex">The first index in the collection to use.</param>
            <param name="length">The number of items from the collection to use.</param>
            <returns>A suitable epoch determined from the collection.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.ICesiumIntervalListWriter">
            <summary>
            An interface to an object that writes a list of intervals for a <topic name="Cesium">Cesium</topic>
            property.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.Advanced.PassThroughCesiumUrlResolver">
            <summary>
            A URL resolver that leaves URLs unchanged.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Advanced.PassThroughCesiumUrlResolver.ResolveUrl(System.String)">
            <summary>
            Resolves a URL, leaving it unchanged.
            </summary>
            <param name="url">The source URL.</param>
            <returns>The same URL.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Advanced.PassThroughCesiumUrlResolver.Instance">
            <summary>
            A static instance of <see cref="T:CesiumLanguageWriter.Advanced.PassThroughCesiumUrlResolver"/> usable from any thread.
            </summary>
        </member>
        <member name="T:CSToJavaExcludeAttribute">
            <summary>
            Mark code to be excluded by the CSToJava Java conversion tool.
            </summary>
        </member>
        <member name="T:CSToJavaExcludeBaseAttribute">
            <summary>
            Indicate that a particular base class or interface implementation should be excluded by the 
            CSToJava Java conversion tool.
            </summary>
        </member>
        <member name="T:CSToJavaImmutableValueType">
            <summary>
            Mark a value type as being immutable, and therefore not necessary to clone when making copies.
            </summary>
        </member>
        <member name="T:CSToJavaRenameAttribute">
            <summary>
            Mark code to be renamed by the CSToJava Java conversion tool.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.Cartesian">
            <summary>
            A set of rectilinear 3-dimensional coordinates.
            </summary>
            <remarks>
            The corresponding 2-dimensional coordinates are <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates.
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.#ctor(System.Double[],System.Int32)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates from 3 consecutive elements in the provided array.
            </summary>
            <param name="elements">The array of coordinate values.</param>
            <param name="startIndex">The index of the first element in the array to use.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the array of <paramref name="elements"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when an object of this type is constructed from an array with less than 3 <paramref name="elements"/>.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.#ctor(System.Double[])">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates from the first 3 consecutive elements in the provided array.
            </summary>
            <param name="elements">The array of coordinate values.</param>
            <exception cref="T:System.ArgumentNullException">
            The array of <paramref name="elements"/> cannot be null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            An object of this type must be constructed from an array with at least 3 <paramref name="elements"/>.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates from the provided values.
            </summary>
            <param name="x">The linear coordinate along the positive x-axis.</param>
            <param name="y">The linear coordinate along the positive y-axis.</param>
            <param name="z">The linear coordinate along the positive z-axis.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Invert">
            <summary>
            Inverts this instance.
            </summary>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the inverse of this instance.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Multiply(System.Double)">
            <summary>
            Multiplies this instance by a scalar.
            </summary>
            <param name="scalar">The multiplier, or value which is to multiply this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Divide(System.Double)">
            <summary>
            Divides this instance by a scalar.
            </summary>
            <param name="scalar">The divisor, or value which is to divide this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the division.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Add(CesiumLanguageWriter.Cartesian)">
            <summary>
            Adds the specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to this instance.
            </summary>
            <param name="other">The addend, or value which is to be added to this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the addition.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Subtract(CesiumLanguageWriter.Cartesian)">
            <summary>
            Subtracts the specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates from this instance.
            </summary>
            <param name="other">The subtrahend, or value which is to be subtracted from this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the subtraction.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Cross(CesiumLanguageWriter.Cartesian)">
            <summary>
            Forms the cross product of the specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates with this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to cross with this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the product.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Dot(CesiumLanguageWriter.Cartesian)">
            <summary>
            Forms the dot product of the specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates with this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to dot with this instance.</param>
            <returns>A <see cref="T:System.Double"/> that represents the result of the product.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.op_Multiply(CesiumLanguageWriter.Cartesian,System.Double)">
            <summary>
            Multiplies a specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates by a scalar.
            </summary>
            <param name="left">The multiplicand, or value which is to be multiplied by <paramref name="right"/>.</param>
            <param name="right">The multiplier, or value which is to multiply <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.op_Multiply(System.Double,CesiumLanguageWriter.Cartesian)">
            <summary>
            Multiplies a scalar by a specified set of set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </summary>
            <param name="left">The multiplicand, or value which is to be multiplied by <paramref name="right"/>.</param>
            <param name="right">The multiplier, or value which is to multiply <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.op_Division(CesiumLanguageWriter.Cartesian,System.Double)">
            <summary>
            Divides a specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates by a scalar.
            </summary>
            <param name="left">The dividend, or value which is to be divided by <paramref name="right"/>.</param>
            <param name="right">The divisor, or value which is to divide <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the division.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.op_Addition(CesiumLanguageWriter.Cartesian,CesiumLanguageWriter.Cartesian)">
            <summary>
            Adds a specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to another specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </summary>
            <param name="left">The augend, or value to which <paramref name="right"/> is to be added.</param>
            <param name="right">The addend, or value which is to be added to <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the addition.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.op_Subtraction(CesiumLanguageWriter.Cartesian,CesiumLanguageWriter.Cartesian)">
            <summary>
            Subtracts a specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates from another specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </summary>
            <param name="left">The minuend, or value from which <paramref name="right"/> is to be subtracted.</param>
            <param name="right">The subtrahend, or value which is to be subtracted from <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the subtraction.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.op_UnaryNegation(CesiumLanguageWriter.Cartesian)">
            <summary>
            Negates the specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates, yielding a new set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </summary>
            <param name="coordinates">The set of coordinates.</param>
            <returns>The result of negating the elements of the original set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.AllComponentsAreGreaterThan(CesiumLanguageWriter.Cartesian)">
            <summary>
            Performs a component-wise greater than check.
            </summary>
            <param name="other">The <see cref="T:CesiumLanguageWriter.Cartesian"/> to compare against.</param>
            <returns><see langword="true"/> if all components of this Cartesian are greater than all components of <paramref name="other"/></returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.AllComponentsAreGreaterThanOrEqualTo(CesiumLanguageWriter.Cartesian)">
            <summary>
            Performs a component-wise greater than or equal to check.
            </summary>
            <param name="other">The <see cref="T:CesiumLanguageWriter.Cartesian"/> to compare against.</param>
            <returns><see langword="true"/> if all components of this <see cref="T:CesiumLanguageWriter.Cartesian"/> are greater than or equal to all components of <paramref name="other"/></returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.AllComponentsAreLessThan(CesiumLanguageWriter.Cartesian)">
            <summary>
            Performs a component-wise less than check.
            </summary>
            <param name="other">The <see cref="T:CesiumLanguageWriter.Cartesian"/> to compare against.</param>
            <returns><see langword="true"/> if all components of this <see cref="T:CesiumLanguageWriter.Cartesian"/> are less than all components of <paramref name="other"/></returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.AllComponentsAreLessThanOrEqualTo(CesiumLanguageWriter.Cartesian)">
            <summary>
            Performs a component-wise less than or equal to check.
            </summary>
            <param name="other">The <see cref="T:CesiumLanguageWriter.Cartesian"/> to compare against.</param>
            <returns><see langword="true"/> if all components of this <see cref="T:CesiumLanguageWriter.Cartesian"/> are less than or equal to all components of <paramref name="other"/></returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Rotate(CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Produces a set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates representing this instance which results from rotating
            the original axes used to represent this instance by the provided <see cref="T:CesiumLanguageWriter.Matrix3By3"/> rotation.
            </summary>
            <param name="rotation">The <see cref="T:CesiumLanguageWriter.Matrix3By3"/> rotation.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates which is the result of the rotation.</returns>
            <remarks>
            This type of rotation is sometimes referred to as an "alias rotation".
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Rotate(CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Produces a set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates representing this instance which results from rotating
            the original axes used to represent this instance by the provided <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> rotation.
            </summary>
            <param name="rotation">The <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> rotation.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates which is the result of the rotation.</returns>
            <remarks>
            This type of rotation is sometimes referred to as an "alias rotation".
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.EqualsEpsilon(CesiumLanguageWriter.Cartesian,System.Double)">
            <summary>
            Indicates whether each coordinate value of another instance of this type
            is within the required tolerance of the corresponding coordinate value of this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to compare to this instance.</param>
            <param name="epsilon">The limit at which the absolute differences between the coordinate values will not be considered equal.</param>
            <returns>
            <see langword="true"/> if the absolute differences are less than <paramref name="epsilon"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.ToString">
            <summary>
            Returns the string representation of the value of this instance.
            </summary>
            <returns>
            A string that represents the value of this instance in the form
            "X, Y, Z".
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.op_Equality(CesiumLanguageWriter.Cartesian,CesiumLanguageWriter.Cartesian)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.op_Inequality(CesiumLanguageWriter.Cartesian,CesiumLanguageWriter.Cartesian)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Normalize">
            <summary>
            Forms a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from this instance.
            </summary>
            <returns>The resulting set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates.</returns>
            <exception cref="T:System.DivideByZeroException">
            The magnitude of the provided coordinates must not be zero.
            </exception>
            <exception cref="T:System.NotFiniteNumberException">
            The magnitude of the provided coordinates must not be infinite.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Normalize(System.Double@)">
            <summary>
            Forms a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from this instance
            and returns the <see cref="P:CesiumLanguageWriter.Cartesian.Magnitude"/> of the original instance in the provided parameter.
            </summary>
            <param name="magnitude">
            <filter name="Java">On input, an array with one element.  On return, the array is populated with</filter>
            <filter name="DotNet,Silverlight">On return,</filter>
            the magnitude of the original set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </param>
            <returns>The resulting set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates.</returns>
            <exception cref="T:System.DivideByZeroException">
            The magnitude of the provided coordinates must not be zero.
            </exception>
            <exception cref="T:System.NotFiniteNumberException">
            The magnitude of the provided coordinates must not be infinite.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.op_Implicit(CesiumLanguageWriter.UnitCartesian)~CesiumLanguageWriter.Cartesian">
            <summary>
            Converts a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates to a set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </summary>
            <param name="coordinates">The set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates.</param>
            <returns>The resulting set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartesian.Equals(CesiumLanguageWriter.Cartesian)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.Zero">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates with values of zero.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.Undefined">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates with values of <see cref="F:System.Double.NaN"/>.
            </summary>
            <remarks>
            Use <see cref="P:CesiumLanguageWriter.Cartesian.IsUndefined"/> to test whether a <see cref="T:CesiumLanguageWriter.Cartesian"/> instance
            is undefined since it will return <see langword="true"/> if any of the coordinate values
            are <see cref="F:System.Double.NaN"/>.
            </remarks>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.X">
            <summary>
            Gets the linear coordinate along the positive x-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.Y">
            <summary>
            Gets the linear coordinate along the positive y-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.Z">
            <summary>
            Gets the linear coordinate along the positive z-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.MostOrthogonalAxis">
            <summary>
            Gets the <see cref="T:CesiumLanguageWriter.UnitCartesian"/> of the axis most orthogonal to this Cartesian.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.Magnitude">
            <summary>
            Gets the magnitude of this instance.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.MagnitudeSquared">
            <summary>
            Gets the square of the <see cref="P:CesiumLanguageWriter.Cartesian.Magnitude"/> of this instance.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.HasZeroMagnitude">
            <summary>
            Gets a value indicating if the <see cref="P:CesiumLanguageWriter.Cartesian.Magnitude"/> of this instance is zero.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.IsUndefined">
            <summary>
            Gets whether or not any of the coordinates for this instance have the value <see cref="F:System.Double.NaN"/>.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.Length">
            <summary>
            Gets the number of elements in this set of coordinates.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartesian.Item(System.Int32)">
            <summary>
            Gets the value of the specified element with <paramref name="index"/> of 0, 1, and 2 corresponding to the coordinates
            X, Y, and Z.
            </summary>
            <param name="index">Either a 0, 1, or 2 corresponding to the coordinates X, Y, or Z.</param>
            <returns>The coordinate associated with the specified <paramref name="index"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the <paramref name="index"/> is less than 0 or greater than or equal to the <see cref="P:CesiumLanguageWriter.Cartesian.Length"/>.
            </exception>
        </member>
        <member name="T:CesiumLanguageWriter.Cartographic">
            <summary>
            A set of curvilinear 3-dimensional coordinates.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Cartographic.#ctor(System.Double[],System.Int32)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.Cartographic"/> coordinates from the provided array.
            </summary>
            <param name="elements">The array of coordinate values.</param>
            <param name="startIndex">The index of the first element in the array to use.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the array of <paramref name="elements"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when an object of this type is constructed from an array with less than 3 <paramref name="elements"/>.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.Cartographic.#ctor(System.Double[])">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.Cartographic"/> coordinates from the first 3 consecutive elements in the provided array.
            </summary>
            <param name="elements">The array of coordinate values.</param>
            <exception cref="T:System.ArgumentNullException">
            The array of <paramref name="elements"/> cannot be null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            An object of this type must be constructed from an array with at least 3 <paramref name="elements"/>.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.Cartographic.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.Cartographic"/> coordinates from the provided values.
            </summary>
            <param name="longitude">The angular coordinate lying in the equatorial plane of the ellipsoid and measured from the prime meridian.</param>
            <param name="latitude">The angular coordinate measured perpendicular to the equatorial plane.</param>
            <param name="height">The linear coordinate measured perpendicular to the surface of the ellipsoid and positive above the surface.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Cartographic.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartographic.EqualsEpsilon(CesiumLanguageWriter.Cartographic,System.Double)">
            <summary>
            Indicates whether each coordinate value of another instance of this type
            is within the required tolerance of the corresponding coordinate value of this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.Cartographic"/> coordinates to compare to this instance.</param>
            <param name="epsilon">The limit at which the absolute differences between the coordinate values will not be considered equal.</param>
            <returns>
            <see langword="true"/> if the absolute differences are less than <paramref name="epsilon"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartographic.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartographic.ToString">
            <summary>
            Returns the string representation of the value of this instance.
            </summary>
            <returns>
            A string that represents the value of this instance in the form
            "Longitude, Latitude, Height".
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartographic.op_Equality(CesiumLanguageWriter.Cartographic,CesiumLanguageWriter.Cartographic)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartographic.op_Inequality(CesiumLanguageWriter.Cartographic,CesiumLanguageWriter.Cartographic)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Cartographic.Equals(CesiumLanguageWriter.Cartographic)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Cartographic.Zero">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.Cartographic"/> coordinates representing the zero vector.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartographic.Longitude">
            <summary>
            Gets the angular coordinate lying in the equatorial plane of the ellipsoid and measured from the prime meridian.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartographic.Latitude">
            <summary>
            Gets the angular coordinate measured perpendicular to the equatorial plane.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartographic.Height">
            <summary>
            Gets the linear coordinate measured perpendicular to the surface of the ellipsoid and positive above the surface.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartographic.Length">
            <summary>
            Gets the number of elements in this set of coordinates.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Cartographic.Item(System.Int32)">
            <summary>
            Gets the value of the specified element with <paramref name="index"/> of 0, 1, and 2 corresponding to the coordinates
            "Longitude, Latitude, Height".
            </summary>
            <param name="index">Either a 0, 1, or 2 corresponding to the coordinates "Longitude, Latitude, Height".</param>
            <returns>The coordinate associated with the specified <paramref name="index"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the <paramref name="index"/> is less than 0 or greater than or equal to the <see cref="P:CesiumLanguageWriter.Cartographic.Length"/>.
            </exception>
        </member>
        <member name="T:CesiumLanguageWriter.CartographicExtent">
            <summary>
            A two dimensional region specified as longitude and latitude coordinates.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CartographicExtent.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance with the specified extents.
            </summary>
            <param name="west">The westernmost longitude.</param>
            <param name="south">The southernmost latitude.</param>
            <param name="east">The easternmost longitude.</param>
            <param name="north">The northernmost latitude.</param>
        </member>
        <member name="M:CesiumLanguageWriter.CartographicExtent.IsInsideExtent(System.Double,System.Double)">
            <summary>
            Returns true if the specified location is inside the extent, otherwise false.
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <returns>
            <see langword="true"/> if the specified location is inside the extent (or on the border),
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.CartographicExtent.Union(CesiumLanguageWriter.CartographicExtent)">
            <summary>
            Computes the union of this extent with another extent.  The union of two extents is
            the smallest extent that includes both.
            </summary>
            <param name="other">The other extent.</param>
            <returns>The union of the two extents.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.CartographicExtent.EqualsEpsilon(CesiumLanguageWriter.CartographicExtent,System.Double)">
            <summary>
            Indicates whether each coordinate value of another instance of this type
            is within the required tolerance of the corresponding coordinate value of this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.CartographicExtent"/> to compare to this instance.</param>
            <param name="epsilon">The limit at which the absolute differences between the coordinate values will not be considered equal.</param>
            <returns>
            <see langword="true"/> if the absolute differences are less than <paramref name="epsilon"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.CartographicExtent.Equals(CesiumLanguageWriter.CartographicExtent)">
            <summary>
            Indicates whether another <see cref="T:CesiumLanguageWriter.CartographicExtent"/> is exactly equal to this instance.
            </summary>
            <param name="other">The <see cref="T:CesiumLanguageWriter.CartographicExtent"/> to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.CartographicExtent.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.CartographicExtent.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.CartographicExtent.op_Equality(CesiumLanguageWriter.CartographicExtent,CesiumLanguageWriter.CartographicExtent)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.CartographicExtent.op_Inequality(CesiumLanguageWriter.CartographicExtent,CesiumLanguageWriter.CartographicExtent)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="P:CesiumLanguageWriter.CartographicExtent.NorthLatitude">
            <summary>
            Gets the northernmost latitude.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CartographicExtent.SouthLatitude">
            <summary>
            Gets the southernmost latitude.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CartographicExtent.EastLongitude">
            <summary>
            Gets the easternmost longitude.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CartographicExtent.WestLongitude">
            <summary>
            Gets the westernmost longitude.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumResource">
            <summary>
            A resource to include in a CZML document, whether embedded or linked to.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumResource.#ctor(System.String,CesiumLanguageWriter.CesiumResourceBehavior)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="url">The URL of the resource.</param>
            <param name="behavior">An enumeration describing how to include the resource in the document.</param>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumResource.Url">
            <summary>
            The URL of the resource.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumResource.Behavior">
            <summary>
            An enumeration describing how to include the resource in the document.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumResourceBehavior">
            <summary>
            Specifies whether to embed resources into a CZML document, or simply link to them.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumResourceBehavior.Embed">
            <summary>
            Download and embed the resource inline in the document as a data URI.  This is the most compatible
            option, but produces larger documents. 
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumResourceBehavior.LinkTo">
            <summary>
            Link to the resource directly in the document.  Browser-based CZML clients may need to make
            cross-origin requests using <a href="http://www.w3.org/TR/cors/">Cross-Origin Resource Sharing</a>
            to access the resource, which may need server configuration changes, see 
            <a href="http://enable-cors.org/">http://enable-cors.org/</a>.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumHorizontalOrigin">
            <summary>
            The horizontal origin of a billboard or label in a <topic name="Cesium">Cesium</topic> stream
            relative to an associated position.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumHorizontalOrigin.Left">
            <summary>
            The left side of the billboard or label is located at the position.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumHorizontalOrigin.Center">
            <summary>
            The billboard or label is horizontally centered on the position.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumHorizontalOrigin.Right">
            <summary>
            The right side of the billboard or label is located at the position.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumImageFormat">
            <summary>
            The format of an image embedded in a <topic name="Cesium">Cesium</topic> stream.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumImageFormat.Png">
            <summary>
            The image is in Portable Network Graphics (PNG) format.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumImageFormat.Jpeg">
            <summary>
            The image is in Joint Photographic Experts Group (JPEG) format.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumImageFormat.Gif">
            <summary>
            The image is in Graphics Interchange Format (GIF) format.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumImageFormat.Bmp">
            <summary>
            The image is in bitmap (BMP) format.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumInterpolationAlgorithm">
            <summary>
            The algorithm to use to interpolation sampled data.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumInterpolationAlgorithm.Linear">
            <summary>
            Simple linear interpolation between two samples.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumInterpolationAlgorithm.Lagrange">
            <summary>
            Lagrange polynomial approximation.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumInterpolationAlgorithm.Hermite">
            <summary>
            Hermite polynomial approximation.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumIntervalListWriter`1">
            <summary>
            Writes a list of intervals for which a <topic name="Cesium">Cesium</topic> property is defined.
            </summary>
            <typeparam name="TPropertyWriter">The type used to represent the value of this property for a single interval.</typeparam>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumIntervalListWriter`1.#ctor(`0)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="propertyWriter">The instance used to write the value of this property for a single interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumIntervalListWriter`1.OnOpen">
            <summary>
            Writes the start of a JSON sequence representing the interval list.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumIntervalListWriter`1.OnClose">
            <summary>
            Writes the end of a JSON array representing the interval list. 
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumIntervalListWriter`1.OpenInterval">
            <summary>
            Opens a writer to write information about a single interval.
            </summary>
            <returns>The interval writer.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumIntervalListWriter`1.OpenInterval(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Opens a writer to write information about a single interval.
            </summary>
            <param name="start">The start of the interval of time covered by this interval element.</param>
            <param name="stop">The end of the interval of time covered by this interval element.</param>
            <returns>The interval writer.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumLabelStyle">
            <summary>
            Specifies the style of <topic name="Cesium">Cesium</topic> label.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumLabelStyle.Fill">
            <summary>
            The label is filled.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumLabelStyle.Outline">
            <summary>
            The label is outlined.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumLabelStyle.FillAndOutline">
            <summary>
            The label is filled and outlined.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumOutputStream">
            <summary>
            A stream to which raw <topic name="Cesium">Cesium</topic> data can be written.  This is a low-level class that
            does not extensively validate that methods are called in a valid order, so it can be used to generated invalid
            Cesium and JSON.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="writer">The text stream to which to write data.</param>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.Dispose">
            <summary>
            Flushes data to the underlying text writer, but does not close it.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WriteStartObject">
            <summary>
            Writes the start of an object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WriteEndObject">
            <summary>
            Writes the end of an object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WriteStartSequence">
            <summary>
            Writes the start of a sequence.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WriteEndSequence">
            <summary>
            Writes the end of a sequence.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WritePropertyName(System.String)">
            <summary>
            Writes the name of a property.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WriteValue(System.String)">
            <summary>
            Writes the value of a property or element in a sequence.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WriteValue(System.Double)">
            <summary>
            Writes the value of a property or element in a sequence.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WriteValue(System.Int32)">
            <summary>
            Writes the value of a property or element in a sequence.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WriteValue(System.Int64)">
            <summary>
            Writes the value of a property or element in a sequence.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WriteValue(System.Boolean)">
            <summary>
            Writes the value of a property or element in a sequence.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumOutputStream.WriteLineBreak">
            <summary>
            When <see cref="P:CesiumLanguageWriter.CesiumOutputStream.PrettyFormatting"/> is <see langword="true"/>, adds a line break in a sequence of simple values.
            When <see cref="P:CesiumLanguageWriter.CesiumOutputStream.PrettyFormatting"/> is <see langword="false"/>, this method does nothing.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumOutputStream.PrettyFormatting">
            <summary>
            Gets or sets a value indicating whether or not the written data should be formatted for easy human readability.
            When this property is <see langword="false"/> (the default), more compact Cesium is generated.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumStreamWriter">
            <summary>
            Writes <topic name="Cesium">Cesium</topic> data to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CesiumStreamWriter.OpenPacket(CesiumLanguageWriter.CesiumOutputStream)">
            <summary>
            Starts a new <topic name="Cesium">Cesium</topic> packet on the given stream.
            </summary>
            <param name="output">The stream to which to write the packet.</param>
            <returns>The packet writer.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumStreamWriter.PacketWriter">
            <summary>
            Gets the <see cref="T:CesiumLanguageWriter.PacketCesiumWriter"/> that this instances uses to write packets.
            The packet writer must be opened by calling <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/>
            before it can be use for writing.  Consider calling <see cref="M:CesiumLanguageWriter.CesiumStreamWriter.OpenPacket(CesiumLanguageWriter.CesiumOutputStream)"/> instead,
            which returns the same instance but opens it first.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumVerticalOrigin">
            <summary>
            The vertical origin of a billboard or label in a <topic name="Cesium">Cesium</topic> stream
            relative to an associated position.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumVerticalOrigin.Bottom">
            <summary>
            The bottom of the billboard or label is located at the position.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumVerticalOrigin.Center">
            <summary>
            The billboard or label is vertically centered on the position.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CesiumVerticalOrigin.Top">
            <summary>
            The top of the billboard or label is located at the position.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.Constants">
            <summary>
            A collection of constants.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon1">
            <summary>
            A small number useful for comparisons, 1e-1
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon2">
            <summary>
            A small number useful for comparisons, 1e-2
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon3">
            <summary>
            A small number useful for comparisons, 1e-3
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon4">
            <summary>
            A small number useful for comparisons, 1e-4
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon5">
            <summary>
            A small number useful for comparisons, 1e-5
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon6">
            <summary>
            A small number useful for comparisons, 1e-6
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon7">
            <summary>
            A small number useful for comparisons, 1e-7
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon8">
            <summary>
            A small number useful for comparisons, 1e-8
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon9">
            <summary>
            A small number useful for comparisons, 1e-9
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon10">
            <summary>
            A small number useful for comparisons, 1e-10
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon11">
            <summary>
            A small number useful for comparisons, 1e-11
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon12">
            <summary>
            A small number useful for comparisons, 1e-12
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon13">
            <summary>
            A small number useful for comparisons, 1e-13
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon14">
            <summary>
            A small number useful for comparisons, 1e-14
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon15">
            <summary>
            A small number useful for comparisons, 1e-15
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon16">
            <summary>
            A small number useful for comparisons, 1e-16
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon17">
            <summary>
            A small number useful for comparisons, 1e-17
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon18">
            <summary>
            A small number useful for comparisons, 1e-18
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon19">
            <summary>
            A small number useful for comparisons, 1e-19
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.Epsilon20">
            <summary>
            A small number useful for comparisons, 1e-20
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.HalfPi">
            <summary>
            Half of <see cref="F:System.Math.PI"/>.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.TwoPi">
            <summary>
            Twice <see cref="F:System.Math.PI"/>.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.ThreeHalvesPi">
            <summary>
            Three-halves <see cref="F:System.Math.PI"/>.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.RadiansPerDegree">
            <summary>
            The number of radians in a degree.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.DegreesPerRadian">
            <summary>
            The number of degrees in a radian.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.DegreesPerRevolution">
            <summary>
            The number of degrees in a complete revolution.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.MinutesPerDegree">
            <summary>
            The number of minutes in a degree.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.SecondsPerDegree">
            <summary>
            The number of seconds in a degree.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.SecondsPerMinute">
            <summary>
            The number of seconds in a minute.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.DegreesPerHour">
            <summary>
            The number of degrees in an hour.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.RadiansPerArcSecond">
            <summary>
            The number of radians in one arc second.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Constants.ArcSecondsPerRadian">
            <summary>
            The number of arc secons in one radian.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.ClockRange">
            <summary>
            Defines the behavior of a clock when its current time reaches its start or end point.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ClockRange.Unbounded">
            <summary>
            The clock can continue forever in either direction.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ClockRange.Clamped">
            <summary>
            The clock stops when either its start or end time is reached.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ClockRange.LoopStop">
            <summary>
            The clock stops when its start time is reached, but loops back to start when its end time is reached.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.ClockStep">
            <summary>
            Defines how a simulated clock advances in time.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ClockStep.SystemClock">
            <summary>
            The clock always matches the system clock.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ClockStep.SystemClockMultiplier">
            <summary>
            The clock advances by the elapsed system time between ticks, multipled by a user specified value.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ClockStep.TickDependent">
            <summary>
            The clock advances by a fixed step each tick.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CustomCesiumWriter">
            <summary>
            A <see cref="T:CesiumLanguageWriter.Advanced.CesiumPropertyWriter`1"/> used to write custom properties.  To write custom
            properties, create writers of the appropriate type (for example, <see cref="T:CesiumLanguageWriter.DoubleCesiumWriter"/>)
            and with the desired property name.  Then, after opening this <see cref="T:CesiumLanguageWriter.CustomCesiumWriter"/>,
            <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> the sub-property writers and use them to write values.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CustomCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CustomCesiumWriter.#ctor(CesiumLanguageWriter.CustomCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param>
        </member>
        <member name="M:CesiumLanguageWriter.CustomCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="T:CesiumLanguageWriter.BillboardCesiumWriter">
            <summary>
            Writes a <code>Billboard</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Billboard</code> specifies a billboard, or viewport-aligned image. The billboard is positioned in the scene by the `position` property. A billboard is sometimes called a marker.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.BillboardCesiumWriter.ColorPropertyName">
            <summary>
            The name of the <code>color</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.BillboardCesiumWriter.EyeOffsetPropertyName">
            <summary>
            The name of the <code>eyeOffset</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.BillboardCesiumWriter.HorizontalOriginPropertyName">
            <summary>
            The name of the <code>horizontalOrigin</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.BillboardCesiumWriter.ImagePropertyName">
            <summary>
            The name of the <code>image</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.BillboardCesiumWriter.PixelOffsetPropertyName">
            <summary>
            The name of the <code>pixelOffset</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.BillboardCesiumWriter.ScalePropertyName">
            <summary>
            The name of the <code>scale</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.BillboardCesiumWriter.ShowPropertyName">
            <summary>
            The name of the <code>show</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.BillboardCesiumWriter.VerticalOriginPropertyName">
            <summary>
            The name of the <code>verticalOrigin</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.#ctor(CesiumLanguageWriter.BillboardCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.OpenColorProperty">
            <summary>
            Opens and returns the writer for the <code>color</code> property.  The <code>color</code> property defines the color of the billboard.  This color value is multiplied with the values of the billboard's "image" to produce the final color.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the billboard.  This color value is multiplied with the values of the billboard's "image" to produce the final color.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the billboard.  This color value is multiplied with the values of the billboard's "image" to produce the final color.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the billboard.  This color value is multiplied with the values of the billboard's "image" to produce the final color.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgbaf</code> value.  The <code>color</code> property specifies the color of the billboard.  This color value is multiplied with the values of the billboard's "image" to produce the final color.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.OpenEyeOffsetProperty">
            <summary>
            Opens and returns the writer for the <code>eyeOffset</code> property.  The <code>eyeOffset</code> property defines the eye offset of the billboard, which is the offset in eye coordinates at which to place the billboard relative to the `position` property.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis points up, and the Z-axis points into the screen.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteEyeOffsetProperty(CesiumLanguageWriter.Cartesian)">
            <summary>
            Writes a value for the <code>eyeOffset</code> property as a <code>cartesian</code> value.  The <code>eyeOffset</code> property specifies the eye offset of the billboard, which is the offset in eye coordinates at which to place the billboard relative to the `position` property.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis points up, and the Z-axis points into the screen.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteEyeOffsetProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes a value for the <code>eyeOffset</code> property as a <code>cartesian</code> value.  The <code>eyeOffset</code> property specifies the eye offset of the billboard, which is the offset in eye coordinates at which to place the billboard relative to the `position` property.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis points up, and the Z-axis points into the screen.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteEyeOffsetProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>eyeOffset</code> property as a <code>cartesian</code> value.  The <code>eyeOffset</code> property specifies the eye offset of the billboard, which is the offset in eye coordinates at which to place the billboard relative to the `position` property.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis points up, and the Z-axis points into the screen.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.OpenHorizontalOriginProperty">
            <summary>
            Opens and returns the writer for the <code>horizontalOrigin</code> property.  The <code>horizontalOrigin</code> property defines the horizontal origin of the billboard.  It controls whether the billboard image is left-, center-, or right-aligned with the `position`.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteHorizontalOriginProperty(CesiumLanguageWriter.CesiumHorizontalOrigin)">
            <summary>
            Writes a value for the <code>horizontalOrigin</code> property as a <code>horizontalOrigin</code> value.  The <code>horizontalOrigin</code> property specifies the horizontal origin of the billboard.  It controls whether the billboard image is left-, center-, or right-aligned with the `position`.
            </summary>
            <param name="value">The horizontal origin.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.OpenImageProperty">
            <summary>
            Opens and returns the writer for the <code>image</code> property.  The <code>image</code> property defines the image displayed on the billboard, expressed as a URL.  For broadest client compatibility, the URL should be accessible via Cross-Origin Resource Sharing (CORS).  The URL may also be a <a href="https://developer.mozilla.org/en/data_URIs">data URI</a>.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteImageProperty(CesiumLanguageWriter.CesiumResource)">
            <summary>
            Writes a value for the <code>image</code> property as a <code>image</code> value.  The <code>image</code> property specifies the image displayed on the billboard, expressed as a URL.  For broadest client compatibility, the URL should be accessible via Cross-Origin Resource Sharing (CORS).  The URL may also be a <a href="https://developer.mozilla.org/en/data_URIs">data URI</a>.
            </summary>
            <param name="resource">A resource object describing the image.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteImageProperty(System.String,CesiumLanguageWriter.CesiumResourceBehavior)">
            <summary>
            Writes a value for the <code>image</code> property as a <code>image</code> value.  The <code>image</code> property specifies the image displayed on the billboard, expressed as a URL.  For broadest client compatibility, the URL should be accessible via Cross-Origin Resource Sharing (CORS).  The URL may also be a <a href="https://developer.mozilla.org/en/data_URIs">data URI</a>.
            </summary>
            <param name="url">The URL of the image.</param>
            <param name="resourceBehavior">An enumeration describing how to include the image in the document. For even more control, use the overload that takes a ICesiumUrlResolver.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteImageProperty(System.String,CesiumLanguageWriter.Advanced.ICesiumUrlResolver)">
            <summary>
            Writes a value for the <code>image</code> property as a <code>image</code> value.  The <code>image</code> property specifies the image displayed on the billboard, expressed as a URL.  For broadest client compatibility, the URL should be accessible via Cross-Origin Resource Sharing (CORS).  The URL may also be a <a href="https://developer.mozilla.org/en/data_URIs">data URI</a>.
            </summary>
            <param name="url">The URL of the image.  The provided ICesiumUrlResolver will be used to build the final URL embedded in the document.</param>
            <param name="resolver">An ICesiumUrlResolver used to build the final URL that will be embedded in the document.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteImageProperty(System.Drawing.Image)">
            <summary>
            Writes a value for the <code>image</code> property as a <code>image</code> value.  The <code>image</code> property specifies the image displayed on the billboard, expressed as a URL.  For broadest client compatibility, the URL should be accessible via Cross-Origin Resource Sharing (CORS).  The URL may also be a <a href="https://developer.mozilla.org/en/data_URIs">data URI</a>.
            </summary>
            <param name="image">The image.  A data URI will be created for this image, using PNG encoding.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteImageProperty(System.Drawing.Image,CesiumLanguageWriter.CesiumImageFormat)">
            <summary>
            Writes a value for the <code>image</code> property as a <code>image</code> value.  The <code>image</code> property specifies the image displayed on the billboard, expressed as a URL.  For broadest client compatibility, the URL should be accessible via Cross-Origin Resource Sharing (CORS).  The URL may also be a <a href="https://developer.mozilla.org/en/data_URIs">data URI</a>.
            </summary>
            <param name="image">The image.  A data URI will be created for this image.</param>
            <param name="imageFormat">The image format to use to encode the image in the data URI.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.OpenPixelOffsetProperty">
            <summary>
            Opens and returns the writer for the <code>pixelOffset</code> property.  The <code>pixelOffset</code> property defines the offset, in viewport pixels, of the billboard origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the billboard, relative to the `position`.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WritePixelOffsetProperty(CesiumLanguageWriter.Rectangular)">
            <summary>
            Writes a value for the <code>pixelOffset</code> property as a <code>cartesian2</code> value.  The <code>pixelOffset</code> property specifies the offset, in viewport pixels, of the billboard origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the billboard, relative to the `position`.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WritePixelOffsetProperty(System.Double,System.Double)">
            <summary>
            Writes a value for the <code>pixelOffset</code> property as a <code>cartesian2</code> value.  The <code>pixelOffset</code> property specifies the offset, in viewport pixels, of the billboard origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the billboard, relative to the `position`.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WritePixelOffsetProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Rectangular})">
            <summary>
            Writes a value for the <code>pixelOffset</code> property as a <code>cartesian2</code> value.  The <code>pixelOffset</code> property specifies the offset, in viewport pixels, of the billboard origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the billboard, relative to the `position`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WritePixelOffsetProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Rectangular},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>pixelOffset</code> property as a <code>cartesian2</code> value.  The <code>pixelOffset</code> property specifies the offset, in viewport pixels, of the billboard origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the billboard, relative to the `position`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.OpenScaleProperty">
            <summary>
            Opens and returns the writer for the <code>scale</code> property.  The <code>scale</code> property defines the scale of the billboard.  The scale is multiplied with the pixel size of the billboard's `image`.  For example, if the scale is 2.0, the billboard will be rendered with twice the number of pixels, in each direction, of the `image`.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteScaleProperty(System.Double)">
            <summary>
            Writes a value for the <code>scale</code> property as a <code>number</code> value.  The <code>scale</code> property specifies the scale of the billboard.  The scale is multiplied with the pixel size of the billboard's `image`.  For example, if the scale is 2.0, the billboard will be rendered with twice the number of pixels, in each direction, of the `image`.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteScaleProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>scale</code> property as a <code>number</code> value.  The <code>scale</code> property specifies the scale of the billboard.  The scale is multiplied with the pixel size of the billboard's `image`.  For example, if the scale is 2.0, the billboard will be rendered with twice the number of pixels, in each direction, of the `image`.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.OpenShowProperty">
            <summary>
            Opens and returns the writer for the <code>show</code> property.  The <code>show</code> property defines whether or not the billboard is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteShowProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>show</code> property as a <code>boolean</code> value.  The <code>show</code> property specifies whether or not the billboard is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.OpenVerticalOriginProperty">
            <summary>
            Opens and returns the writer for the <code>verticalOrigin</code> property.  The <code>verticalOrigin</code> property defines the vertical origin of the billboard.  It controls whether the billboard image is bottom-, center-, or top-aligned with the `position`.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BillboardCesiumWriter.WriteVerticalOriginProperty(CesiumLanguageWriter.CesiumVerticalOrigin)">
            <summary>
            Writes a value for the <code>verticalOrigin</code> property as a <code>verticalOrigin</code> value.  The <code>verticalOrigin</code> property specifies the vertical origin of the billboard.  It controls whether the billboard image is bottom-, center-, or top-aligned with the `position`.
            </summary>
            <param name="value">The vertical origin.</param>
        </member>
        <member name="P:CesiumLanguageWriter.BillboardCesiumWriter.ColorWriter">
            <summary>
            Gets the writer for the <code>color</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>color</code> property defines the color of the billboard.  This color value is multiplied with the values of the billboard's "image" to produce the final color.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.BillboardCesiumWriter.EyeOffsetWriter">
            <summary>
            Gets the writer for the <code>eyeOffset</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>eyeOffset</code> property defines the eye offset of the billboard, which is the offset in eye coordinates at which to place the billboard relative to the `position` property.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis points up, and the Z-axis points into the screen.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.BillboardCesiumWriter.HorizontalOriginWriter">
            <summary>
            Gets the writer for the <code>horizontalOrigin</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>horizontalOrigin</code> property defines the horizontal origin of the billboard.  It controls whether the billboard image is left-, center-, or right-aligned with the `position`.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.BillboardCesiumWriter.ImageWriter">
            <summary>
            Gets the writer for the <code>image</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>image</code> property defines the image displayed on the billboard, expressed as a URL.  For broadest client compatibility, the URL should be accessible via Cross-Origin Resource Sharing (CORS).  The URL may also be a <a href="https://developer.mozilla.org/en/data_URIs">data URI</a>.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.BillboardCesiumWriter.PixelOffsetWriter">
            <summary>
            Gets the writer for the <code>pixelOffset</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>pixelOffset</code> property defines the offset, in viewport pixels, of the billboard origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the billboard, relative to the `position`.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.BillboardCesiumWriter.ScaleWriter">
            <summary>
            Gets the writer for the <code>scale</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>scale</code> property defines the scale of the billboard.  The scale is multiplied with the pixel size of the billboard's `image`.  For example, if the scale is 2.0, the billboard will be rendered with twice the number of pixels, in each direction, of the `image`.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.BillboardCesiumWriter.ShowWriter">
            <summary>
            Gets the writer for the <code>show</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>show</code> property defines whether or not the billboard is shown.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.BillboardCesiumWriter.VerticalOriginWriter">
            <summary>
            Gets the writer for the <code>verticalOrigin</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>verticalOrigin</code> property defines the vertical origin of the billboard.  It controls whether the billboard image is bottom-, center-, or top-aligned with the `position`.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.BooleanCesiumWriter">
            <summary>
            Writes a <code>Boolean</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Boolean</code> a boolean value.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.BooleanCesiumWriter.BooleanPropertyName">
            <summary>
            The name of the <code>boolean</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BooleanCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.BooleanCesiumWriter.#ctor(CesiumLanguageWriter.BooleanCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.BooleanCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.BooleanCesiumWriter.WriteBoolean(System.Boolean)">
            <summary>
            Writes the <code>boolean</code> property.  The <code>boolean</code> property specifies the boolean value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.BooleanCesiumWriter.AsBoolean">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>Boolean</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.CameraCesiumWriter">
            <summary>
            Writes a <code>Camera</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Camera</code> a camera.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.CameraCesiumWriter.EnablePropertyName">
            <summary>
            The name of the <code>enable</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CameraCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CameraCesiumWriter.#ctor(CesiumLanguageWriter.CameraCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.CameraCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.CameraCesiumWriter.OpenEnableProperty">
            <summary>
            Opens and returns the writer for the <code>enable</code> property.  The <code>enable</code> property defines whether or not the camera is enabled.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.CameraCesiumWriter.WriteEnableProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>enable</code> property as a <code>boolean</code> value.  The <code>enable</code> property specifies whether or not the camera is enabled.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:CesiumLanguageWriter.CameraCesiumWriter.EnableWriter">
            <summary>
            Gets the writer for the <code>enable</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>enable</code> property defines whether or not the camera is enabled.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.ClockCesiumWriter">
            <summary>
            Writes a <code>Clock</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Clock</code> defines a simulated clock.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ClockCesiumWriter.CurrentTimePropertyName">
            <summary>
            The name of the <code>currentTime</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ClockCesiumWriter.MultiplierPropertyName">
            <summary>
            The name of the <code>multiplier</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ClockCesiumWriter.RangePropertyName">
            <summary>
            The name of the <code>range</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ClockCesiumWriter.StepPropertyName">
            <summary>
            The name of the <code>step</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ClockCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ClockCesiumWriter.#ctor(CesiumLanguageWriter.ClockCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.ClockCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.ClockCesiumWriter.WriteCurrentTime(CesiumLanguageWriter.JulianDate)">
            <summary>
            Writes the <code>currentTime</code> property.  The <code>currentTime</code> property specifies the current time.
            </summary>
            <param name="value">The time.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ClockCesiumWriter.WriteMultiplier(System.Double)">
            <summary>
            Writes the <code>multiplier</code> property.  The <code>multiplier</code> property specifies the multiplier, which in TICK_DEPENDENT mode is the number of seconds to advance each tick.  In SYSTEM_CLOCK_DEPENDENT mode, it is the multiplier applied to the amount of time elapsed between ticks.  This value is ignored in SYSTEM_CLOCK mode.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ClockCesiumWriter.WriteRange(CesiumLanguageWriter.ClockRange)">
            <summary>
            Writes the <code>range</code> property.  The <code>range</code> property specifies the behavior of a clock when its current time reaches its start or end points.  Valid values are 'UNBOUNDED', 'CLAMPED', and 'LOOP_STOP'.
            </summary>
            <param name="value">The clock range.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ClockCesiumWriter.WriteStep(CesiumLanguageWriter.ClockStep)">
            <summary>
            Writes the <code>step</code> property.  The <code>step</code> property specifies defines how a clock steps in time.  Valid values are 'SYSTEM_CLOCK', 'SYSTEM_CLOCK_MULTIPLIER', and 'TICK_DEPENDENT'.
            </summary>
            <param name="value">The clock step.</param>
        </member>
        <member name="T:CesiumLanguageWriter.ColorCesiumWriter">
            <summary>
            Writes a <code>Color</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Color</code> defines a a color.  The color can optionally vary over time.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ColorCesiumWriter.RgbaPropertyName">
            <summary>
            The name of the <code>rgba</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ColorCesiumWriter.RgbafPropertyName">
            <summary>
            The name of the <code>rgbaf</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ColorCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ColorCesiumWriter.#ctor(CesiumLanguageWriter.ColorCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.ColorCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.ColorCesiumWriter.WriteRgba(System.Drawing.Color)">
            <summary>
            Writes the <code>rgba</code> property.  The <code>rgba</code> property specifies the color specified as an array of color components [Red, Green, Blue, Alpha] where each component is in the range 0-255. If the array has four elements, the color is constant. If it has five or more elements, they are time-tagged samples arranged as [Time, Red, Green, Blue, Alpha, Time, Red, Green, Blue, Alpha, ...], where Time is an ISO 8601 date and time string or seconds since epoch.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ColorCesiumWriter.WriteRgba(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes the <code>rgba</code> property.  The <code>rgba</code> property specifies the color specified as an array of color components [Red, Green, Blue, Alpha] where each component is in the range 0-255. If the array has four elements, the color is constant. If it has five or more elements, they are time-tagged samples arranged as [Time, Red, Green, Blue, Alpha, Time, Red, Green, Blue, Alpha, ...], where Time is an ISO 8601 date and time string or seconds since epoch.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ColorCesiumWriter.WriteRgba(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes the <code>rgba</code> property.  The <code>rgba</code> property specifies the color specified as an array of color components [Red, Green, Blue, Alpha] where each component is in the range 0-255. If the array has four elements, the color is constant. If it has five or more elements, they are time-tagged samples arranged as [Time, Red, Green, Blue, Alpha, Time, Red, Green, Blue, Alpha, ...], where Time is an ISO 8601 date and time string or seconds since epoch.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ColorCesiumWriter.WriteRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes the <code>rgbaf</code> property.  The <code>rgbaf</code> property specifies the color specified as an array of color components [Red, Green, Blue, Alpha] where each component is in the range 0.0-1.0. If the array has four elements, the color is constant. If it has five or more elements, they are time-tagged samples arranged as [Time, Red, Green, Blue, Alpha, Time, Red, Green, Blue, Alpha, ...], where Time is an ISO 8601 date and time string or seconds since epoch.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ColorCesiumWriter.AsRgba">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1"/> to write a value in <code>Rgba</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.ConeCesiumWriter">
            <summary>
            Writes a <code>Cone</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Cone</code> a cone.  A cone starts at a point or apex and extends in a circle of directions which all have the same angular separation from the Z-axis of the object to which the cone is attached.  The cone may be capped at a radial limit, it may have an inner hole, and it may be only a part of a complete cone defined by clock angle limits.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.ShowPropertyName">
            <summary>
            The name of the <code>show</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.InnerHalfAnglePropertyName">
            <summary>
            The name of the <code>innerHalfAngle</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.OuterHalfAnglePropertyName">
            <summary>
            The name of the <code>outerHalfAngle</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.RadiusPropertyName">
            <summary>
            The name of the <code>radius</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.MinimumClockAnglePropertyName">
            <summary>
            The name of the <code>minimumClockAngle</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.MaximumClockAnglePropertyName">
            <summary>
            The name of the <code>maximumClockAngle</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.ShowIntersectionPropertyName">
            <summary>
            The name of the <code>showIntersection</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.IntersectionColorPropertyName">
            <summary>
            The name of the <code>intersectionColor</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.CapMaterialPropertyName">
            <summary>
            The name of the <code>capMaterial</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.InnerMaterialPropertyName">
            <summary>
            The name of the <code>innerMaterial</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.OuterMaterialPropertyName">
            <summary>
            The name of the <code>outerMaterial</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ConeCesiumWriter.SilhouetteMaterialPropertyName">
            <summary>
            The name of the <code>silhouetteMaterial</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.#ctor(CesiumLanguageWriter.ConeCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenShowProperty">
            <summary>
            Opens and returns the writer for the <code>show</code> property.  The <code>show</code> property defines whether or not the cone is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteShowProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>show</code> property as a <code>boolean</code> value.  The <code>show</code> property specifies whether or not the cone is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenInnerHalfAngleProperty">
            <summary>
            Opens and returns the writer for the <code>innerHalfAngle</code> property.  The <code>innerHalfAngle</code> property defines the inner half angle of the cone.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteInnerHalfAngleProperty(System.Double)">
            <summary>
            Writes a value for the <code>innerHalfAngle</code> property as a <code>number</code> value.  The <code>innerHalfAngle</code> property specifies the inner half angle of the cone.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteInnerHalfAngleProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>innerHalfAngle</code> property as a <code>number</code> value.  The <code>innerHalfAngle</code> property specifies the inner half angle of the cone.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenOuterHalfAngleProperty">
            <summary>
            Opens and returns the writer for the <code>outerHalfAngle</code> property.  The <code>outerHalfAngle</code> property defines the outer half angle of the cone.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteOuterHalfAngleProperty(System.Double)">
            <summary>
            Writes a value for the <code>outerHalfAngle</code> property as a <code>number</code> value.  The <code>outerHalfAngle</code> property specifies the outer half angle of the cone.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteOuterHalfAngleProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outerHalfAngle</code> property as a <code>number</code> value.  The <code>outerHalfAngle</code> property specifies the outer half angle of the cone.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenRadiusProperty">
            <summary>
            Opens and returns the writer for the <code>radius</code> property.  The <code>radius</code> property defines the radial limit of the cone.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteRadiusProperty(System.Double)">
            <summary>
            Writes a value for the <code>radius</code> property as a <code>number</code> value.  The <code>radius</code> property specifies the radial limit of the cone.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteRadiusProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>radius</code> property as a <code>number</code> value.  The <code>radius</code> property specifies the radial limit of the cone.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenMinimumClockAngleProperty">
            <summary>
            Opens and returns the writer for the <code>minimumClockAngle</code> property.  The <code>minimumClockAngle</code> property defines the minimum clock angle limit of the cone.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteMinimumClockAngleProperty(System.Double)">
            <summary>
            Writes a value for the <code>minimumClockAngle</code> property as a <code>number</code> value.  The <code>minimumClockAngle</code> property specifies the minimum clock angle limit of the cone.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteMinimumClockAngleProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>minimumClockAngle</code> property as a <code>number</code> value.  The <code>minimumClockAngle</code> property specifies the minimum clock angle limit of the cone.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenMaximumClockAngleProperty">
            <summary>
            Opens and returns the writer for the <code>maximumClockAngle</code> property.  The <code>maximumClockAngle</code> property defines the maximum clock angle limit of the cone.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteMaximumClockAngleProperty(System.Double)">
            <summary>
            Writes a value for the <code>maximumClockAngle</code> property as a <code>number</code> value.  The <code>maximumClockAngle</code> property specifies the maximum clock angle limit of the cone.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteMaximumClockAngleProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>maximumClockAngle</code> property as a <code>number</code> value.  The <code>maximumClockAngle</code> property specifies the maximum clock angle limit of the cone.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenShowIntersectionProperty">
            <summary>
            Opens and returns the writer for the <code>showIntersection</code> property.  The <code>showIntersection</code> property defines whether or not the intersection of the cone with the Earth is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteShowIntersectionProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>showIntersection</code> property as a <code>boolean</code> value.  The <code>showIntersection</code> property specifies whether or not the intersection of the cone with the Earth is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenIntersectionColorProperty">
            <summary>
            Opens and returns the writer for the <code>intersectionColor</code> property.  The <code>intersectionColor</code> property defines the color of the intersection of the cone with the Earth.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteIntersectionColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>intersectionColor</code> property as a <code>rgba</code> value.  The <code>intersectionColor</code> property specifies the color of the intersection of the cone with the Earth.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteIntersectionColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>intersectionColor</code> property as a <code>rgba</code> value.  The <code>intersectionColor</code> property specifies the color of the intersection of the cone with the Earth.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteIntersectionColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>intersectionColor</code> property as a <code>rgba</code> value.  The <code>intersectionColor</code> property specifies the color of the intersection of the cone with the Earth.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.WriteIntersectionColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>intersectionColor</code> property as a <code>rgbaf</code> value.  The <code>intersectionColor</code> property specifies the color of the intersection of the cone with the Earth.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenCapMaterialProperty">
            <summary>
            Opens and returns the writer for the <code>capMaterial</code> property.  The <code>capMaterial</code> property defines the material to use to cap the cone at its radial limit.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenInnerMaterialProperty">
            <summary>
            Opens and returns the writer for the <code>innerMaterial</code> property.  The <code>innerMaterial</code> property defines the material to use for the inner cone.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenOuterMaterialProperty">
            <summary>
            Opens and returns the writer for the <code>outerMaterial</code> property.  The <code>outerMaterial</code> property defines the material to use for the outer cone.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ConeCesiumWriter.OpenSilhouetteMaterialProperty">
            <summary>
            Opens and returns the writer for the <code>silhouetteMaterial</code> property.  The <code>silhouetteMaterial</code> property defines the material to use for the cone's silhouette.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.ShowWriter">
            <summary>
            Gets the writer for the <code>show</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>show</code> property defines whether or not the cone is shown.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.InnerHalfAngleWriter">
            <summary>
            Gets the writer for the <code>innerHalfAngle</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>innerHalfAngle</code> property defines the inner half angle of the cone.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.OuterHalfAngleWriter">
            <summary>
            Gets the writer for the <code>outerHalfAngle</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>outerHalfAngle</code> property defines the outer half angle of the cone.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.RadiusWriter">
            <summary>
            Gets the writer for the <code>radius</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>radius</code> property defines the radial limit of the cone.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.MinimumClockAngleWriter">
            <summary>
            Gets the writer for the <code>minimumClockAngle</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>minimumClockAngle</code> property defines the minimum clock angle limit of the cone.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.MaximumClockAngleWriter">
            <summary>
            Gets the writer for the <code>maximumClockAngle</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>maximumClockAngle</code> property defines the maximum clock angle limit of the cone.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.ShowIntersectionWriter">
            <summary>
            Gets the writer for the <code>showIntersection</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>showIntersection</code> property defines whether or not the intersection of the cone with the Earth is shown.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.IntersectionColorWriter">
            <summary>
            Gets the writer for the <code>intersectionColor</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>intersectionColor</code> property defines the color of the intersection of the cone with the Earth.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.CapMaterialWriter">
            <summary>
            Gets the writer for the <code>capMaterial</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>capMaterial</code> property defines the material to use to cap the cone at its radial limit.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.InnerMaterialWriter">
            <summary>
            Gets the writer for the <code>innerMaterial</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>innerMaterial</code> property defines the material to use for the inner cone.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.OuterMaterialWriter">
            <summary>
            Gets the writer for the <code>outerMaterial</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>outerMaterial</code> property defines the material to use for the outer cone.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.ConeCesiumWriter.SilhouetteMaterialWriter">
            <summary>
            Gets the writer for the <code>silhouetteMaterial</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>silhouetteMaterial</code> property defines the material to use for the cone's silhouette.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.DirectionListCesiumWriter">
            <summary>
            Writes a <code>DirectionList</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>DirectionList</code> a list of directions.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.DirectionListCesiumWriter.UnitSphericalPropertyName">
            <summary>
            The name of the <code>unitSpherical</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.DirectionListCesiumWriter.UnitCartesianPropertyName">
            <summary>
            The name of the <code>unitCartesian</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.DirectionListCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.DirectionListCesiumWriter.#ctor(CesiumLanguageWriter.DirectionListCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.DirectionListCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.DirectionListCesiumWriter.WriteUnitSpherical(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.UnitSpherical})">
            <summary>
            Writes the <code>unitSpherical</code> property.  The <code>unitSpherical</code> property specifies the list of directions represented as a clock angle and a cone angle, both in radians.  The clock angle is measured in the XY plane from the positive X axis toward the positive Y axis.  The cone angle is the angle from the positive Z axis toward the negative Z axis.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CesiumLanguageWriter.DirectionListCesiumWriter.WriteUnitCartesian(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.UnitCartesian})">
            <summary>
            Writes the <code>unitCartesian</code> property.  The <code>unitCartesian</code> property specifies the list of directions represented as Cartesian `[X, Y, Z, X, Y, Z, ...]`.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CesiumLanguageWriter.DirectionListCesiumWriter.AsUnitSpherical">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>UnitSpherical</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.DirectionListCesiumWriter.AsUnitCartesian">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>UnitCartesian</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.DoubleCesiumWriter">
            <summary>
            Writes a <code>Double</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Double</code> a floating-point value.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.DoubleCesiumWriter.NumberPropertyName">
            <summary>
            The name of the <code>number</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.DoubleCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.DoubleCesiumWriter.#ctor(CesiumLanguageWriter.DoubleCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.DoubleCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.DoubleCesiumWriter.WriteNumber(System.Double)">
            <summary>
            Writes the <code>number</code> property.  The <code>number</code> property specifies the floating-point value. The value may be a single number, in which case the value is constant over the interval, or it may be an array.  If it is an array and the array has one element, the value is constant over the interval. If it has two or more elements, they are time-tagged samples arranged as [Time, Value, Time, Value, ...], where Time is an ISO 8601 date and time string or seconds since epoch.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.DoubleCesiumWriter.WriteNumber(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes the <code>number</code> property.  The <code>number</code> property specifies the floating-point value. The value may be a single number, in which case the value is constant over the interval, or it may be an array.  If it is an array and the array has one element, the value is constant over the interval. If it has two or more elements, they are time-tagged samples arranged as [Time, Value, Time, Value, ...], where Time is an ISO 8601 date and time string or seconds since epoch.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.DoubleCesiumWriter.AsNumber">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1"/> to write a value in <code>Number</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.EllipseCesiumWriter">
            <summary>
            Writes a <code>Ellipse</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Ellipse</code> defines an ellipse, which is a closed curve on the surface of the Earth
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.EllipseCesiumWriter.SemiMajorAxisPropertyName">
            <summary>
            The name of the <code>semiMajorAxis</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.EllipseCesiumWriter.SemiMinorAxisPropertyName">
            <summary>
            The name of the <code>semiMinorAxis</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.EllipseCesiumWriter.BearingPropertyName">
            <summary>
            The name of the <code>bearing</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.#ctor(CesiumLanguageWriter.EllipseCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.OpenSemiMajorAxisProperty">
            <summary>
            Opens and returns the writer for the <code>semiMajorAxis</code> property.  The <code>semiMajorAxis</code> property defines the length of the ellipse's semi-major axis in meters.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.WriteSemiMajorAxisProperty(System.Double)">
            <summary>
            Writes a value for the <code>semiMajorAxis</code> property as a <code>number</code> value.  The <code>semiMajorAxis</code> property specifies the length of the ellipse's semi-major axis in meters.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.WriteSemiMajorAxisProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>semiMajorAxis</code> property as a <code>number</code> value.  The <code>semiMajorAxis</code> property specifies the length of the ellipse's semi-major axis in meters.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.OpenSemiMinorAxisProperty">
            <summary>
            Opens and returns the writer for the <code>semiMinorAxis</code> property.  The <code>semiMinorAxis</code> property defines the length of the ellipse's semi-minor axis in meters.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.WriteSemiMinorAxisProperty(System.Double)">
            <summary>
            Writes a value for the <code>semiMinorAxis</code> property as a <code>number</code> value.  The <code>semiMinorAxis</code> property specifies the length of the ellipse's semi-minor axis in meters.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.WriteSemiMinorAxisProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>semiMinorAxis</code> property as a <code>number</code> value.  The <code>semiMinorAxis</code> property specifies the length of the ellipse's semi-minor axis in meters.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.OpenBearingProperty">
            <summary>
            Opens and returns the writer for the <code>bearing</code> property.  The <code>bearing</code> property defines the angle from north (clockwise) in radians.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.WriteBearingProperty(System.Double)">
            <summary>
            Writes a value for the <code>bearing</code> property as a <code>number</code> value.  The <code>bearing</code> property specifies the angle from north (clockwise) in radians.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipseCesiumWriter.WriteBearingProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>bearing</code> property as a <code>number</code> value.  The <code>bearing</code> property specifies the angle from north (clockwise) in radians.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="P:CesiumLanguageWriter.EllipseCesiumWriter.SemiMajorAxisWriter">
            <summary>
            Gets the writer for the <code>semiMajorAxis</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>semiMajorAxis</code> property defines the length of the ellipse's semi-major axis in meters.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.EllipseCesiumWriter.SemiMinorAxisWriter">
            <summary>
            Gets the writer for the <code>semiMinorAxis</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>semiMinorAxis</code> property defines the length of the ellipse's semi-minor axis in meters.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.EllipseCesiumWriter.BearingWriter">
            <summary>
            Gets the writer for the <code>bearing</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>bearing</code> property defines the angle from north (clockwise) in radians.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.EllipsoidCesiumWriter">
            <summary>
            Writes a <code>Ellipsoid</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Ellipsoid</code> defines a closed quadric surface that is a three dimensional analogue of an ellipse.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.EllipsoidCesiumWriter.ShowPropertyName">
            <summary>
            The name of the <code>show</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.EllipsoidCesiumWriter.RadiiPropertyName">
            <summary>
            The name of the <code>radii</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.EllipsoidCesiumWriter.MaterialPropertyName">
            <summary>
            The name of the <code>material</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidCesiumWriter.#ctor(CesiumLanguageWriter.EllipsoidCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidCesiumWriter.OpenShowProperty">
            <summary>
            Opens and returns the writer for the <code>show</code> property.  The <code>show</code> property defines whether or not the ellipsoid is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidCesiumWriter.WriteShowProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>show</code> property as a <code>boolean</code> value.  The <code>show</code> property specifies whether or not the ellipsoid is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidCesiumWriter.OpenRadiiProperty">
            <summary>
            Opens and returns the writer for the <code>radii</code> property.  The <code>radii</code> property defines the dimensions of the ellipsoid.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidCesiumWriter.WriteRadiiProperty(CesiumLanguageWriter.Cartesian)">
            <summary>
            Writes a value for the <code>radii</code> property as a <code>cartesian</code> value.  The <code>radii</code> property specifies the dimensions of the ellipsoid.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidCesiumWriter.WriteRadiiProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes a value for the <code>radii</code> property as a <code>cartesian</code> value.  The <code>radii</code> property specifies the dimensions of the ellipsoid.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidCesiumWriter.WriteRadiiProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>radii</code> property as a <code>cartesian</code> value.  The <code>radii</code> property specifies the dimensions of the ellipsoid.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidCesiumWriter.OpenMaterialProperty">
            <summary>
            Opens and returns the writer for the <code>material</code> property.  The <code>material</code> property defines the material to display on the surface of the ellipsoid.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.EllipsoidCesiumWriter.ShowWriter">
            <summary>
            Gets the writer for the <code>show</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>show</code> property defines whether or not the ellipsoid is shown.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.EllipsoidCesiumWriter.RadiiWriter">
            <summary>
            Gets the writer for the <code>radii</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>radii</code> property defines the dimensions of the ellipsoid.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.EllipsoidCesiumWriter.MaterialWriter">
            <summary>
            Gets the writer for the <code>material</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>material</code> property defines the material to display on the surface of the ellipsoid.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.EllipsoidRadiiCesiumWriter">
            <summary>
            Writes a <code>EllipsoidRadii</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>EllipsoidRadii</code> defines the radii of an ellipsoid.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.EllipsoidRadiiCesiumWriter.CartesianPropertyName">
            <summary>
            The name of the <code>cartesian</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidRadiiCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidRadiiCesiumWriter.#ctor(CesiumLanguageWriter.EllipsoidRadiiCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidRadiiCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidRadiiCesiumWriter.WriteCartesian(CesiumLanguageWriter.Cartesian)">
            <summary>
            Writes the <code>cartesian</code> property.  The <code>cartesian</code> property specifies the radii as a Cartesian `[X, Y, Z]` in meters. If the array has three elements, the radii are constant.  If it has four or more elements, they are time-tagged samples arranged as `[Time, X, Y, Z, Time, X, Y, Z, Time, X, Y, Z, ...]`, where _Time_ is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidRadiiCesiumWriter.WriteCartesian(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes the <code>cartesian</code> property.  The <code>cartesian</code> property specifies the radii as a Cartesian `[X, Y, Z]` in meters. If the array has three elements, the radii are constant.  If it has four or more elements, they are time-tagged samples arranged as `[Time, X, Y, Z, Time, X, Y, Z, Time, X, Y, Z, ...]`, where _Time_ is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidRadiiCesiumWriter.WriteCartesian(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian},System.Int32,System.Int32)">
            <summary>
            Writes the <code>cartesian</code> property.  The <code>cartesian</code> property specifies the radii as a Cartesian `[X, Y, Z]` in meters. If the array has three elements, the radii are constant.  If it has four or more elements, they are time-tagged samples arranged as `[Time, X, Y, Z, Time, X, Y, Z, Time, X, Y, Z, ...]`, where _Time_ is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EllipsoidRadiiCesiumWriter.AsCartesian">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1"/> to write a value in <code>Cartesian</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.EyeOffsetCesiumWriter">
            <summary>
            Writes a <code>EyeOffset</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>EyeOffset</code> defines an offset in eye coordinates which can optionally vary over time.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis poitns up, and the Z-axis points into the screen.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.EyeOffsetCesiumWriter.CartesianPropertyName">
            <summary>
            The name of the <code>cartesian</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EyeOffsetCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.EyeOffsetCesiumWriter.#ctor(CesiumLanguageWriter.EyeOffsetCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.EyeOffsetCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.EyeOffsetCesiumWriter.WriteCartesian(CesiumLanguageWriter.Cartesian)">
            <summary>
            Writes the <code>cartesian</code> property.  The <code>cartesian</code> property specifies the eye offset specified as a Cartesian `[X, Y, Z]` position in eye coordinates in  meters.  If the array has three elements, the eye offset is constant.  If it has four or more elements, they are time-tagged samples arranged as `[Time, X, Y, Z, Time, X, Y, Z, Time, X, Y, Z, ...]`, where _Time_ is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EyeOffsetCesiumWriter.WriteCartesian(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes the <code>cartesian</code> property.  The <code>cartesian</code> property specifies the eye offset specified as a Cartesian `[X, Y, Z]` position in eye coordinates in  meters.  If the array has three elements, the eye offset is constant.  If it has four or more elements, they are time-tagged samples arranged as `[Time, X, Y, Z, Time, X, Y, Z, Time, X, Y, Z, ...]`, where _Time_ is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EyeOffsetCesiumWriter.WriteCartesian(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian},System.Int32,System.Int32)">
            <summary>
            Writes the <code>cartesian</code> property.  The <code>cartesian</code> property specifies the eye offset specified as a Cartesian `[X, Y, Z]` position in eye coordinates in  meters.  If the array has three elements, the eye offset is constant.  If it has four or more elements, they are time-tagged samples arranged as `[Time, X, Y, Z, Time, X, Y, Z, Time, X, Y, Z, ...]`, where _Time_ is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.EyeOffsetCesiumWriter.AsCartesian">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1"/> to write a value in <code>Cartesian</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.FontCesiumWriter">
            <summary>
            Writes a <code>Font</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Font</code> tODO
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.FontCesiumWriter.FontPropertyName">
            <summary>
            The name of the <code>font</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.FontCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.FontCesiumWriter.#ctor(CesiumLanguageWriter.FontCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.FontCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.FontCesiumWriter.WriteFont(System.String)">
            <summary>
            Writes the <code>font</code> property.  The <code>font</code> property specifies the font.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:CesiumLanguageWriter.FontCesiumWriter.AsFont">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>Font</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.GridMaterialCesiumWriter">
            <summary>
            Writes a <code>GridMaterial</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>GridMaterial</code> fills the surface with a two dimensional grid.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.GridMaterialCesiumWriter.ColorPropertyName">
            <summary>
            The name of the <code>color</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.GridMaterialCesiumWriter.CellAlphaPropertyName">
            <summary>
            The name of the <code>cellAlpha</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.GridMaterialCesiumWriter.RowCountPropertyName">
            <summary>
            The name of the <code>rowCount</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.GridMaterialCesiumWriter.ColumnCountPropertyName">
            <summary>
            The name of the <code>columnCount</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.GridMaterialCesiumWriter.RowThicknessPropertyName">
            <summary>
            The name of the <code>rowThickness</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.GridMaterialCesiumWriter.ColumnThicknessPropertyName">
            <summary>
            The name of the <code>columnThickness</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.#ctor(CesiumLanguageWriter.GridMaterialCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.OpenColorProperty">
            <summary>
            Opens and returns the writer for the <code>color</code> property.  The <code>color</code> property defines the color of the surface.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the surface.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the surface.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the surface.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgbaf</code> value.  The <code>color</code> property specifies the color of the surface.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.OpenCellAlphaProperty">
            <summary>
            Opens and returns the writer for the <code>cellAlpha</code> property.  The <code>cellAlpha</code> property defines alpha value for the space between grid lines.  This will be combined with the color alpha.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteCellAlphaProperty(System.Double)">
            <summary>
            Writes a value for the <code>cellAlpha</code> property as a <code>number</code> value.  The <code>cellAlpha</code> property specifies alpha value for the space between grid lines.  This will be combined with the color alpha.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteCellAlphaProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>cellAlpha</code> property as a <code>number</code> value.  The <code>cellAlpha</code> property specifies alpha value for the space between grid lines.  This will be combined with the color alpha.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.OpenRowCountProperty">
            <summary>
            Opens and returns the writer for the <code>rowCount</code> property.  The <code>rowCount</code> property defines the number of horizontal grid lines.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteRowCountProperty(System.Double)">
            <summary>
            Writes a value for the <code>rowCount</code> property as a <code>number</code> value.  The <code>rowCount</code> property specifies the number of horizontal grid lines.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteRowCountProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>rowCount</code> property as a <code>number</code> value.  The <code>rowCount</code> property specifies the number of horizontal grid lines.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.OpenColumnCountProperty">
            <summary>
            Opens and returns the writer for the <code>columnCount</code> property.  The <code>columnCount</code> property defines the number of vertical grid lines.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteColumnCountProperty(System.Double)">
            <summary>
            Writes a value for the <code>columnCount</code> property as a <code>number</code> value.  The <code>columnCount</code> property specifies the number of vertical grid lines.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteColumnCountProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>columnCount</code> property as a <code>number</code> value.  The <code>columnCount</code> property specifies the number of vertical grid lines.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.OpenRowThicknessProperty">
            <summary>
            Opens and returns the writer for the <code>rowThickness</code> property.  The <code>rowThickness</code> property defines the thickness of horizontal grid lines, in pixels.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteRowThicknessProperty(System.Double)">
            <summary>
            Writes a value for the <code>rowThickness</code> property as a <code>number</code> value.  The <code>rowThickness</code> property specifies the thickness of horizontal grid lines, in pixels.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteRowThicknessProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>rowThickness</code> property as a <code>number</code> value.  The <code>rowThickness</code> property specifies the thickness of horizontal grid lines, in pixels.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.OpenColumnThicknessProperty">
            <summary>
            Opens and returns the writer for the <code>columnThickness</code> property.  The <code>columnThickness</code> property defines the thickness of vertical grid lines, in pixels.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteColumnThicknessProperty(System.Double)">
            <summary>
            Writes a value for the <code>columnThickness</code> property as a <code>number</code> value.  The <code>columnThickness</code> property specifies the thickness of vertical grid lines, in pixels.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GridMaterialCesiumWriter.WriteColumnThicknessProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>columnThickness</code> property as a <code>number</code> value.  The <code>columnThickness</code> property specifies the thickness of vertical grid lines, in pixels.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="P:CesiumLanguageWriter.GridMaterialCesiumWriter.ColorWriter">
            <summary>
            Gets the writer for the <code>color</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>color</code> property defines the color of the surface.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GridMaterialCesiumWriter.CellAlphaWriter">
            <summary>
            Gets the writer for the <code>cellAlpha</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>cellAlpha</code> property defines alpha value for the space between grid lines.  This will be combined with the color alpha.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GridMaterialCesiumWriter.RowCountWriter">
            <summary>
            Gets the writer for the <code>rowCount</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>rowCount</code> property defines the number of horizontal grid lines.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GridMaterialCesiumWriter.ColumnCountWriter">
            <summary>
            Gets the writer for the <code>columnCount</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>columnCount</code> property defines the number of vertical grid lines.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GridMaterialCesiumWriter.RowThicknessWriter">
            <summary>
            Gets the writer for the <code>rowThickness</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>rowThickness</code> property defines the thickness of horizontal grid lines, in pixels.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GridMaterialCesiumWriter.ColumnThicknessWriter">
            <summary>
            Gets the writer for the <code>columnThickness</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>columnThickness</code> property defines the thickness of vertical grid lines, in pixels.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.HorizontalOriginCesiumWriter">
            <summary>
            Writes a <code>HorizontalOrigin</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>HorizontalOrigin</code> defines the horizontal origin of an element, which can optionally vary over time.  It controls whether the element is left-, center-, or right-aligned with the `position`.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.HorizontalOriginCesiumWriter.HorizontalOriginPropertyName">
            <summary>
            The name of the <code>horizontalOrigin</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.HorizontalOriginCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.HorizontalOriginCesiumWriter.#ctor(CesiumLanguageWriter.HorizontalOriginCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.HorizontalOriginCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.HorizontalOriginCesiumWriter.WriteHorizontalOrigin(CesiumLanguageWriter.CesiumHorizontalOrigin)">
            <summary>
            Writes the <code>horizontalOrigin</code> property.  The <code>horizontalOrigin</code> property specifies the horizontal origin.  Valid values are "LEFT", "CENTER", and "RIGHT".
            </summary>
            <param name="value">The horizontal origin.</param>
        </member>
        <member name="M:CesiumLanguageWriter.HorizontalOriginCesiumWriter.AsHorizontalOrigin">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>HorizontalOrigin</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.ImageCesiumWriter">
            <summary>
            Writes a <code>Image</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Image</code> defines an image associated with an element, which can optionally vary over time.  The image is specified as a URL.  For broadest client compatibility, the URL should be accessible via Cross-Origin Resource Sharing (CORS).  The URL may also be a <a href="https://developer.mozilla.org/en/data_URIs">data URI</a>.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ImageCesiumWriter.ImagePropertyName">
            <summary>
            The name of the <code>image</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ImageCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ImageCesiumWriter.#ctor(CesiumLanguageWriter.ImageCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.ImageCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.ImageCesiumWriter.WriteImage(CesiumLanguageWriter.CesiumResource)">
            <summary>
            Writes the <code>image</code> property.  The <code>image</code> property specifies the URL of the image.
            </summary>
            <param name="resource">A resource object describing the image.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ImageCesiumWriter.WriteImage(System.String,CesiumLanguageWriter.CesiumResourceBehavior)">
            <summary>
            Writes the <code>image</code> property.  The <code>image</code> property specifies the URL of the image.
            </summary>
            <param name="url">The URL of the image.</param>
            <param name="resourceBehavior">An enumeration describing how to include the image in the document. For even more control, use the overload that takes a ICesiumUrlResolver.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ImageCesiumWriter.WriteImage(System.String,CesiumLanguageWriter.Advanced.ICesiumUrlResolver)">
            <summary>
            Writes the <code>image</code> property.  The <code>image</code> property specifies the URL of the image.
            </summary>
            <param name="url">The URL of the image.  The provided ICesiumUrlResolver will be used to build the final URL embedded in the document.</param>
            <param name="resolver">An ICesiumUrlResolver used to build the final URL that will be embedded in the document.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ImageCesiumWriter.WriteImage(System.Drawing.Image)">
            <summary>
            Writes the <code>image</code> property.  The <code>image</code> property specifies the URL of the image.
            </summary>
            <param name="image">The image.  A data URI will be created for this image, using PNG encoding.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ImageCesiumWriter.WriteImage(System.Drawing.Image,CesiumLanguageWriter.CesiumImageFormat)">
            <summary>
            Writes the <code>image</code> property.  The <code>image</code> property specifies the URL of the image.
            </summary>
            <param name="image">The image.  A data URI will be created for this image.</param>
            <param name="imageFormat">The image format to use to encode the image in the data URI.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ImageCesiumWriter.AsImage">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>Image</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.ImageMaterialCesiumWriter">
            <summary>
            Writes a <code>ImageMaterial</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>ImageMaterial</code> fills the surface with an image.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.ImageMaterialCesiumWriter.ImagePropertyName">
            <summary>
            The name of the <code>image</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ImageMaterialCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ImageMaterialCesiumWriter.#ctor(CesiumLanguageWriter.ImageMaterialCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.ImageMaterialCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.ImageMaterialCesiumWriter.OpenImageProperty">
            <summary>
            Opens and returns the writer for the <code>image</code> property.  The <code>image</code> property defines the image to display on the surface.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.ImageMaterialCesiumWriter.WriteImageProperty(CesiumLanguageWriter.CesiumResource)">
            <summary>
            Writes a value for the <code>image</code> property as a <code>image</code> value.  The <code>image</code> property specifies the image to display on the surface.
            </summary>
            <param name="resource">A resource object describing the image.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ImageMaterialCesiumWriter.WriteImageProperty(System.String,CesiumLanguageWriter.CesiumResourceBehavior)">
            <summary>
            Writes a value for the <code>image</code> property as a <code>image</code> value.  The <code>image</code> property specifies the image to display on the surface.
            </summary>
            <param name="url">The URL of the image.</param>
            <param name="resourceBehavior">An enumeration describing how to include the image in the document. For even more control, use the overload that takes a ICesiumUrlResolver.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ImageMaterialCesiumWriter.WriteImageProperty(System.String,CesiumLanguageWriter.Advanced.ICesiumUrlResolver)">
            <summary>
            Writes a value for the <code>image</code> property as a <code>image</code> value.  The <code>image</code> property specifies the image to display on the surface.
            </summary>
            <param name="url">The URL of the image.  The provided ICesiumUrlResolver will be used to build the final URL embedded in the document.</param>
            <param name="resolver">An ICesiumUrlResolver used to build the final URL that will be embedded in the document.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ImageMaterialCesiumWriter.WriteImageProperty(System.Drawing.Image)">
            <summary>
            Writes a value for the <code>image</code> property as a <code>image</code> value.  The <code>image</code> property specifies the image to display on the surface.
            </summary>
            <param name="image">The image.  A data URI will be created for this image, using PNG encoding.</param>
        </member>
        <member name="M:CesiumLanguageWriter.ImageMaterialCesiumWriter.WriteImageProperty(System.Drawing.Image,CesiumLanguageWriter.CesiumImageFormat)">
            <summary>
            Writes a value for the <code>image</code> property as a <code>image</code> value.  The <code>image</code> property specifies the image to display on the surface.
            </summary>
            <param name="image">The image.  A data URI will be created for this image.</param>
            <param name="imageFormat">The image format to use to encode the image in the data URI.</param>
        </member>
        <member name="P:CesiumLanguageWriter.ImageMaterialCesiumWriter.ImageWriter">
            <summary>
            Gets the writer for the <code>image</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>image</code> property defines the image to display on the surface.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.LabelCesiumWriter">
            <summary>
            Writes a <code>Label</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Label</code> a string of text.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.EyeOffsetPropertyName">
            <summary>
            The name of the <code>eyeOffset</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.FillColorPropertyName">
            <summary>
            The name of the <code>fillColor</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.FontPropertyName">
            <summary>
            The name of the <code>font</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.HorizontalOriginPropertyName">
            <summary>
            The name of the <code>horizontalOrigin</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.OutlineColorPropertyName">
            <summary>
            The name of the <code>outlineColor</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.OutlineWidthPropertyName">
            <summary>
            The name of the <code>outlineWidth</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.PixelOffsetPropertyName">
            <summary>
            The name of the <code>pixelOffset</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.ScalePropertyName">
            <summary>
            The name of the <code>scale</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.ShowPropertyName">
            <summary>
            The name of the <code>show</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.StylePropertyName">
            <summary>
            The name of the <code>style</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.TextPropertyName">
            <summary>
            The name of the <code>text</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelCesiumWriter.VerticalOriginPropertyName">
            <summary>
            The name of the <code>verticalOrigin</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.#ctor(CesiumLanguageWriter.LabelCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenEyeOffsetProperty">
            <summary>
            Opens and returns the writer for the <code>eyeOffset</code> property.  The <code>eyeOffset</code> property defines the eye offset of the label, which is the offset in eye coordinates at which to place the label relative to the `position` property.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis points up, and the Z-axis points into the screen.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteEyeOffsetProperty(CesiumLanguageWriter.Cartesian)">
            <summary>
            Writes a value for the <code>eyeOffset</code> property as a <code>cartesian</code> value.  The <code>eyeOffset</code> property specifies the eye offset of the label, which is the offset in eye coordinates at which to place the label relative to the `position` property.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis points up, and the Z-axis points into the screen.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteEyeOffsetProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes a value for the <code>eyeOffset</code> property as a <code>cartesian</code> value.  The <code>eyeOffset</code> property specifies the eye offset of the label, which is the offset in eye coordinates at which to place the label relative to the `position` property.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis points up, and the Z-axis points into the screen.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteEyeOffsetProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>eyeOffset</code> property as a <code>cartesian</code> value.  The <code>eyeOffset</code> property specifies the eye offset of the label, which is the offset in eye coordinates at which to place the label relative to the `position` property.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis points up, and the Z-axis points into the screen.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenFillColorProperty">
            <summary>
            Opens and returns the writer for the <code>fillColor</code> property.  The <code>fillColor</code> property defines the fill color of the label.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteFillColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>fillColor</code> property as a <code>rgba</code> value.  The <code>fillColor</code> property specifies the fill color of the label.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteFillColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>fillColor</code> property as a <code>rgba</code> value.  The <code>fillColor</code> property specifies the fill color of the label.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteFillColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>fillColor</code> property as a <code>rgba</code> value.  The <code>fillColor</code> property specifies the fill color of the label.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteFillColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>fillColor</code> property as a <code>rgbaf</code> value.  The <code>fillColor</code> property specifies the fill color of the label.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenFontProperty">
            <summary>
            Opens and returns the writer for the <code>font</code> property.  The <code>font</code> property defines the font to use for the label.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteFontProperty(System.String)">
            <summary>
            Writes a value for the <code>font</code> property as a <code>font</code> value.  The <code>font</code> property specifies the font to use for the label.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenHorizontalOriginProperty">
            <summary>
            Opens and returns the writer for the <code>horizontalOrigin</code> property.  The <code>horizontalOrigin</code> property defines the horizontal origin of the label.  It controls whether the label is left-, center-, or right-aligned with the `position`.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteHorizontalOriginProperty(CesiumLanguageWriter.CesiumHorizontalOrigin)">
            <summary>
            Writes a value for the <code>horizontalOrigin</code> property as a <code>horizontalOrigin</code> value.  The <code>horizontalOrigin</code> property specifies the horizontal origin of the label.  It controls whether the label is left-, center-, or right-aligned with the `position`.
            </summary>
            <param name="value">The horizontal origin.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenOutlineColorProperty">
            <summary>
            Opens and returns the writer for the <code>outlineColor</code> property.  The <code>outlineColor</code> property defines the outline color of the label.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteOutlineColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the outline color of the label.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteOutlineColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the outline color of the label.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteOutlineColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the outline color of the label.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteOutlineColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgbaf</code> value.  The <code>outlineColor</code> property specifies the outline color of the label.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenOutlineWidthProperty">
            <summary>
            Opens and returns the writer for the <code>outlineWidth</code> property.  The <code>outlineWidth</code> property defines the outline width of the label.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteOutlineWidthProperty(System.Double)">
            <summary>
            Writes a value for the <code>outlineWidth</code> property as a <code>number</code> value.  The <code>outlineWidth</code> property specifies the outline width of the label.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteOutlineWidthProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineWidth</code> property as a <code>number</code> value.  The <code>outlineWidth</code> property specifies the outline width of the label.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenPixelOffsetProperty">
            <summary>
            Opens and returns the writer for the <code>pixelOffset</code> property.  The <code>pixelOffset</code> property defines the offset, in viewport pixels, of the label origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the label, relative to the `position`.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WritePixelOffsetProperty(CesiumLanguageWriter.Rectangular)">
            <summary>
            Writes a value for the <code>pixelOffset</code> property as a <code>cartesian2</code> value.  The <code>pixelOffset</code> property specifies the offset, in viewport pixels, of the label origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the label, relative to the `position`.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WritePixelOffsetProperty(System.Double,System.Double)">
            <summary>
            Writes a value for the <code>pixelOffset</code> property as a <code>cartesian2</code> value.  The <code>pixelOffset</code> property specifies the offset, in viewport pixels, of the label origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the label, relative to the `position`.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WritePixelOffsetProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Rectangular})">
            <summary>
            Writes a value for the <code>pixelOffset</code> property as a <code>cartesian2</code> value.  The <code>pixelOffset</code> property specifies the offset, in viewport pixels, of the label origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the label, relative to the `position`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WritePixelOffsetProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Rectangular},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>pixelOffset</code> property as a <code>cartesian2</code> value.  The <code>pixelOffset</code> property specifies the offset, in viewport pixels, of the label origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the label, relative to the `position`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenScaleProperty">
            <summary>
            Opens and returns the writer for the <code>scale</code> property.  The <code>scale</code> property defines the scale of the label.  The scale is multiplied with the pixel size of the label's text.  For example, if the scale is 2.0, the label will be rendered with twice the number of pixels, in each direction, of the text.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteScaleProperty(System.Double)">
            <summary>
            Writes a value for the <code>scale</code> property as a <code>number</code> value.  The <code>scale</code> property specifies the scale of the label.  The scale is multiplied with the pixel size of the label's text.  For example, if the scale is 2.0, the label will be rendered with twice the number of pixels, in each direction, of the text.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteScaleProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>scale</code> property as a <code>number</code> value.  The <code>scale</code> property specifies the scale of the label.  The scale is multiplied with the pixel size of the label's text.  For example, if the scale is 2.0, the label will be rendered with twice the number of pixels, in each direction, of the text.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenShowProperty">
            <summary>
            Opens and returns the writer for the <code>show</code> property.  The <code>show</code> property defines whether or not the label is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteShowProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>show</code> property as a <code>boolean</code> value.  The <code>show</code> property specifies whether or not the label is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenStyleProperty">
            <summary>
            Opens and returns the writer for the <code>style</code> property.  The <code>style</code> property defines the style of the label.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteStyleProperty(CesiumLanguageWriter.CesiumLabelStyle)">
            <summary>
            Writes a value for the <code>style</code> property as a <code>labelStyle</code> value.  The <code>style</code> property specifies the style of the label.
            </summary>
            <param name="value">The label style.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenTextProperty">
            <summary>
            Opens and returns the writer for the <code>text</code> property.  The <code>text</code> property defines the text displayed by the label.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteTextProperty(System.String)">
            <summary>
            Writes a value for the <code>text</code> property as a <code>string</code> value.  The <code>text</code> property specifies the text displayed by the label.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.OpenVerticalOriginProperty">
            <summary>
            Opens and returns the writer for the <code>verticalOrigin</code> property.  The <code>verticalOrigin</code> property defines the vertical origin of the label.  It controls whether the label image is bottom-, center-, or top-aligned with the `position`.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelCesiumWriter.WriteVerticalOriginProperty(CesiumLanguageWriter.CesiumVerticalOrigin)">
            <summary>
            Writes a value for the <code>verticalOrigin</code> property as a <code>verticalOrigin</code> value.  The <code>verticalOrigin</code> property specifies the vertical origin of the label.  It controls whether the label image is bottom-, center-, or top-aligned with the `position`.
            </summary>
            <param name="value">The vertical origin.</param>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.EyeOffsetWriter">
            <summary>
            Gets the writer for the <code>eyeOffset</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>eyeOffset</code> property defines the eye offset of the label, which is the offset in eye coordinates at which to place the label relative to the `position` property.  Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis points up, and the Z-axis points into the screen.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.FillColorWriter">
            <summary>
            Gets the writer for the <code>fillColor</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>fillColor</code> property defines the fill color of the label.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.FontWriter">
            <summary>
            Gets the writer for the <code>font</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>font</code> property defines the font to use for the label.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.HorizontalOriginWriter">
            <summary>
            Gets the writer for the <code>horizontalOrigin</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>horizontalOrigin</code> property defines the horizontal origin of the label.  It controls whether the label is left-, center-, or right-aligned with the `position`.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.OutlineColorWriter">
            <summary>
            Gets the writer for the <code>outlineColor</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>outlineColor</code> property defines the outline color of the label.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.OutlineWidthWriter">
            <summary>
            Gets the writer for the <code>outlineWidth</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>outlineWidth</code> property defines the outline width of the label.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.PixelOffsetWriter">
            <summary>
            Gets the writer for the <code>pixelOffset</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>pixelOffset</code> property defines the offset, in viewport pixels, of the label origin from the `position`.  A pixel offset is the number of pixels up and to the right to place the label, relative to the `position`.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.ScaleWriter">
            <summary>
            Gets the writer for the <code>scale</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>scale</code> property defines the scale of the label.  The scale is multiplied with the pixel size of the label's text.  For example, if the scale is 2.0, the label will be rendered with twice the number of pixels, in each direction, of the text.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.ShowWriter">
            <summary>
            Gets the writer for the <code>show</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>show</code> property defines whether or not the label is shown.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.StyleWriter">
            <summary>
            Gets the writer for the <code>style</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>style</code> property defines the style of the label.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.TextWriter">
            <summary>
            Gets the writer for the <code>text</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>text</code> property defines the text displayed by the label.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LabelCesiumWriter.VerticalOriginWriter">
            <summary>
            Gets the writer for the <code>verticalOrigin</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>verticalOrigin</code> property defines the vertical origin of the label.  It controls whether the label image is bottom-, center-, or top-aligned with the `position`.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.LabelStyleCesiumWriter">
            <summary>
            Writes a <code>LabelStyle</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>LabelStyle</code> the style of a label.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.LabelStyleCesiumWriter.LabelStylePropertyName">
            <summary>
            The name of the <code>labelStyle</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelStyleCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LabelStyleCesiumWriter.#ctor(CesiumLanguageWriter.LabelStyleCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.LabelStyleCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.LabelStyleCesiumWriter.WriteLabelStyle(CesiumLanguageWriter.CesiumLabelStyle)">
            <summary>
            Writes the <code>labelStyle</code> property.  The <code>labelStyle</code> property specifies the label style.  Valid values are "FILL", "OUTLINE", and "FILL_AND_OUTLINE".
            </summary>
            <param name="value">The label style.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LabelStyleCesiumWriter.AsLabelStyle">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>LabelStyle</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.MaterialCesiumWriter">
            <summary>
            Writes a <code>Material</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Material</code> defines how a surface is colored or shaded.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.MaterialCesiumWriter.SolidColorPropertyName">
            <summary>
            The name of the <code>solidColor</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.MaterialCesiumWriter.ImagePropertyName">
            <summary>
            The name of the <code>image</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.MaterialCesiumWriter.GridPropertyName">
            <summary>
            The name of the <code>grid</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.MaterialCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.MaterialCesiumWriter.#ctor(CesiumLanguageWriter.MaterialCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.MaterialCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.MaterialCesiumWriter.OpenSolidColorProperty">
            <summary>
            Opens and returns the writer for the <code>solidColor</code> property.  The <code>solidColor</code> property defines fills the surface with a solid color, which may be translucent.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.MaterialCesiumWriter.OpenImageProperty">
            <summary>
            Opens and returns the writer for the <code>image</code> property.  The <code>image</code> property defines fills the surface with an image.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.MaterialCesiumWriter.OpenGridProperty">
            <summary>
            Opens and returns the writer for the <code>grid</code> property.  The <code>grid</code> property defines fills the surface with a grid.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.MaterialCesiumWriter.SolidColorWriter">
            <summary>
            Gets the writer for the <code>solidColor</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>solidColor</code> property defines fills the surface with a solid color, which may be translucent.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.MaterialCesiumWriter.ImageWriter">
            <summary>
            Gets the writer for the <code>image</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>image</code> property defines fills the surface with an image.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.MaterialCesiumWriter.GridWriter">
            <summary>
            Gets the writer for the <code>grid</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>grid</code> property defines fills the surface with a grid.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.OrientationCesiumWriter">
            <summary>
            Writes a <code>Orientation</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Orientation</code> defines an orientation.  An orientation is a rotation that takes a vector expressed in the "body" axes of the object and transforms it to the set of axes identified by the `axes` property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.OrientationCesiumWriter.AxesPropertyName">
            <summary>
            The name of the <code>axes</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.OrientationCesiumWriter.UnitQuaternionPropertyName">
            <summary>
            The name of the <code>unitQuaternion</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.OrientationCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.OrientationCesiumWriter.#ctor(CesiumLanguageWriter.OrientationCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.OrientationCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.OrientationCesiumWriter.WriteAxes(System.String)">
            <summary>
            Writes the <code>axes</code> property.  The <code>axes</code> property specifies tODO
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.OrientationCesiumWriter.WriteUnitQuaternion(CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Writes the <code>unitQuaternion</code> property.  The <code>unitQuaternion</code> property specifies tODO
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.OrientationCesiumWriter.WriteUnitQuaternion(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.UnitQuaternion})">
            <summary>
            Writes the <code>unitQuaternion</code> property.  The <code>unitQuaternion</code> property specifies tODO
            </summary>
            <param name="dates">The dates at which the rotation is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.OrientationCesiumWriter.WriteUnitQuaternion(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.UnitQuaternion},System.Int32,System.Int32)">
            <summary>
            Writes the <code>unitQuaternion</code> property.  The <code>unitQuaternion</code> property specifies tODO
            </summary>
            <param name="dates">The dates at which the rotation is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.OrientationCesiumWriter.AsUnitQuaternion">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1"/> to write a value in <code>UnitQuaternion</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.PacketCesiumWriter">
            <summary>
            Writes a <code>Packet</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Packet</code> describes the graphical properties of a single object in a scene, such as a single aircraft.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.IdPropertyName">
            <summary>
            The name of the <code>id</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.AvailabilityPropertyName">
            <summary>
            The name of the <code>availability</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.PositionPropertyName">
            <summary>
            The name of the <code>position</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.BillboardPropertyName">
            <summary>
            The name of the <code>billboard</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.VertexPositionsPropertyName">
            <summary>
            The name of the <code>vertexPositions</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.OrientationPropertyName">
            <summary>
            The name of the <code>orientation</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.PointPropertyName">
            <summary>
            The name of the <code>point</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.LabelPropertyName">
            <summary>
            The name of the <code>label</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.PolylinePropertyName">
            <summary>
            The name of the <code>polyline</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.PathPropertyName">
            <summary>
            The name of the <code>path</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.PolygonPropertyName">
            <summary>
            The name of the <code>polygon</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.ConePropertyName">
            <summary>
            The name of the <code>cone</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.PyramidPropertyName">
            <summary>
            The name of the <code>pyramid</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.CameraPropertyName">
            <summary>
            The name of the <code>camera</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.EllipsoidPropertyName">
            <summary>
            The name of the <code>ellipsoid</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.ViewFromPropertyName">
            <summary>
            The name of the <code>viewFrom</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.EllipsePropertyName">
            <summary>
            The name of the <code>ellipse</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PacketCesiumWriter.ClockPropertyName">
            <summary>
            The name of the <code>clock</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OnOpen">
            <summary>
            Writes the start of a new JSON object representing the packet.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OnClose">
            <summary>
            Writes the end of the JSON object representing the packet.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteId(System.String)">
            <summary>
            Writes the <code>id</code> property.  The <code>id</code> property specifies the ID of the object described by this packet.  IDs do not need to be GUIDs, but they do need to uniquely identify a single object within a CZML source and any other CZML sources loaded into the same scope.  If this property is not specified, the client will automatically generate a unique one.  However, this prevents later packets from referring to this object in order to, for example, add more data to it.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteAvailability(CesiumLanguageWriter.TimeInterval)">
            <summary>
            Writes the <code>availability</code> property.  The <code>availability</code> property specifies when data for an object is available. If data for an object is known to be available at the current animation time, but the client does not yet have that data (presumably because it will arrive in a later packet), the client will pause with a message like "Buffering..." while it waits to receive the data. The property can be a single string specifying a single interval, or an array of strings representing intervals.  A later Cesium packet can update this availability if it changes or is found to be incorrect. For example, an SGP4 propagator may report availability for all time, but then later the propagator throws an exception and the availability needs to be adjusted. If this optional property is not present, the object is assumed to be available for all time. Availability is scoped to a particular CZML stream, so two different streams can list different availability for a single object. Within a single stream, the last availability stated for an object is the one in effect and any availabilities in previous packets are ignored. If an object is available at a time, the client expects the object to have at least one property, and it expects all properties that it needs to be defined at that time. If the object doesn't have any properties, or a needed property is defined but not at the animation time, the client will pause animation and wait for more data.
            </summary>
            <param name="value">The interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteAvailability(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Writes the <code>availability</code> property.  The <code>availability</code> property specifies when data for an object is available. If data for an object is known to be available at the current animation time, but the client does not yet have that data (presumably because it will arrive in a later packet), the client will pause with a message like "Buffering..." while it waits to receive the data. The property can be a single string specifying a single interval, or an array of strings representing intervals.  A later Cesium packet can update this availability if it changes or is found to be incorrect. For example, an SGP4 propagator may report availability for all time, but then later the propagator throws an exception and the availability needs to be adjusted. If this optional property is not present, the object is assumed to be available for all time. Availability is scoped to a particular CZML stream, so two different streams can list different availability for a single object. Within a single stream, the last availability stated for an object is the one in effect and any availabilities in previous packets are ignored. If an object is available at a time, the client expects the object to have at least one property, and it expects all properties that it needs to be defined at that time. If the object doesn't have any properties, or a needed property is defined but not at the animation time, the client will pause animation and wait for more data.
            </summary>
            <param name="start">The earliest date of the interval.</param>
            <param name="stop">The latest date of the interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteAvailability(System.Collections.Generic.IList{CesiumLanguageWriter.TimeInterval})">
            <summary>
            Writes the <code>availability</code> property.  The <code>availability</code> property specifies when data for an object is available. If data for an object is known to be available at the current animation time, but the client does not yet have that data (presumably because it will arrive in a later packet), the client will pause with a message like "Buffering..." while it waits to receive the data. The property can be a single string specifying a single interval, or an array of strings representing intervals.  A later Cesium packet can update this availability if it changes or is found to be incorrect. For example, an SGP4 propagator may report availability for all time, but then later the propagator throws an exception and the availability needs to be adjusted. If this optional property is not present, the object is assumed to be available for all time. Availability is scoped to a particular CZML stream, so two different streams can list different availability for a single object. Within a single stream, the last availability stated for an object is the one in effect and any availabilities in previous packets are ignored. If an object is available at a time, the client expects the object to have at least one property, and it expects all properties that it needs to be defined at that time. If the object doesn't have any properties, or a needed property is defined but not at the animation time, the client will pause animation and wait for more data.
            </summary>
            <param name="value">The intervals.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenPositionProperty">
            <summary>
            Opens and returns the writer for the <code>position</code> property.  The <code>position</code> property defines the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WritePositionProperty(CesiumLanguageWriter.Cartesian)">
            <summary>
            Writes a value for the <code>position</code> property as a <code>cartesian</code> value.  The <code>position</code> property specifies the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WritePositionProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes a value for the <code>position</code> property as a <code>cartesian</code> value.  The <code>position</code> property specifies the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WritePositionProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>position</code> property as a <code>cartesian</code> value.  The <code>position</code> property specifies the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WritePositionPropertyCartographicRadians(CesiumLanguageWriter.Cartographic)">
            <summary>
            Writes a value for the <code>position</code> property as a <code>cartographicRadians</code> value.  The <code>position</code> property specifies the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
            <param name="value">The interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WritePositionPropertyCartographicRadians(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartographic})">
            <summary>
            Writes a value for the <code>position</code> property as a <code>cartographicRadians</code> value.  The <code>position</code> property specifies the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
            <param name="dates">The dates at which the position is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WritePositionPropertyCartographicRadians(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartographic},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>position</code> property as a <code>cartographicRadians</code> value.  The <code>position</code> property specifies the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The position corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WritePositionPropertyCartographicDegrees(CesiumLanguageWriter.Cartographic)">
            <summary>
            Writes a value for the <code>position</code> property as a <code>cartographicDegrees</code> value.  The <code>position</code> property specifies the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
            <param name="value">The interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WritePositionPropertyCartographicDegrees(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartographic})">
            <summary>
            Writes a value for the <code>position</code> property as a <code>cartographicDegrees</code> value.  The <code>position</code> property specifies the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
            <param name="dates">The dates at which the position is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WritePositionPropertyCartographicDegrees(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartographic},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>position</code> property as a <code>cartographicDegrees</code> value.  The <code>position</code> property specifies the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The position corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenBillboardProperty">
            <summary>
            Opens and returns the writer for the <code>billboard</code> property.  The <code>billboard</code> property defines a billboard, or viewport-aligned image. The billboard is positioned in the scene by the position property. A billboard is sometimes called a marker.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenVertexPositionsProperty">
            <summary>
            Opens and returns the writer for the <code>vertexPositions</code> property.  The <code>vertexPositions</code> property defines the world-space positions of vertices.  The vertex positions have no direct visual representation, but they are used to define polygons, polylines, and other objects attached to the object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteVertexPositionsProperty(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes a value for the <code>vertexPositions</code> property as a <code>cartesian</code> value.  The <code>vertexPositions</code> property specifies the world-space positions of vertices.  The vertex positions have no direct visual representation, but they are used to define polygons, polylines, and other objects attached to the object.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteVertexPositionsPropertyCartographicRadians(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.Cartographic})">
            <summary>
            Writes a value for the <code>vertexPositions</code> property as a <code>cartographicRadians</code> value.  The <code>vertexPositions</code> property specifies the world-space positions of vertices.  The vertex positions have no direct visual representation, but they are used to define polygons, polylines, and other objects attached to the object.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteVertexPositionsPropertyCartographicDegrees(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.Cartographic})">
            <summary>
            Writes a value for the <code>vertexPositions</code> property as a <code>cartographicDegrees</code> value.  The <code>vertexPositions</code> property specifies the world-space positions of vertices.  The vertex positions have no direct visual representation, but they are used to define polygons, polylines, and other objects attached to the object.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteVertexPositionsPropertyReferences(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes a value for the <code>vertexPositions</code> property as a <code>references</code> value.  The <code>vertexPositions</code> property specifies the world-space positions of vertices.  The vertex positions have no direct visual representation, but they are used to define polygons, polylines, and other objects attached to the object.
            </summary>
            <param name="references">The list of references.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenOrientationProperty">
            <summary>
            Opens and returns the writer for the <code>orientation</code> property.  The <code>orientation</code> property defines the orientation of the object in the world.  The orientation has no direct visual representation, but it is used to orient models, cones, and pyramids attached to the object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteOrientationProperty(CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Writes a value for the <code>orientation</code> property as a <code>unitQuaternion</code> value.  The <code>orientation</code> property specifies the orientation of the object in the world.  The orientation has no direct visual representation, but it is used to orient models, cones, and pyramids attached to the object.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteOrientationProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.UnitQuaternion})">
            <summary>
            Writes a value for the <code>orientation</code> property as a <code>unitQuaternion</code> value.  The <code>orientation</code> property specifies the orientation of the object in the world.  The orientation has no direct visual representation, but it is used to orient models, cones, and pyramids attached to the object.
            </summary>
            <param name="dates">The dates at which the rotation is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteOrientationProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.UnitQuaternion},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>orientation</code> property as a <code>unitQuaternion</code> value.  The <code>orientation</code> property specifies the orientation of the object in the world.  The orientation has no direct visual representation, but it is used to orient models, cones, and pyramids attached to the object.
            </summary>
            <param name="dates">The dates at which the rotation is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenPointProperty">
            <summary>
            Opens and returns the writer for the <code>point</code> property.  The <code>point</code> property defines a point, or viewport-aligned circle.  The point is positioned in the scene by the `position` property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenLabelProperty">
            <summary>
            Opens and returns the writer for the <code>label</code> property.  The <code>label</code> property defines a string of text.  The label is positioned in the scene by the `position` property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenPolylineProperty">
            <summary>
            Opens and returns the writer for the <code>polyline</code> property.  The <code>polyline</code> property defines a polyline, which is a line in the scene composed of multiple segments.  The vertices of the polyline are specified by the `vertexPositions` property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenPathProperty">
            <summary>
            Opens and returns the writer for the <code>path</code> property.  The <code>path</code> property defines a path, which is a polyline defined by the motion of an object over time.  The possible vertices of the path are specified by the `position` property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenPolygonProperty">
            <summary>
            Opens and returns the writer for the <code>polygon</code> property.  The <code>polygon</code> property defines a polygon, which is a closed figure on the surface of the Earth.  The vertices of the polygon are specified by the `vertexPositions` property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenConeProperty">
            <summary>
            Opens and returns the writer for the <code>cone</code> property.  The <code>cone</code> property defines a cone.  A cone starts at a point or apex and extends in a circle of directions which all have the same angular separation from the Z-axis of the object to which the cone is attached.  The cone may be capped at a radial limit, it may have an inner hole, and it may be only a part of a complete cone defined by clock angle limits.  The apex point of the cone is defined by the `position` property and extends in the direction of the Z-axis as defined by the `orientation` property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenPyramidProperty">
            <summary>
            Opens and returns the writer for the <code>pyramid</code> property.  The <code>pyramid</code> property defines a pyramid.  A pyramid starts at a point or apex and extends in a specified list of directions from the apex.  Each pair of directions forms a face of the pyramid.  The pyramid may be capped at a radial limit.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenCameraProperty">
            <summary>
            Opens and returns the writer for the <code>camera</code> property.  The <code>camera</code> property defines a camera.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenEllipsoidProperty">
            <summary>
            Opens and returns the writer for the <code>ellipsoid</code> property.  The <code>ellipsoid</code> property defines an ellipsoid, which is a closed quadric surface that is a three dimensional analogue of an ellipse.  The ellipsoid is positioned and oriented using the `position` and `orientation` properties.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteViewFrom(CesiumLanguageWriter.Cartesian)">
            <summary>
            Writes the <code>viewFrom</code> property.  The <code>viewFrom</code> property specifies a suggested camera location when viewing this object.  The property is specified as a Cartesian position in the East (x), North (y), Up (z) reference frame relative to the objects position property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteViewFrom(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes the <code>viewFrom</code> property.  The <code>viewFrom</code> property specifies a suggested camera location when viewing this object.  The property is specified as a Cartesian position in the East (x), North (y), Up (z) reference frame relative to the objects position property.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.WriteViewFrom(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian},System.Int32,System.Int32)">
            <summary>
            Writes the <code>viewFrom</code> property.  The <code>viewFrom</code> property specifies a suggested camera location when viewing this object.  The property is specified as a Cartesian position in the East (x), North (y), Up (z) reference frame relative to the objects position property.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenEllipseProperty">
            <summary>
            Opens and returns the writer for the <code>ellipse</code> property.  The <code>ellipse</code> property defines an ellipse, which is a closed curve on the surface of the Earth.  The ellipse is positioned using the `position` property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PacketCesiumWriter.OpenClockProperty">
            <summary>
            Opens and returns the writer for the <code>clock</code> property.  The <code>clock</code> property defines a simulated clock.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.PositionWriter">
            <summary>
            Gets the writer for the <code>position</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>position</code> property defines the position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.BillboardWriter">
            <summary>
            Gets the writer for the <code>billboard</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>billboard</code> property defines a billboard, or viewport-aligned image. The billboard is positioned in the scene by the position property. A billboard is sometimes called a marker.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.VertexPositionsWriter">
            <summary>
            Gets the writer for the <code>vertexPositions</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>vertexPositions</code> property defines the world-space positions of vertices.  The vertex positions have no direct visual representation, but they are used to define polygons, polylines, and other objects attached to the object.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.OrientationWriter">
            <summary>
            Gets the writer for the <code>orientation</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>orientation</code> property defines the orientation of the object in the world.  The orientation has no direct visual representation, but it is used to orient models, cones, and pyramids attached to the object.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.PointWriter">
            <summary>
            Gets the writer for the <code>point</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>point</code> property defines a point, or viewport-aligned circle.  The point is positioned in the scene by the `position` property.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.LabelWriter">
            <summary>
            Gets the writer for the <code>label</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>label</code> property defines a string of text.  The label is positioned in the scene by the `position` property.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.PolylineWriter">
            <summary>
            Gets the writer for the <code>polyline</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>polyline</code> property defines a polyline, which is a line in the scene composed of multiple segments.  The vertices of the polyline are specified by the `vertexPositions` property.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.PathWriter">
            <summary>
            Gets the writer for the <code>path</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>path</code> property defines a path, which is a polyline defined by the motion of an object over time.  The possible vertices of the path are specified by the `position` property.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.PolygonWriter">
            <summary>
            Gets the writer for the <code>polygon</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>polygon</code> property defines a polygon, which is a closed figure on the surface of the Earth.  The vertices of the polygon are specified by the `vertexPositions` property.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.ConeWriter">
            <summary>
            Gets the writer for the <code>cone</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>cone</code> property defines a cone.  A cone starts at a point or apex and extends in a circle of directions which all have the same angular separation from the Z-axis of the object to which the cone is attached.  The cone may be capped at a radial limit, it may have an inner hole, and it may be only a part of a complete cone defined by clock angle limits.  The apex point of the cone is defined by the `position` property and extends in the direction of the Z-axis as defined by the `orientation` property.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.PyramidWriter">
            <summary>
            Gets the writer for the <code>pyramid</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>pyramid</code> property defines a pyramid.  A pyramid starts at a point or apex and extends in a specified list of directions from the apex.  Each pair of directions forms a face of the pyramid.  The pyramid may be capped at a radial limit.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.CameraWriter">
            <summary>
            Gets the writer for the <code>camera</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>camera</code> property defines a camera.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.EllipsoidWriter">
            <summary>
            Gets the writer for the <code>ellipsoid</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>ellipsoid</code> property defines an ellipsoid, which is a closed quadric surface that is a three dimensional analogue of an ellipse.  The ellipsoid is positioned and oriented using the `position` and `orientation` properties.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.EllipseWriter">
            <summary>
            Gets the writer for the <code>ellipse</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>ellipse</code> property defines an ellipse, which is a closed curve on the surface of the Earth.  The ellipse is positioned using the `position` property.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PacketCesiumWriter.ClockWriter">
            <summary>
            Gets the writer for the <code>clock</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>clock</code> property defines a simulated clock.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.PathCesiumWriter">
            <summary>
            Writes a <code>Path</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Path</code> a path, which is a polyline defined by the motion of an object over time.  The possible vertices of the path are specified by the `position` property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PathCesiumWriter.ShowPropertyName">
            <summary>
            The name of the <code>show</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PathCesiumWriter.ColorPropertyName">
            <summary>
            The name of the <code>color</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PathCesiumWriter.WidthPropertyName">
            <summary>
            The name of the <code>width</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PathCesiumWriter.ResolutionPropertyName">
            <summary>
            The name of the <code>resolution</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PathCesiumWriter.OutlineColorPropertyName">
            <summary>
            The name of the <code>outlineColor</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PathCesiumWriter.OutlineWidthPropertyName">
            <summary>
            The name of the <code>outlineWidth</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PathCesiumWriter.LeadTimePropertyName">
            <summary>
            The name of the <code>leadTime</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PathCesiumWriter.TrailTimePropertyName">
            <summary>
            The name of the <code>trailTime</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.#ctor(CesiumLanguageWriter.PathCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.OpenShowProperty">
            <summary>
            Opens and returns the writer for the <code>show</code> property.  The <code>show</code> property defines whether or not the path is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteShowProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>show</code> property as a <code>boolean</code> value.  The <code>show</code> property specifies whether or not the path is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.OpenColorProperty">
            <summary>
            Opens and returns the writer for the <code>color</code> property.  The <code>color</code> property defines the color of the path line.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the path line.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the path line.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the path line.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgbaf</code> value.  The <code>color</code> property specifies the color of the path line.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.OpenWidthProperty">
            <summary>
            Opens and returns the writer for the <code>width</code> property.  The <code>width</code> property defines the width of the path line.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteWidthProperty(System.Double)">
            <summary>
            Writes a value for the <code>width</code> property as a <code>number</code> value.  The <code>width</code> property specifies the width of the path line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteWidthProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>width</code> property as a <code>number</code> value.  The <code>width</code> property specifies the width of the path line.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.OpenResolutionProperty">
            <summary>
            Opens and returns the writer for the <code>resolution</code> property.  The <code>resolution</code> property defines the maximum step-size, in seconds, used to sample the path.  If the `position` property has data points farther apart than resolution specfies, additional steps will be taken, creating a smoother path.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteResolutionProperty(System.Double)">
            <summary>
            Writes a value for the <code>resolution</code> property as a <code>number</code> value.  The <code>resolution</code> property specifies the maximum step-size, in seconds, used to sample the path.  If the `position` property has data points farther apart than resolution specfies, additional steps will be taken, creating a smoother path.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteResolutionProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>resolution</code> property as a <code>number</code> value.  The <code>resolution</code> property specifies the maximum step-size, in seconds, used to sample the path.  If the `position` property has data points farther apart than resolution specfies, additional steps will be taken, creating a smoother path.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.OpenOutlineColorProperty">
            <summary>
            Opens and returns the writer for the <code>outlineColor</code> property.  The <code>outlineColor</code> property defines the color of the outline of the path.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteOutlineColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the path.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteOutlineColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the path.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteOutlineColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the path.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteOutlineColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgbaf</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the path.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.OpenOutlineWidthProperty">
            <summary>
            Opens and returns the writer for the <code>outlineWidth</code> property.  The <code>outlineWidth</code> property defines the width of the outline of the path.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteOutlineWidthProperty(System.Double)">
            <summary>
            Writes a value for the <code>outlineWidth</code> property as a <code>number</code> value.  The <code>outlineWidth</code> property specifies the width of the outline of the path.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteOutlineWidthProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineWidth</code> property as a <code>number</code> value.  The <code>outlineWidth</code> property specifies the width of the outline of the path.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.OpenLeadTimeProperty">
            <summary>
            Opens and returns the writer for the <code>leadTime</code> property.  The <code>leadTime</code> property defines the time ahead of the animation time, in seconds, to show the path.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteLeadTimeProperty(System.Double)">
            <summary>
            Writes a value for the <code>leadTime</code> property as a <code>number</code> value.  The <code>leadTime</code> property specifies the time ahead of the animation time, in seconds, to show the path.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteLeadTimeProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>leadTime</code> property as a <code>number</code> value.  The <code>leadTime</code> property specifies the time ahead of the animation time, in seconds, to show the path.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.OpenTrailTimeProperty">
            <summary>
            Opens and returns the writer for the <code>trailTime</code> property.  The <code>trailTime</code> property defines the time behind the animation time, in seconds, to show the path.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteTrailTimeProperty(System.Double)">
            <summary>
            Writes a value for the <code>trailTime</code> property as a <code>number</code> value.  The <code>trailTime</code> property specifies the time behind the animation time, in seconds, to show the path.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PathCesiumWriter.WriteTrailTimeProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>trailTime</code> property as a <code>number</code> value.  The <code>trailTime</code> property specifies the time behind the animation time, in seconds, to show the path.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="P:CesiumLanguageWriter.PathCesiumWriter.ShowWriter">
            <summary>
            Gets the writer for the <code>show</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>show</code> property defines whether or not the path is shown.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PathCesiumWriter.ColorWriter">
            <summary>
            Gets the writer for the <code>color</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>color</code> property defines the color of the path line.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PathCesiumWriter.WidthWriter">
            <summary>
            Gets the writer for the <code>width</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>width</code> property defines the width of the path line.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PathCesiumWriter.ResolutionWriter">
            <summary>
            Gets the writer for the <code>resolution</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>resolution</code> property defines the maximum step-size, in seconds, used to sample the path.  If the `position` property has data points farther apart than resolution specfies, additional steps will be taken, creating a smoother path.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PathCesiumWriter.OutlineColorWriter">
            <summary>
            Gets the writer for the <code>outlineColor</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>outlineColor</code> property defines the color of the outline of the path.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PathCesiumWriter.OutlineWidthWriter">
            <summary>
            Gets the writer for the <code>outlineWidth</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>outlineWidth</code> property defines the width of the outline of the path.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PathCesiumWriter.LeadTimeWriter">
            <summary>
            Gets the writer for the <code>leadTime</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>leadTime</code> property defines the time ahead of the animation time, in seconds, to show the path.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PathCesiumWriter.TrailTimeWriter">
            <summary>
            Gets the writer for the <code>trailTime</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>trailTime</code> property defines the time behind the animation time, in seconds, to show the path.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.PixelOffsetCesiumWriter">
            <summary>
            Writes a <code>PixelOffset</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>PixelOffset</code> defines a pixel offset in viewport coordinates.  A pixel offset is the number of pixels up and to the right to place an element relative to an origin.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PixelOffsetCesiumWriter.Cartesian2PropertyName">
            <summary>
            The name of the <code>cartesian2</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PixelOffsetCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PixelOffsetCesiumWriter.#ctor(CesiumLanguageWriter.PixelOffsetCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.PixelOffsetCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.PixelOffsetCesiumWriter.WriteCartesian2(CesiumLanguageWriter.Rectangular)">
            <summary>
            Writes the <code>cartesian2</code> property.  The <code>cartesian2</code> property specifies the pixel offset specified as a Cartesian `[X, Y]` in viewport coordinates in pixels, where X is pixels to the right and Y is pixels up.  If the array has two elements, the pixel offset is constant.  If it has three or more elements, they are time-tagged samples arranged as `[Time, X, Y, Time, X, Y, Time, X, Y, ...]`, where _Time_ is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PixelOffsetCesiumWriter.WriteCartesian2(System.Double,System.Double)">
            <summary>
            Writes the <code>cartesian2</code> property.  The <code>cartesian2</code> property specifies the pixel offset specified as a Cartesian `[X, Y]` in viewport coordinates in pixels, where X is pixels to the right and Y is pixels up.  If the array has two elements, the pixel offset is constant.  If it has three or more elements, they are time-tagged samples arranged as `[Time, X, Y, Time, X, Y, Time, X, Y, ...]`, where _Time_ is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="x">The X component.</param>
            <param name="y">The Y component.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PixelOffsetCesiumWriter.WriteCartesian2(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Rectangular})">
            <summary>
            Writes the <code>cartesian2</code> property.  The <code>cartesian2</code> property specifies the pixel offset specified as a Cartesian `[X, Y]` in viewport coordinates in pixels, where X is pixels to the right and Y is pixels up.  If the array has two elements, the pixel offset is constant.  If it has three or more elements, they are time-tagged samples arranged as `[Time, X, Y, Time, X, Y, Time, X, Y, ...]`, where _Time_ is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PixelOffsetCesiumWriter.WriteCartesian2(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Rectangular},System.Int32,System.Int32)">
            <summary>
            Writes the <code>cartesian2</code> property.  The <code>cartesian2</code> property specifies the pixel offset specified as a Cartesian `[X, Y]` in viewport coordinates in pixels, where X is pixels to the right and Y is pixels up.  If the array has two elements, the pixel offset is constant.  If it has three or more elements, they are time-tagged samples arranged as `[Time, X, Y, Time, X, Y, Time, X, Y, ...]`, where _Time_ is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PixelOffsetCesiumWriter.AsCartesian2">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1"/> to write a value in <code>Cartesian2</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.PointCesiumWriter">
            <summary>
            Writes a <code>Point</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Point</code> a point, or viewport-aligned circle.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PointCesiumWriter.ColorPropertyName">
            <summary>
            The name of the <code>color</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PointCesiumWriter.OutlineColorPropertyName">
            <summary>
            The name of the <code>outlineColor</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PointCesiumWriter.OutlineWidthPropertyName">
            <summary>
            The name of the <code>outlineWidth</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PointCesiumWriter.PixelSizePropertyName">
            <summary>
            The name of the <code>pixelSize</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PointCesiumWriter.ShowPropertyName">
            <summary>
            The name of the <code>show</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.#ctor(CesiumLanguageWriter.PointCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.OpenColorProperty">
            <summary>
            Opens and returns the writer for the <code>color</code> property.  The <code>color</code> property defines the color of the point.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the point.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the point.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the point.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgbaf</code> value.  The <code>color</code> property specifies the color of the point.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.OpenOutlineColorProperty">
            <summary>
            Opens and returns the writer for the <code>outlineColor</code> property.  The <code>outlineColor</code> property defines the color of the outline of the point.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteOutlineColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the point.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteOutlineColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the point.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteOutlineColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the point.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteOutlineColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgbaf</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the point.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.OpenOutlineWidthProperty">
            <summary>
            Opens and returns the writer for the <code>outlineWidth</code> property.  The <code>outlineWidth</code> property defines the width of the outline of the point.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteOutlineWidthProperty(System.Double)">
            <summary>
            Writes a value for the <code>outlineWidth</code> property as a <code>number</code> value.  The <code>outlineWidth</code> property specifies the width of the outline of the point.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteOutlineWidthProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineWidth</code> property as a <code>number</code> value.  The <code>outlineWidth</code> property specifies the width of the outline of the point.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.OpenPixelSizeProperty">
            <summary>
            Opens and returns the writer for the <code>pixelSize</code> property.  The <code>pixelSize</code> property defines the size of the point, in pixels.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WritePixelSizeProperty(System.Double)">
            <summary>
            Writes a value for the <code>pixelSize</code> property as a <code>number</code> value.  The <code>pixelSize</code> property specifies the size of the point, in pixels.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WritePixelSizeProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>pixelSize</code> property as a <code>number</code> value.  The <code>pixelSize</code> property specifies the size of the point, in pixels.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.OpenShowProperty">
            <summary>
            Opens and returns the writer for the <code>show</code> property.  The <code>show</code> property defines whether or not the point is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PointCesiumWriter.WriteShowProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>show</code> property as a <code>boolean</code> value.  The <code>show</code> property specifies whether or not the point is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:CesiumLanguageWriter.PointCesiumWriter.ColorWriter">
            <summary>
            Gets the writer for the <code>color</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>color</code> property defines the color of the point.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PointCesiumWriter.OutlineColorWriter">
            <summary>
            Gets the writer for the <code>outlineColor</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>outlineColor</code> property defines the color of the outline of the point.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PointCesiumWriter.OutlineWidthWriter">
            <summary>
            Gets the writer for the <code>outlineWidth</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>outlineWidth</code> property defines the width of the outline of the point.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PointCesiumWriter.PixelSizeWriter">
            <summary>
            Gets the writer for the <code>pixelSize</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>pixelSize</code> property defines the size of the point, in pixels.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PointCesiumWriter.ShowWriter">
            <summary>
            Gets the writer for the <code>show</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>show</code> property defines whether or not the point is shown.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.PolygonCesiumWriter">
            <summary>
            Writes a <code>Polygon</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Polygon</code> a polygon, which is a closed figure on the surface of the Earth.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PolygonCesiumWriter.ShowPropertyName">
            <summary>
            The name of the <code>show</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PolygonCesiumWriter.MaterialPropertyName">
            <summary>
            The name of the <code>material</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PolygonCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PolygonCesiumWriter.#ctor(CesiumLanguageWriter.PolygonCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.PolygonCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.PolygonCesiumWriter.OpenShowProperty">
            <summary>
            Opens and returns the writer for the <code>show</code> property.  The <code>show</code> property defines whether or not the billboard is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PolygonCesiumWriter.WriteShowProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>show</code> property as a <code>boolean</code> value.  The <code>show</code> property specifies whether or not the billboard is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolygonCesiumWriter.OpenMaterialProperty">
            <summary>
            Opens and returns the writer for the <code>material</code> property.  The <code>material</code> property defines the material to use to fill the polygon.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PolygonCesiumWriter.ShowWriter">
            <summary>
            Gets the writer for the <code>show</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>show</code> property defines whether or not the billboard is shown.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PolygonCesiumWriter.MaterialWriter">
            <summary>
            Gets the writer for the <code>material</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>material</code> property defines the material to use to fill the polygon.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.PolylineCesiumWriter">
            <summary>
            Writes a <code>Polyline</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Polyline</code> a polyline, which is a line in the scene composed of multiple segments.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PolylineCesiumWriter.ShowPropertyName">
            <summary>
            The name of the <code>show</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PolylineCesiumWriter.ColorPropertyName">
            <summary>
            The name of the <code>color</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PolylineCesiumWriter.WidthPropertyName">
            <summary>
            The name of the <code>width</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PolylineCesiumWriter.OutlineColorPropertyName">
            <summary>
            The name of the <code>outlineColor</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PolylineCesiumWriter.OutlineWidthPropertyName">
            <summary>
            The name of the <code>outlineWidth</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.#ctor(CesiumLanguageWriter.PolylineCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.OpenShowProperty">
            <summary>
            Opens and returns the writer for the <code>show</code> property.  The <code>show</code> property defines whether or not the polyline is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteShowProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>show</code> property as a <code>boolean</code> value.  The <code>show</code> property specifies whether or not the polyline is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.OpenColorProperty">
            <summary>
            Opens and returns the writer for the <code>color</code> property.  The <code>color</code> property defines the color of the polyline.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the polyline.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the polyline.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the polyline.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgbaf</code> value.  The <code>color</code> property specifies the color of the polyline.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.OpenWidthProperty">
            <summary>
            Opens and returns the writer for the <code>width</code> property.  The <code>width</code> property defines the width of the polyline.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteWidthProperty(System.Double)">
            <summary>
            Writes a value for the <code>width</code> property as a <code>number</code> value.  The <code>width</code> property specifies the width of the polyline.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteWidthProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>width</code> property as a <code>number</code> value.  The <code>width</code> property specifies the width of the polyline.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.OpenOutlineColorProperty">
            <summary>
            Opens and returns the writer for the <code>outlineColor</code> property.  The <code>outlineColor</code> property defines the color of the outline of the polyline.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteOutlineColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the polyline.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteOutlineColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the polyline.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteOutlineColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgba</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the polyline.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteOutlineColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>outlineColor</code> property as a <code>rgbaf</code> value.  The <code>outlineColor</code> property specifies the color of the outline of the polyline.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.OpenOutlineWidthProperty">
            <summary>
            Opens and returns the writer for the <code>outlineWidth</code> property.  The <code>outlineWidth</code> property defines the width of the outline of the polyline.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteOutlineWidthProperty(System.Double)">
            <summary>
            Writes a value for the <code>outlineWidth</code> property as a <code>number</code> value.  The <code>outlineWidth</code> property specifies the width of the outline of the polyline.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PolylineCesiumWriter.WriteOutlineWidthProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>outlineWidth</code> property as a <code>number</code> value.  The <code>outlineWidth</code> property specifies the width of the outline of the polyline.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="P:CesiumLanguageWriter.PolylineCesiumWriter.ShowWriter">
            <summary>
            Gets the writer for the <code>show</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>show</code> property defines whether or not the polyline is shown.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PolylineCesiumWriter.ColorWriter">
            <summary>
            Gets the writer for the <code>color</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>color</code> property defines the color of the polyline.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PolylineCesiumWriter.WidthWriter">
            <summary>
            Gets the writer for the <code>width</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>width</code> property defines the width of the polyline.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PolylineCesiumWriter.OutlineColorWriter">
            <summary>
            Gets the writer for the <code>outlineColor</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>outlineColor</code> property defines the color of the outline of the polyline.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PolylineCesiumWriter.OutlineWidthWriter">
            <summary>
            Gets the writer for the <code>outlineWidth</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>outlineWidth</code> property defines the width of the outline of the polyline.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.PositionCesiumWriter">
            <summary>
            Writes a <code>Position</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Position</code> defines a position.  The position can optionally vary over time.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PositionCesiumWriter.ReferenceFramePropertyName">
            <summary>
            The name of the <code>referenceFrame</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PositionCesiumWriter.CartesianPropertyName">
            <summary>
            The name of the <code>cartesian</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PositionCesiumWriter.CartographicRadiansPropertyName">
            <summary>
            The name of the <code>cartographicRadians</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PositionCesiumWriter.CartographicDegreesPropertyName">
            <summary>
            The name of the <code>cartographicDegrees</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.#ctor(CesiumLanguageWriter.PositionCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.WriteReferenceFrame(System.String)">
            <summary>
            Writes the <code>referenceFrame</code> property.  The <code>referenceFrame</code> property specifies the reference frame in which cartesian positions are specified. Possible values are "FIXED" and "INERTIAL". In addition, the value of this property can be a hash (#) symbol followed by the ID of another object in the same scope whose "position" and "orientation" properties define the reference frame in which this position is defined.  This property is ignored when specifying position with any type other than cartesian. If this property is not specified, the default reference frame is "FIXED".
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.WriteCartesian(CesiumLanguageWriter.Cartesian)">
            <summary>
            Writes the <code>cartesian</code> property.  The <code>cartesian</code> property specifies the position represented as a Cartesian `[X, Y, Z]` in the meters relative to the `referenceFrame`. If the array has three elements, the position is constant. If it has four or more elements, they are time-tagged samples arranged as `[Time, X, Y, Z, Time, X, Y, Z, Time, X, Y, Z, ...]`, where Time is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.WriteCartesian(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes the <code>cartesian</code> property.  The <code>cartesian</code> property specifies the position represented as a Cartesian `[X, Y, Z]` in the meters relative to the `referenceFrame`. If the array has three elements, the position is constant. If it has four or more elements, they are time-tagged samples arranged as `[Time, X, Y, Z, Time, X, Y, Z, Time, X, Y, Z, ...]`, where Time is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.WriteCartesian(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartesian},System.Int32,System.Int32)">
            <summary>
            Writes the <code>cartesian</code> property.  The <code>cartesian</code> property specifies the position represented as a Cartesian `[X, Y, Z]` in the meters relative to the `referenceFrame`. If the array has three elements, the position is constant. If it has four or more elements, they are time-tagged samples arranged as `[Time, X, Y, Z, Time, X, Y, Z, Time, X, Y, Z, ...]`, where Time is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The values corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.WriteCartographicRadians(CesiumLanguageWriter.Cartographic)">
            <summary>
            Writes the <code>cartographicRadians</code> property.  The <code>cartographicRadians</code> property specifies the position represented as a WGS 84 Cartographic `[Longitude, Latitude, Height]` where longitude and latitude are in radians and height is in meters. If the array has three elements, the position is constant. If it has four or more elements, they are time-tagged samples arranged as `[Time, Longitude, Latitude, Height, Time, Longitude, Latitude, Height, ...]`, where Time is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="value">The interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.WriteCartographicRadians(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartographic})">
            <summary>
            Writes the <code>cartographicRadians</code> property.  The <code>cartographicRadians</code> property specifies the position represented as a WGS 84 Cartographic `[Longitude, Latitude, Height]` where longitude and latitude are in radians and height is in meters. If the array has three elements, the position is constant. If it has four or more elements, they are time-tagged samples arranged as `[Time, Longitude, Latitude, Height, Time, Longitude, Latitude, Height, ...]`, where Time is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the position is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.WriteCartographicRadians(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartographic},System.Int32,System.Int32)">
            <summary>
            Writes the <code>cartographicRadians</code> property.  The <code>cartographicRadians</code> property specifies the position represented as a WGS 84 Cartographic `[Longitude, Latitude, Height]` where longitude and latitude are in radians and height is in meters. If the array has three elements, the position is constant. If it has four or more elements, they are time-tagged samples arranged as `[Time, Longitude, Latitude, Height, Time, Longitude, Latitude, Height, ...]`, where Time is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The position corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.WriteCartographicDegrees(CesiumLanguageWriter.Cartographic)">
            <summary>
            Writes the <code>cartographicDegrees</code> property.  The <code>cartographicDegrees</code> property specifies the position reprsented as a WGS 84 Cartographic `[Longitude, Latitude, Height]` where longitude and latitude are in degrees and height is in meters. If the array has three elements, the position is constant. If it has four or more elements, they are time-tagged samples arranged as `[Time, Longitude, Latitude, Height, Time, Longitude, Latitude, Height, ...]`, where Time is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="value">The interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.WriteCartographicDegrees(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartographic})">
            <summary>
            Writes the <code>cartographicDegrees</code> property.  The <code>cartographicDegrees</code> property specifies the position reprsented as a WGS 84 Cartographic `[Longitude, Latitude, Height]` where longitude and latitude are in degrees and height is in meters. If the array has three elements, the position is constant. If it has four or more elements, they are time-tagged samples arranged as `[Time, Longitude, Latitude, Height, Time, Longitude, Latitude, Height, ...]`, where Time is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the position is specified.</param>
            <param name="values">The values corresponding to each date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.WriteCartographicDegrees(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{CesiumLanguageWriter.Cartographic},System.Int32,System.Int32)">
            <summary>
            Writes the <code>cartographicDegrees</code> property.  The <code>cartographicDegrees</code> property specifies the position reprsented as a WGS 84 Cartographic `[Longitude, Latitude, Height]` where longitude and latitude are in degrees and height is in meters. If the array has three elements, the position is constant. If it has four or more elements, they are time-tagged samples arranged as `[Time, Longitude, Latitude, Height, Time, Longitude, Latitude, Height, ...]`, where Time is an ISO 8601 date and time string or seconds since `epoch`.
            </summary>
            <param name="dates">The dates at which the vector is specified.</param>
            <param name="values">The position corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.AsCartesian">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1"/> to write a value in <code>Cartesian</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.AsCartographicRadians">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1"/> to write a value in <code>CartographicRadians</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.PositionCesiumWriter.AsCartographicDegrees">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumInterpolatableValuePropertyWriter`1"/> to write a value in <code>CartographicDegrees</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.PositionListCesiumWriter">
            <summary>
            Writes a <code>PositionList</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>PositionList</code> a list of positions.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PositionListCesiumWriter.ReferenceFramePropertyName">
            <summary>
            The name of the <code>referenceFrame</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PositionListCesiumWriter.CartesianPropertyName">
            <summary>
            The name of the <code>cartesian</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PositionListCesiumWriter.CartographicRadiansPropertyName">
            <summary>
            The name of the <code>cartographicRadians</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PositionListCesiumWriter.CartographicDegreesPropertyName">
            <summary>
            The name of the <code>cartographicDegrees</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PositionListCesiumWriter.ReferencesPropertyName">
            <summary>
            The name of the <code>references</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.#ctor(CesiumLanguageWriter.PositionListCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.WriteReferenceFrame(System.String)">
            <summary>
            Writes the <code>referenceFrame</code> property.  The <code>referenceFrame</code> property specifies the reference frame in which cartesian positions are specified. Possible values are "FIXED" and "INERTIAL". In addition, the value of this property can be a hash (#) symbol followed by the ID of another object in the same scope whose "position" and "orientation" properties define the reference frame in which this position is defined.  This property is ignored when specifying position with any type other than cartesian. If this property is not specified, the default reference frame is "FIXED".
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.WriteCartesian(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.Cartesian})">
            <summary>
            Writes the <code>cartesian</code> property.  The <code>cartesian</code> property specifies the list of positions represented as Cartesian `[X, Y, Z, X, Y, Z, ...]` in the meters relative to the `referenceFrame`.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.WriteCartographicRadians(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.Cartographic})">
            <summary>
            Writes the <code>cartographicRadians</code> property.  The <code>cartographicRadians</code> property specifies the list of positions represented as WGS 84 `[Longitude, Latitude, Height, Longitude, Latitude, Height, ...]` where longitude and latitude are in radians and height is in meters.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.WriteCartographicDegrees(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.Cartographic})">
            <summary>
            Writes the <code>cartographicDegrees</code> property.  The <code>cartographicDegrees</code> property specifies the list of positions represented as WGS 84 `[Longitude, Latitude, Height, Longitude, Latitude, Height, ...]` where longitude and latitude are in degrees and height is in meters.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.WriteReferences(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes the <code>references</code> property.  The <code>references</code> property specifies the list of positions specified as references.  Each reference is to a property that defines a single position, possible as it changes with time.
            </summary>
            <param name="references">The list of references.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.AsCartesian">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>Cartesian</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.AsCartographicRadians">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>CartographicRadians</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.AsCartographicDegrees">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>CartographicDegrees</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.PositionListCesiumWriter.AsReferences">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>References</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.PyramidCesiumWriter">
            <summary>
            Writes a <code>Pyramid</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>Pyramid</code> a pyramid.  A pyramid starts at a point or apex and extends in a specified list of directions from the apex.  Each pair of directions forms a face of the pyramid.  The pyramid may be capped at a radial limit.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PyramidCesiumWriter.ShowPropertyName">
            <summary>
            The name of the <code>show</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PyramidCesiumWriter.DirectionsPropertyName">
            <summary>
            The name of the <code>directions</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PyramidCesiumWriter.RadiusPropertyName">
            <summary>
            The name of the <code>radius</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PyramidCesiumWriter.ShowIntersectionPropertyName">
            <summary>
            The name of the <code>showIntersection</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PyramidCesiumWriter.IntersectionColorPropertyName">
            <summary>
            The name of the <code>intersectionColor</code> property.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.PyramidCesiumWriter.MaterialPropertyName">
            <summary>
            The name of the <code>material</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.#ctor(CesiumLanguageWriter.PyramidCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.OpenShowProperty">
            <summary>
            Opens and returns the writer for the <code>show</code> property.  The <code>show</code> property defines whether or not the pyramid is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.WriteShowProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>show</code> property as a <code>boolean</code> value.  The <code>show</code> property specifies whether or not the pyramid is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.OpenDirectionsProperty">
            <summary>
            Opens and returns the writer for the <code>directions</code> property.  The <code>directions</code> property defines the list of directions defining the pyramid.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.WriteDirectionsProperty(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.UnitSpherical})">
            <summary>
            Writes a value for the <code>directions</code> property as a <code>unitSpherical</code> value.  The <code>directions</code> property specifies the list of directions defining the pyramid.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.WriteDirectionsPropertyUnitCartesian(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.UnitCartesian})">
            <summary>
            Writes a value for the <code>directions</code> property as a <code>unitCartesian</code> value.  The <code>directions</code> property specifies the list of directions defining the pyramid.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.OpenRadiusProperty">
            <summary>
            Opens and returns the writer for the <code>radius</code> property.  The <code>radius</code> property defines the radial limit of the pyramid.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.WriteRadiusProperty(System.Double)">
            <summary>
            Writes a value for the <code>radius</code> property as a <code>number</code> value.  The <code>radius</code> property specifies the radial limit of the pyramid.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.WriteRadiusProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Double},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>radius</code> property as a <code>number</code> value.  The <code>radius</code> property specifies the radial limit of the pyramid.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="values">The value corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `values` collection.</param>
            <param name="length">The number of elements to use from the `values` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.OpenShowIntersectionProperty">
            <summary>
            Opens and returns the writer for the <code>showIntersection</code> property.  The <code>showIntersection</code> property defines whether or not the intersection of the pyramid with the Earth is shown.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.WriteShowIntersectionProperty(System.Boolean)">
            <summary>
            Writes a value for the <code>showIntersection</code> property as a <code>boolean</code> value.  The <code>showIntersection</code> property specifies whether or not the intersection of the pyramid with the Earth is shown.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.OpenIntersectionColorProperty">
            <summary>
            Opens and returns the writer for the <code>intersectionColor</code> property.  The <code>intersectionColor</code> property defines the color of the intersection of the pyramid with the Earth.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.WriteIntersectionColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>intersectionColor</code> property as a <code>rgba</code> value.  The <code>intersectionColor</code> property specifies the color of the intersection of the pyramid with the Earth.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.WriteIntersectionColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>intersectionColor</code> property as a <code>rgba</code> value.  The <code>intersectionColor</code> property specifies the color of the intersection of the pyramid with the Earth.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.WriteIntersectionColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>intersectionColor</code> property as a <code>rgba</code> value.  The <code>intersectionColor</code> property specifies the color of the intersection of the pyramid with the Earth.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.WriteIntersectionColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>intersectionColor</code> property as a <code>rgbaf</code> value.  The <code>intersectionColor</code> property specifies the color of the intersection of the pyramid with the Earth.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="M:CesiumLanguageWriter.PyramidCesiumWriter.OpenMaterialProperty">
            <summary>
            Opens and returns the writer for the <code>material</code> property.  The <code>material</code> property defines the material to display on the surface of the pyramid.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PyramidCesiumWriter.ShowWriter">
            <summary>
            Gets the writer for the <code>show</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>show</code> property defines whether or not the pyramid is shown.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PyramidCesiumWriter.DirectionsWriter">
            <summary>
            Gets the writer for the <code>directions</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>directions</code> property defines the list of directions defining the pyramid.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PyramidCesiumWriter.RadiusWriter">
            <summary>
            Gets the writer for the <code>radius</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>radius</code> property defines the radial limit of the pyramid.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PyramidCesiumWriter.ShowIntersectionWriter">
            <summary>
            Gets the writer for the <code>showIntersection</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>showIntersection</code> property defines whether or not the intersection of the pyramid with the Earth is shown.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PyramidCesiumWriter.IntersectionColorWriter">
            <summary>
            Gets the writer for the <code>intersectionColor</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>intersectionColor</code> property defines the color of the intersection of the pyramid with the Earth.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.PyramidCesiumWriter.MaterialWriter">
            <summary>
            Gets the writer for the <code>material</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>material</code> property defines the material to display on the surface of the pyramid.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.SolidColorMaterialCesiumWriter">
            <summary>
            Writes a <code>SolidColorMaterial</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>SolidColorMaterial</code> fills the surface with a solid color.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.SolidColorMaterialCesiumWriter.ColorPropertyName">
            <summary>
            The name of the <code>color</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.SolidColorMaterialCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.SolidColorMaterialCesiumWriter.#ctor(CesiumLanguageWriter.SolidColorMaterialCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.SolidColorMaterialCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.SolidColorMaterialCesiumWriter.OpenColorProperty">
            <summary>
            Opens and returns the writer for the <code>color</code> property.  The <code>color</code> property defines the color of the surface.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.SolidColorMaterialCesiumWriter.WriteColorProperty(System.Drawing.Color)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the surface.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:CesiumLanguageWriter.SolidColorMaterialCesiumWriter.WriteColorProperty(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the surface.
            </summary>
            <param name="red">The red component in the range 0 to 255.</param>
            <param name="green">The green component in the range 0 to 255.</param>
            <param name="blue">The blue component in the range 0 to 255.</param>
            <param name="alpha">The alpha component in the range 0 to 255.</param>
        </member>
        <member name="M:CesiumLanguageWriter.SolidColorMaterialCesiumWriter.WriteColorProperty(System.Collections.Generic.IList{CesiumLanguageWriter.JulianDate},System.Collections.Generic.IList{System.Drawing.Color},System.Int32,System.Int32)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgba</code> value.  The <code>color</code> property specifies the color of the surface.
            </summary>
            <param name="dates">The dates at which the value is specified.</param>
            <param name="colors">The color corresponding to each date.</param>
            <param name="startIndex">The index of the first element to use in the `colors` collection.</param>
            <param name="length">The number of elements to use from the `colors` collection.</param>
        </member>
        <member name="M:CesiumLanguageWriter.SolidColorMaterialCesiumWriter.WriteColorPropertyRgbaf(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a value for the <code>color</code> property as a <code>rgbaf</code> value.  The <code>color</code> property specifies the color of the surface.
            </summary>
            <param name="red">The red component in the range 0 to 1.0.</param>
            <param name="green">The green component in the range 0 to 1.0.</param>
            <param name="blue">The blue component in the range 0 to 1.0.</param>
            <param name="alpha">The alpha component in the range 0 to 1.0.</param>
        </member>
        <member name="P:CesiumLanguageWriter.SolidColorMaterialCesiumWriter.ColorWriter">
            <summary>
            Gets the writer for the <code>color</code> property.  The returned instance must be opened by calling the <see cref="M:CesiumLanguageWriter.Advanced.CesiumElementWriter.Open(CesiumLanguageWriter.CesiumOutputStream)"/> method before it can be used for writing.  The <code>color</code> property defines the color of the surface.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.StringCesiumWriter">
            <summary>
            Writes a <code>String</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>String</code> a string value.  The string can optionally vary with time.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.StringCesiumWriter.StringPropertyName">
            <summary>
            The name of the <code>string</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.StringCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.StringCesiumWriter.#ctor(CesiumLanguageWriter.StringCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.StringCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.StringCesiumWriter.WriteString(System.String)">
            <summary>
            Writes the <code>string</code> property.  The <code>string</code> property specifies the string value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CesiumLanguageWriter.StringCesiumWriter.AsString">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>String</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.VerticalOriginCesiumWriter">
            <summary>
            Writes a <code>VerticalOrigin</code> to a <see cref="T:CesiumLanguageWriter.CesiumOutputStream"/>.  A <code>VerticalOrigin</code> defines the vertical origin of an element, which can optionally vary over time.  It controls whether the element is bottom-, center-, or top-aligned with the `position`.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.VerticalOriginCesiumWriter.VerticalOriginPropertyName">
            <summary>
            The name of the <code>verticalOrigin</code> property.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.VerticalOriginCesiumWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.VerticalOriginCesiumWriter.#ctor(CesiumLanguageWriter.VerticalOriginCesiumWriter)">
            <summary>
            Initializes a new instance as a copy of an existing instance.
            </summary>
            <param name="existingInstance">The existing instance to copy.</param> 
        </member>
        <member name="M:CesiumLanguageWriter.VerticalOriginCesiumWriter.Clone">
            <inheritdoc />
        </member>
        <member name="M:CesiumLanguageWriter.VerticalOriginCesiumWriter.WriteVerticalOrigin(CesiumLanguageWriter.CesiumVerticalOrigin)">
            <summary>
            Writes the <code>verticalOrigin</code> property.  The <code>verticalOrigin</code> property specifies the vertical origin.  Valid values are "BOTTOM", "CENTER", and "TOP".
            </summary>
            <param name="value">The vertical origin.</param>
        </member>
        <member name="M:CesiumLanguageWriter.VerticalOriginCesiumWriter.AsVerticalOrigin">
            <summary>
            Returns a wrapper for this instance that implements <see cref="T:CesiumLanguageWriter.Advanced.ICesiumValuePropertyWriter`1"/> to write a value in <code>VerticalOrigin</code> format.  Because the returned instance is a wrapper for this instance, you may call <see cref="M:CesiumLanguageWriter.Advanced.ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
            </summary>
            <returns>The wrapper.</returns>
        </member>
        <member name="T:CesiumLanguageWriter.Iso8601Format">
            <summary>
            Defines the representation of the ISO8601 date string generated by <see cref="M:CesiumLanguageWriter.GregorianDate.ToIso8601String(CesiumLanguageWriter.Iso8601Format)"/>.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Iso8601Format.Basic">
            <summary>
            A complete ISO8601 date and time in the extended format, which omits the dash and colon seperators used between time and date components.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Iso8601Format.Extended">
            <summary>
            A complete ISO8601 date and time in the extended format, which uses dash and colon seperators between time and date components.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.Iso8601Format.Compact">
            <summary>
            The shortest possible way to accurately represent an ISO8601 date and time.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.CesiumLocalization">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.ArgumentTypeInvalid">
            <summary>
              Looks up a localized string similar to The argument is not an expected type for the method..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.CannotRepresentLeapSecondAsUTCJulianDate">
            <summary>
              Looks up a localized string similar to JulianDate cannot represent the moment of a leap second with the UTC time standard..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.DayOfYearOutOfRange">
            <summary>
              Looks up a localized string similar to The Day of Year must be between 1 and 366 inclusive..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.GregorianDateFormatInvalid">
            <summary>
              Looks up a localized string similar to Invalid format string..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.GregorianDateInvalidCharacter">
            <summary>
              Looks up a localized string similar to Invalid character {0} in format specifier..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.GregorianDateInvalidCharacterAtEnd">
            <summary>
              Looks up a localized string similar to Invalid character {0} at the end of the format specifier..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.GregorianDateInvalidFormatSpecifier">
            <summary>
              Looks up a localized string similar to {0} is not one of the format specifier characters defined for DateTimeFormatInfo..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.GregorianDateOrderOfMonthAndDateNotDefined">
            <summary>
              Looks up a localized string similar to Order of month and date is not defined by {0}..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.GregorianDateOrderOfYearMonthAndDateNotDefined">
            <summary>
              Looks up a localized string similar to Order of year, month and date is not defined by {0}..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.GregorianDateOrderOfYearMonthAndDateNotSupported">
            <summary>
              Looks up a localized string similar to Order of year, month and date defined by {0} is not supported..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.GregorianDateQuoteNotTerminated">
            <summary>
              Looks up a localized string similar to A quote was not terminated..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.GregorianDateStringNotRecognized">
            <summary>
              Looks up a localized string similar to Input {0} was not recognized as a valid GregorianDate..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.HourMinuteSecondInvalidArgument">
            <summary>
              Looks up a localized string similar to One or more of the hour, minute, and second arguments is outside of the acceptable range..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.MagnitudeMustNotBeInfinite">
            <summary>
              Looks up a localized string similar to The magnitude of the provided coordinates must not be infinite..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.MagnitudeMustNotBeZero">
            <summary>
              Looks up a localized string similar to The magnitude of the provided coordinates must not be zero..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.MismatchedNumberOfDatesAndValues">
            <summary>
              Looks up a localized string similar to This collection must have the same number of elements as the &quot;dates&quot; collection..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.MustBeConstructedFromSpecificNumberOfElements">
            <summary>
              Looks up a localized string similar to An object of the type {0} must be constructed from an array with at least {1} elements..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.TaiAbbreviation">
            <summary>
              Looks up a localized string similar to TAI.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.TaiName">
            <summary>
              Looks up a localized string similar to International Atomic Time.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.UnknownEnumerationValue">
            <summary>
              Looks up a localized string similar to The enumeration has an invalid or unsupported value..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.UtcAbbreviation">
            <summary>
              Looks up a localized string similar to UTC.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.UtcName">
            <summary>
              Looks up a localized string similar to Coordinated Universal Time.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.WriterAlreadyClosed">
            <summary>
              Looks up a localized string similar to The Cesium writer cannot be closed because it is not open..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.WriterAlreadyOpen">
            <summary>
              Looks up a localized string similar to The Cesium writer cannot be opened because it is already opened.  Please close the previous element before opening a new one..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.WriterNotOpen">
            <summary>
              Looks up a localized string similar to The Cesium writer cannot be used to write elements because it is not currently open.  This usually indicates an attempt to use a writer after is has been closed..
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.CesiumLocalization.YearMonthDayInvalidArgument">
            <summary>
              Looks up a localized string similar to One or more of the year, month, and day arguments is outside of the acceptable range..
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.GregorianDate">
            <summary>
            Represents a calendar date in the Gregorian calendar.  A 
            <see cref="T:CesiumLanguageWriter.GregorianDate"/> does not include a <see cref="T:CesiumLanguageWriter.TimeStandard"/> as <see cref="T:CesiumLanguageWriter.JulianDate"/>
            does.  However, without explicitly specifying a <see cref="T:CesiumLanguageWriter.TimeStandard"/> for the date, the <see cref="T:CesiumLanguageWriter.GregorianDate"/>
            is assumed to be represented in <see cref="F:CesiumLanguageWriter.TimeStandard.CoordinatedUniversalTime"/>. <see cref="T:CesiumLanguageWriter.GregorianDate"/> is
            also capable of representing leap seconds, which are represented as the second measured from 60 to 61.  In this case,
            the <see cref="T:CesiumLanguageWriter.GregorianDate"/> is assumed to be the <see cref="F:CesiumLanguageWriter.TimeStandard.CoordinatedUniversalTime"/> represented
            in <see cref="F:CesiumLanguageWriter.TimeStandard.InternationalAtomicTime"/> which can represent leap seconds exactly.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.GregorianDate"/> from the provided values.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month of the year (in the range 1 through 12)</param>
            <param name="day">The day of the month (in the range 1 through the number of
            days in <paramref name="month"/>)</param>
            <param name="hour">The hour (in the range 0 through 23).</param>
            <param name="minute">The minute (in the range 0 through 59).</param>
            <param name="second">The second, including fractional seconds (in the range 0.0
            up to, but not including, 61.0).  A second between 60.0 and 61.0 (a leap
            second) is only valid if the overall time is during one of the official leap
            seconds. </param>
            <exception cref="T:System.ArgumentException">
            Thrown when one of the provided parameters is outside of its acceptable range.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.GregorianDate"/> from the provided values.  The
            remaining values are assumed to be zero.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month of the year (in the range 1 through 12)</param>
            <param name="day">The day of the month (in the range 1 through the number of
            days in <paramref name="month"/>)</param>
            <exception cref="T:System.ArgumentException">
            Thrown when one of the provided parameters is outside of its acceptable range.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.GregorianDate"/> from the provided values.
            </summary>
            <param name="year">The year.</param>
            <param name="dayOfYear">The day of year
            (in the range 1 through the number of days in the given year).</param>
            <param name="hour">The hour (in the range 0 through 23).</param>
            <param name="minute">The minute (in the range 0 through 59).</param>
            <param name="second">The second, including fractional seconds (in the range 0.0
            up to, but not including, 61.0).  A second between 60.0 and 61.0 (a leap
            second) is only valid if the overall time is during one of the official leap
            seconds. </param>
            <exception cref="T:System.ArgumentException">
            Thrown when one of the provided parameters is outside of its acceptable range.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.#ctor(System.Int32,System.Double)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.GregorianDate"/> from the provided values.  The
            fractional portion of the <paramref name="daysOfYear"/> will be converted into
            hours, minutes, and seconds.
            </summary>
            <param name="year">The year.</param>
            <param name="daysOfYear">The day of year plus the fractional portion of the day 
            (in the range 1 through the number of days in the given year).</param>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.#ctor(CesiumLanguageWriter.JulianDate)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.GregorianDate"/> from the provided 
            <see cref="T:CesiumLanguageWriter.JulianDate"/>.  The new <see cref="T:CesiumLanguageWriter.GregorianDate"/> will be in the
            <see cref="F:CesiumLanguageWriter.TimeStandard.CoordinatedUniversalTime"/> (UTC) time standard.
            </summary>
            <param name="julianDate">The <see cref="T:CesiumLanguageWriter.JulianDate"/>.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.#ctor(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.TimeStandard)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.GregorianDate"/> from the provided 
            <see cref="T:CesiumLanguageWriter.JulianDate"/>.  The new <see cref="T:CesiumLanguageWriter.GregorianDate"/> will be in the
            provided <see cref="T:CesiumLanguageWriter.TimeStandard"/>.
            </summary>
            <param name="julianDate">The <see cref="T:CesiumLanguageWriter.JulianDate"/>.</param>
            <param name="timeStandard">
            The <see cref="T:CesiumLanguageWriter.TimeStandard"/> to represent the new <see cref="T:CesiumLanguageWriter.GregorianDate"/>
            in.
            </param>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.#ctor(System.DateTime)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.GregorianDate"/> from the provided 
            <see cref="T:System.DateTime"/>.  If the provided <see cref="T:System.DateTime"/> is in local
            time, it is converted to UTC.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime"/>.</param>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.IsValid(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Indicates whether the date values provided are a valid representation of a date
            and time.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month of the year (in the range 1 through 12)</param>
            <param name="day">The day of the month (in the range 1 through the number of
            days in <paramref name="month"/>)</param>
            <param name="hour">The hour (in the range 0 through 23).</param>
            <param name="minute">The minute (in the range 0 through 59).</param>
            <param name="second">The second, including fractional seconds (in the range 0.0
            up to, but not including, 61.0).  A second between 60.0 and 61.0 (a leap
            second) is only valid if the overall time is during one of the official leap
            seconds. </param>
            <returns>true if the representation is valid and false if it is not.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToJulianDate">
            <summary>
             Convert this <see cref="T:CesiumLanguageWriter.GregorianDate"/> to a <see cref="T:CesiumLanguageWriter.JulianDate"/>. The
             time standard will be <see cref="F:CesiumLanguageWriter.TimeStandard.CoordinatedUniversalTime"/>
             (UTC), unless this  <see cref="T:CesiumLanguageWriter.GregorianDate"/> represents the instant of a
             leap second, in which case the <see cref="T:CesiumLanguageWriter.JulianDate"/> will be in 
             <see cref="F:CesiumLanguageWriter.TimeStandard.InternationalAtomicTime"/> (TAI).
            </summary>
            <returns>A <see cref="T:CesiumLanguageWriter.JulianDate"/> representing this date.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToJulianDate(CesiumLanguageWriter.TimeStandard)">
            <summary>
             Convert this <see cref="T:CesiumLanguageWriter.GregorianDate"/> to a <see cref="T:CesiumLanguageWriter.JulianDate"/>.  The
             <see cref="T:CesiumLanguageWriter.GregorianDate"/> is assumed to specify a time in the
             specified <see cref="T:CesiumLanguageWriter.TimeStandard"/>.
            </summary>
            <param name="timeStandard">
            The time standard in which this <see cref="T:CesiumLanguageWriter.GregorianDate"/> is expressed.  The returned
            <see cref="T:CesiumLanguageWriter.JulianDate"/> will be expressed in this time standard as well, if possible.
            </param>
            <returns>A <see cref="T:CesiumLanguageWriter.JulianDate"/> representing this date.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToDateTime">
            <summary>Convert this <see cref="T:CesiumLanguageWriter.GregorianDate"/> to a <see cref="T:System.DateTime"/>. 
            The <see cref="T:System.DateTime"/> will be in UTC.
            </summary>
            <returns>A <see cref="T:System.DateTime"/> representing this date.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.CompareTo(CesiumLanguageWriter.GregorianDate)">
            <summary>
            Compares this instance with another instance of the same type.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>
            A value indicating the relative order of the objects being compared.  The return value has these meanings:
            <list type="table">
              <listheader>
                <term>Value</term>
                <description>Meaning</description>
              </listheader>
              <item>
                <term>Less than zero</term>
                <description>
                  This instance is less than <paramref name="other"/>.
                </description>
              </item>
              <item>
                <term>Zero</term>
                <description>
                  This instance is equal to <paramref name="other"/>.
                </description>
              </item>
              <item>
                <term>Greater than zero</term>
                <description>
                  This instance is greater than <paramref name="other"/>.
                </description>
              </item>
            </list>
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.CompareTo(System.Object)">
            <summary>
            Compares this instance with another instance of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value indicating the relative order of the objects being compared.  The return value has these meanings:
            <list type="table">
              <listheader>
                <term>Value</term>
                <description>Meaning</description>
              </listheader>
              <item>
                <term>Less than zero</term>
                <description>
                  This instance is less than <paramref name="obj"/>.
                </description>
              </item>
              <item>
                <term>Zero</term>
                <description>
                  This instance is equal to <paramref name="obj"/>.
                </description>
              </item>
              <item>
                <term>Greater than zero</term>
                <description>
                  This instance is greater than <paramref name="obj"/>.
                </description>
              </item>
            </list>
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.Equals(CesiumLanguageWriter.GregorianDate)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToString">
            <summary>Converts the value of this instance to its equivalent string
            representation.</summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToString(System.String)">
            <summary>Converts the value of this instance to its equivalent string
            representation using the specified format.</summary>
            <returns>A string representation of value of this instance as specified by
            <paramref name="format"/>.</returns>
            <param name="format">A format string. </param>
            <exception cref="T:System.FormatException">The length of <paramref name="format"/> is 1,
            and it is not one of the format specifier characters defined for 
            <see cref="T:System.Globalization.DateTimeFormatInfo"/>.-or- <paramref name="format"/> does not
            contain a valid custom format pattern. </exception>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToString(System.IFormatProvider)">
            <summary>Converts the value of this instance to its equivalent string
            representation using the specified culture-specific format information.
            </summary>
            <returns>A string representation of value of this instance as specified by
            <paramref name="provider"/>.</returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies
            culture-specific formatting information. </param>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToString(System.String,System.IFormatProvider)">
            <summary>Converts the value of this instance to its equivalent string
            representation using the specified format and culture-specific format
            information.</summary>
            <returns>A string representation of value of this instance as specified by
            <paramref name="format"/> and <paramref name="provider"/>.</returns>
            <param name="format">A format string. </param>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies
            culture-specific formatting information. </param>
            <exception cref="T:System.FormatException">The length of <paramref name="format"/> is 1,
            and it is not one of the format specifier characters defined for 
            <see cref="T:System.Globalization.DateTimeFormatInfo"/>.-or- <paramref name="format"/> does not
            contain a valid custom format pattern. </exception>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToIso8601String">
            <summary>
            Converts the value of this instance to its equivalent ISO8601 string representation,
            corresponding to year month day hours minutes and seconds with seconds
            represented to machine precision.
            </summary>
            <returns>A string representing this date and time in ISO8601 format.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToIso8601String(CesiumLanguageWriter.Iso8601Format)">
            <summary>
            Converts the value of this instance to its equivalent ISO8601 string representation,
            corresponding to year month day hours minutes and seconds with seconds
            represented to machine precision.
            </summary>
            <param name="format">The type of ISO8601 string to create.</param>
            <returns>A string representing this date and time in ISO8601 format.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToLongDateString">
            <summary>Converts the value of this instance to its equivalent long date string representation.</summary>
            <returns>A string containing the name of the day of the week, the name of the month, the numeric day of the month, and the year equivalent to the date value of this instance.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToLongTimeString">
            <summary>Converts the value of this instance to its equivalent long time string
            representation.</summary>
            <returns>A string containing the name of the day of the week, the name of the
            month, the numeric day of the hours, minutes, and seconds equivalent to the
            time value of this instance.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToShortDateString">
            <summary>Converts the value of this instance to its equivalent short date
            string representation.</summary>
            <returns>A string containing the numeric month, the numeric day of the month,
            and the year equivalent to the date value of this instance.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ToShortTimeString">
            <summary>Converts the value of this instance to its equivalent short time
            string representation.</summary>
            <returns>A string containing the name of the day of the week, the name of the
            month, the numeric day of the hours, minutes, and seconds equivalent to the
            time value of this instance.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.op_Equality(CesiumLanguageWriter.GregorianDate,CesiumLanguageWriter.GregorianDate)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.op_Inequality(CesiumLanguageWriter.GregorianDate,CesiumLanguageWriter.GregorianDate)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.op_LessThan(CesiumLanguageWriter.GregorianDate,CesiumLanguageWriter.GregorianDate)">
            <summary>
            Returns <see langword="true"/> if <paramref name="left"/> is less than <paramref name="right"/>.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> is less than <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.op_GreaterThan(CesiumLanguageWriter.GregorianDate,CesiumLanguageWriter.GregorianDate)">
            <summary>
            Returns <see langword="true"/> if <paramref name="left"/> is greater than <paramref name="right"/>.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> is greater than <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.op_LessThanOrEqual(CesiumLanguageWriter.GregorianDate,CesiumLanguageWriter.GregorianDate)">
            <summary>
            Returns <see langword="true"/> if <paramref name="left"/> is less than or equal to <paramref name="right"/>.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> is less than or equal to <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.op_GreaterThanOrEqual(CesiumLanguageWriter.GregorianDate,CesiumLanguageWriter.GregorianDate)">
            <summary>
            Returns <see langword="true"/> if <paramref name="left"/> is greater than or equal to <paramref name="right"/>.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> is greater than or equal to <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.Parse(System.String)">
            <summary>
            Converts the specified string representation of a date and time to its
            <see cref="T:CesiumLanguageWriter.GregorianDate"/> equivalent.
            
            Note: <see cref="T:CesiumLanguageWriter.GregorianDate"/> is always assumed to be in UTC.  You cannot
            parse strings containing time zone information. However, this will handle
            two common ISO8601 formats: YYYY-MM-DDThh:mm:ss.sZ (with seconds to machine precision)
            and it's "day of year" equivalent: YYYY-DDDThh:mm:ss.sZ
            </summary>
            <returns>
            A <see cref="T:CesiumLanguageWriter.GregorianDate"/> equivalent to the date and time contained in s.
            </returns>
            <param name="s">A string containing a date and time to convert.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="s"/> is null. 
            </exception>
            <exception cref="T:System.FormatException">
            <paramref name="s"/> does not contain a valid string representation of a date
            and time. 
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the specified string representation of a date and time to its
            <see cref="T:CesiumLanguageWriter.GregorianDate"/> equivalent using the specified culture-specific
            format information.
            
            Note: <see cref="T:CesiumLanguageWriter.GregorianDate"/> is always assumed to be in UTC.  You cannot
            parse strings containing time zone information. However, this will handle
            two common ISO8601 formats: YYYY-MM-DDThh:mm:ss.sZ (with seconds to machine precision)
            and it's "day of year" equivalent: YYYY-DDDThh:mm:ss.sZ
            </summary>
            <returns>
            A <see cref="T:CesiumLanguageWriter.GregorianDate"/> equivalent to the date and time contained in 
            <paramref name="s"/> as specified by <paramref name="provider"/>.
            </returns>
            <param name="s">A string containing a date and time to convert.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies
            culture-specific format information about <paramref name="s"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="s"/> is null. 
            </exception>
            <exception cref="T:System.FormatException">
            <paramref name="s"/> does not contain a valid string representation of a date
            and time. 
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ParseExact(System.String,System.String,System.IFormatProvider)">
             <summary>
             Converts the specified string representation of a date and time to its
             <see cref="T:CesiumLanguageWriter.GregorianDate"/> equivalent using the specified format and
             culture-specific format information. The format of the string representation
             must match the specified format exactly.
            
             Note: <see cref="T:CesiumLanguageWriter.GregorianDate"/> is always assumed to be in UTC.  You cannot
             parse strings containing time zone information.
             </summary>
             <returns>
             A <see cref="T:CesiumLanguageWriter.GregorianDate"/> equivalent to the date and time contained in 
             <paramref name="s"/> as specified by <paramref name="format"/> and 
             <paramref name="provider"/>.
             </returns>
             <param name="s">A string containing a date and time to convert. </param>
             <param name="format">The expected format of <paramref name="s"/>. </param>
             <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies
             culture-specific format information about <paramref name="s"/>. </param>
             <exception cref="T:System.ArgumentNullException">
             <paramref name="s"/> or <paramref name="format"/> is null.
             </exception>
             <exception cref="T:System.FormatException">
             <paramref name="s"/> or <paramref name="format"/> is an empty string. -or- 
             <paramref name="s"/> does not contain a date and time that corresponds to the
             pattern specified in
             <paramref name="format"/>. 
             </exception>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.ParseExact(System.String,System.String[],System.IFormatProvider)">
             <summary>
             Converts the specified string representation of a date and time to its
             <see cref="T:CesiumLanguageWriter.GregorianDate"/> equivalent using the specified format and
             culture-specific format information. The format of the string representation
             must match the specified format exactly.
            
             Note: <see cref="T:CesiumLanguageWriter.GregorianDate"/> is always assumed to be in UTC.  You cannot
             parse strings containing time zone information.
             </summary>
             <returns>
             A <see cref="T:CesiumLanguageWriter.GregorianDate"/> equivalent to the date and time contained in 
             <paramref name="s"/> as specified by <paramref name="format"/> and 
             <paramref name="provider"/>.
             </returns>
             <param name="s">A list of strings containing a date and time to convert. </param>
             <param name="format">The expected format of <paramref name="s"/>. </param>
             <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies
             culture-specific format information about <paramref name="s"/>. </param>
             <exception cref="T:System.ArgumentNullException">
             <paramref name="s"/> or <paramref name="format"/> is null.
             </exception>
             <exception cref="T:System.FormatException">
             <paramref name="s"/> or <paramref name="format"/> is an empty string. -or- 
             <paramref name="s"/> does not contain a date and time that corresponds to the
             pattern specified in
             <paramref name="format"/>. 
             </exception>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.TryParse(System.String,CesiumLanguageWriter.GregorianDate@)">
            <summary>
            Converts the specified string representation of a date and time to its
            <see cref="T:CesiumLanguageWriter.GregorianDate"/> equivalent.
            
            Note: <see cref="T:CesiumLanguageWriter.GregorianDate"/> is always assumed to be in UTC.  You cannot
            parse strings containing time zone information. However, this will handle
            two common ISO8601 formats: YYYY-MM-DDThh:mm:ss.sZ (with seconds to machine precision)
            and it's "day of year" equivalent: YYYY-DDDThh:mm:ss.sZ
            </summary>
            <returns>
            true if the <paramref name="s"/> parameter was converted successfully;
            otherwise, false.
            </returns>
            <param name="s">A string containing a date and time to convert.</param>
            <param name="result">
            <filter name="Java">On input, an array with one element.  On return, the array is populated with</filter>
            <filter name="DotNet,Silverlight">On return,</filter>
            the <see cref="T:CesiumLanguageWriter.GregorianDate"/> value equivalent to the date and time contained in
            <paramref name="s"/>, if the conversion succeeded, or 
            <see cref="F:CesiumLanguageWriter.GregorianDate.MinValue"/> if the conversion failed. The conversion
            fails if the <paramref name="s"/> parameter is null, or does not contain a
            valid string representation of a date and time. This parameter is passed
            uninitialized. 
            </param>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.TryParse(System.String,System.IFormatProvider,CesiumLanguageWriter.GregorianDate@)">
            <summary>
            Converts the specified string representation of a date and time to its
            <see cref="T:CesiumLanguageWriter.GregorianDate"/> equivalent using the specified culture-specific
            format information.
            
            Note: <see cref="T:CesiumLanguageWriter.GregorianDate"/> is always assumed to be in UTC.  You cannot
            parse strings containing time zone information. However, this will handle
            two common ISO8601 formats: YYYY-MM-DDThh:mm:ss.sZ (with seconds to machine precision)
            and it's "day of year" equivalent: YYYY-DDDThh:mm:ss.sZ
            </summary>
            <returns>
            true if the <paramref name="s"/> parameter was converted successfully;
            otherwise, false.
            </returns>
            <param name="s">A string containing a date and time to convert.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies
            culture-specific format information about <paramref name="s"/>. </param>
            <param name="result">
            <filter name="Java">On input, an array with one element.  On return, the array is populated with</filter>
            <filter name="DotNet,Silverlight">On return,</filter>
            the <see cref="T:CesiumLanguageWriter.GregorianDate"/> value equivalent to the date and time contained in
            <paramref name="s"/>, if the conversion succeeded, or 
            <see cref="F:CesiumLanguageWriter.GregorianDate.MinValue"/> if the conversion failed. The conversion
            fails if the <paramref name="s"/> parameter is null, or does not contain a
            valid string representation of a date and time. This parameter is passed
            uninitialized. 
            </param>
        </member>
        <member name="F:CesiumLanguageWriter.GregorianDate.MaxValue">
            <summary>
            Represents the largest possible value of <see cref="T:CesiumLanguageWriter.GregorianDate"/>. 
            Corresponds to <see cref="F:System.DateTime.MaxValue"/>.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.GregorianDate.MinValue">
            <summary>
            Represents the smallest possible value of <see cref="T:CesiumLanguageWriter.GregorianDate"/>. 
            Corresponds to <see cref="F:System.DateTime.MinValue"/>.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GregorianDate.Year">
            <summary>
            Gets the year.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GregorianDate.Month">
            <summary>
            Gets the month of the year (in the range 1 through 12).
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GregorianDate.Day">
            <summary>
            Gets the day of the month (in the range 1 through the number of days in the
            month).
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GregorianDate.Hour">
            <summary>
            Gets the hour (in the range 0 through 23).
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GregorianDate.Minute">
            <summary>
            Gets the minute (in the range 0 through 59).
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GregorianDate.Second">
            <summary>
            Gets the second, including fractional seconds (in the range 0.0 up to, but not
            including, 61.0).  A value between 60.0 and 61.0 indicates a leap second.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GregorianDate.JulianSecondsOfDay">
            <summary>
            Gets the corresponding seconds past noon for this instance.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.GregorianDate.DayOfWeek">
            <summary>Gets the day of the week represented by this instance.</summary>
            <returns>A <see cref="P:CesiumLanguageWriter.GregorianDate.DayOfWeek"/> enumerated constant that indicates the day
            of the week. This property value ranges from zero, indicating Sunday, to six,
            indicating Saturday.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.GregorianDate.DayOfYear">
            <summary>Gets the day of the year represented by this instance.</summary>
            <returns>An integer that indicates the day of the year.
            This property value ranges from 1 through the number of days in the year.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.GregorianDate.IsLeapSecond">
            <summary>
            Indicates whether or not this <see cref="T:CesiumLanguageWriter.GregorianDate"/> represents a leap
            second.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.GregorianDate.Parser">
            <summary>
            This class was taken from the Mono <see cref="T:System.DateTime"/> class, and
            substantially altered to fit the needs of Gregorian Date.  Gregorian Date
            assumes UTC, so all time-zone handling was ripped out.  The "f" parsing was
            also changed to allow more precision than the 7 digits that 
            <see cref="T:System.DateTime"/> mandates.
            
            Note: any comment from here on is taken from the Mono source, so any references
            to bug numbers refer to their bugs.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.GregorianDate.Parser.BuildDateTimePatterns(System.String[],System.Int32)">
            <summary>
            Build an array of date/time patterns that support up to the number of
            fractional second digits specified.  <see cref="T:System.DateTime"/> will only parse up
            to seven.
            </summary>
            <param name="patterns">The set of formats to use as a template.</param>
            <param name="maximumFractionalSeconds">The maximum number of fractional second
            digits to include in the pattern set.</param>
            <returns>An array of date/time patterns that can be used for parsing.</returns>
        </member>
        <member name="F:CesiumLanguageWriter.GregorianDate.Parser.s_extraDateTimePatternTemplates">
            <summary>
            Don't use these patterns directly.  Instead get your patterns from 
            <see cref="M:CesiumLanguageWriter.GregorianDate.Parser.BuildDateTimePatterns(System.String[],System.Int32)"/>.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.Duration">
            <summary>
            Represents a span of time.  
            <filter name="DotNet,Silverlight">This is different from the .NET <see cref="T:System.TimeSpan"/> class in that it</filter>
            <filter name="Java">This class</filter>
            offers the same precision as the <see cref="T:CesiumLanguageWriter.JulianDate"/> type.  It stores a
            number of days as an <see cref="T:System.Int32"/> and a number of seconds as a <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.HoursMinutesSecondsToSeconds(System.Int32,System.Int32,System.Double)">
            <summary>
            Converts the specified number of hours, minutes, and seconds to total duration in seconds.
            </summary>
            <param name="hours">The number of hours.</param>
            <param name="minutes">The number of minutes.</param>
            <param name="seconds">The number of seconds.</param>
            <returns>The corresponding duration in seconds.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.#ctor(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of Duration from a specified number
            of days, hours, minutes, and seconds.
            </summary>
            <param name="days">The number of days in the new duration.</param>
            <param name="hours">The number of hours in the new duration.</param>
            <param name="minutes">The number of minutes in the new duration.</param>
            <param name="seconds">The number of seconds in the new duration.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.#ctor(System.Int32,System.Double)">
            <summary>
            Initializes a new instance of Duration from a specified number
            of days and seconds.
            </summary>
            <param name="days">The number of days in the new duration.</param>
            <param name="seconds">The number of seconds in the new duration.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new Duration from a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="timeSpan">The time span.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.ToTimeSpan">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> equivalent to this Duration.
            </summary>
            <returns>The time span.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.ToString">
            <summary>
            Returns the value of the <see cref="T:CesiumLanguageWriter.Duration"/> in <see cref="P:CesiumLanguageWriter.Duration.Days"/>:<see cref="P:CesiumLanguageWriter.Duration.Seconds"/>.
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.Equals(CesiumLanguageWriter.Duration)">
            <summary>
            Returns true if this Duration exactly equals another duration, within the limits
            of floating point precision.  To be considered equal, the <see cref="P:CesiumLanguageWriter.Duration.Days"/>
            property must be identical and the difference between the <see cref="P:CesiumLanguageWriter.Duration.Seconds"/>
            properties must be less than 1.0e-10.
            </summary>
            <param name="other">The other duration.</param>
            <returns>true if this duration exactly equals the <paramref name="other"/> duration, within the limits of floating point precision.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.Equals(System.Object)">
            <summary>
            Returns true if this Duration exactly equals another duration, within the limits
            of floating point precision.  To be considered equal, the <see cref="P:CesiumLanguageWriter.Duration.Days"/>
            property must be identical and the
            difference between the <see cref="P:CesiumLanguageWriter.Duration.Seconds"/> properties must be less than 1.0e-10.
            </summary>
            <param name="obj">The other duration.</param>
            <returns>true if this duration exactly equals the <paramref name="obj"/> duration, within the limits of floating point precision.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.EqualsEpsilon(CesiumLanguageWriter.Duration,System.Double)">
            <summary>
            Returns true if this Duration is within <paramref name="epsilon"/> seconds of the
            specified Duration.  That is, in order for the Durations to be considered equal (and for
            this function to return true), the absolute value of the difference between them, in
            seconds, must be less than <paramref name="epsilon"/>.
            </summary>
            <param name="other">The Duration to compare to this Duration.</param>
            <param name="epsilon">The smallest difference between the Durations, in seconds, such that they will NOT be considered equal.</param>
            <returns>true if the dates are equal as defined by the epsilon value.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.CompareTo(CesiumLanguageWriter.Duration)">
            <summary>
            Compares this instance with another instance of the same type.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>
            A value indicating the relative order of the objects being compared.  The return value has these meanings:
            <list type="table">
              <listheader>
                <term>Value</term>
                <description>Meaning</description>
              </listheader>
              <item>
                <term>Less than zero</term>
                <description>
                  This instance is less than <paramref name="other"/>.
                </description>
              </item>
              <item>
                <term>Zero</term>
                <description>
                  This instance is equal to <paramref name="other"/>.
                </description>
              </item>
              <item>
                <term>Greater than zero</term>
                <description>
                  This instance is greater than <paramref name="other"/>.
                </description>
              </item>
            </list>
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.CompareTo(System.Object)">
            <summary>
            Compares this instance with another instance of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value indicating the relative order of the objects being compared.  The return value has these meanings:
            <list type="table">
              <listheader>
                <term>Value</term>
                <description>Meaning</description>
              </listheader>
              <item>
                <term>Less than zero</term>
                <description>
                  This instance is less than <paramref name="obj"/>.
                </description>
              </item>
              <item>
                <term>Zero</term>
                <description>
                  This instance is equal to <paramref name="obj"/>.
                </description>
              </item>
              <item>
                <term>Greater than zero</term>
                <description>
                  This instance is greater than <paramref name="obj"/>.
                </description>
              </item>
            </list>
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.Add(CesiumLanguageWriter.Duration)">
            <summary>
            Adds the specified Duration to this instance.
            </summary>
            <param name="other">The duration to add to this instance.</param>
            <returns>A <see cref="T:CesiumLanguageWriter.Duration"/> that represents the value of this instance plus the value of <paramref name="other"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.Subtract(CesiumLanguageWriter.Duration)">
            <summary>
            Subtracts the specified Duration from this instance.
            </summary>
            <param name="other">The Duration to subtract from this instance.</param>
            <returns>A Duration that represents the value of this instance minus the value of other.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.Multiply(System.Double)">
            <summary>
            Multiplies the duration by a constant.
            </summary>
            <param name="constant">The constant by which to multiply the Duration.</param>
            <returns>A Duration that represents the value of this instance multiplied by the constant.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.Divide(CesiumLanguageWriter.Duration)">
            <summary>
            Divides the duration by another duration, yield a constant.
            </summary>
            <param name="divisor">The duration by which to divide this duration.</param>
            <returns>The result of dividing this Duration by another.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.Divide(System.Double)">
            <summary>
            Divides the duration by a constant.
            </summary>
            <param name="constant">The constant by which to divide the <see cref="T:CesiumLanguageWriter.Duration"/>.</param>
            <returns>A <see cref="T:CesiumLanguageWriter.Duration"/> that represents the value of this instance divided by the constant.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.AddSeconds(System.Double)">
            <summary>
            Adds a specified number of seconds to this duration and returns the new duration.
            </summary>
            <param name="seconds">The number of seconds to add.</param>
            <returns>A new duration which is the sum of the original duration and the specified number of seconds.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.AddDays(System.Double)">
            <summary>
            Adds a specified number of days to this duration and returns the new duration.
            </summary>
            <param name="days">The number of days to add.</param>
            <returns>A new duration which is the sum of the original duration and the specified number of days.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_Equality(CesiumLanguageWriter.Duration,CesiumLanguageWriter.Duration)">
            <summary>
            Returns true if two Durations are exactly equal, within the limits
            of floating point precision.  To be considered equal, the <see cref="P:CesiumLanguageWriter.Duration.Days"/>
            property must be identical and the
            difference between the <see cref="P:CesiumLanguageWriter.Duration.Seconds"/> properties must be less than 1.0e-10.
            </summary>
            <param name="left">The left duration.</param>
            <param name="right">The second duration.</param>
            <returns><see langword="true"/> if the durations are equal, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_Inequality(CesiumLanguageWriter.Duration,CesiumLanguageWriter.Duration)">
            <summary>
            Returns true if two Durations are NOT exactly equal, within the limits
            of floating point precision.  To be considered equal, the <see cref="P:CesiumLanguageWriter.Duration.Days"/>
            property must be identical (or one must be null) and the
            difference between the <see cref="P:CesiumLanguageWriter.Duration.Seconds"/> properties must be less than 1.0e-10.
            </summary>
            <param name="left">The first duration.</param>
            <param name="right">The second duration.</param>
            <returns><see langword="true"/> if the durations are not equal, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_LessThan(CesiumLanguageWriter.Duration,CesiumLanguageWriter.Duration)">
            <summary>
            Returns true if <paramref name="left"/> is shorter than <paramref name="right"/>.
            </summary>
            <param name="left">The left duration.</param>
            <param name="right">The right duration.</param>
            <returns>true if left is less than right, otherwise false.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_GreaterThan(CesiumLanguageWriter.Duration,CesiumLanguageWriter.Duration)">
            <summary>
            Returns true if <paramref name="left"/> is longer than <paramref name="right"/>.
            </summary>
            <param name="left">The left duration.</param>
            <param name="right">The right duration.</param>
            <returns>true if left is greater than right, otherwise false.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_LessThanOrEqual(CesiumLanguageWriter.Duration,CesiumLanguageWriter.Duration)">
            <summary>
            Returns true if <paramref name="left"/> is shorter than or exactly equal to <paramref name="right"/>.
            </summary>
            <param name="left">The left duration.</param>
            <param name="right">The right duration.</param>
            <returns>true if left is less than or equal to right, otherwise false.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_GreaterThanOrEqual(CesiumLanguageWriter.Duration,CesiumLanguageWriter.Duration)">
            <summary>
            Returns true if <paramref name="left"/> is longer than or exactly equal to <paramref name="right"/>.
            </summary>
            <param name="left">The left duration.</param>
            <param name="right">The right duration.</param>
            <returns>true if left is greater than or equal to right, otherwise false.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_Addition(CesiumLanguageWriter.Duration,CesiumLanguageWriter.Duration)">
            <summary>
            Adds two specified Duration instances.
            </summary>
            <param name="left">The first duration to add.</param>
            <param name="right">The second duration to add.</param>
            <returns>The sum of <paramref name="left"/> and <paramref name="right"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_Subtraction(CesiumLanguageWriter.Duration,CesiumLanguageWriter.Duration)">
            <summary>
            Subtracts a specified Duration from another specified Duration.
            </summary>
            <param name="left">The subtrahend.</param>
            <param name="right">The minuend.</param>
            <returns>The difference <paramref name="left"/> minus <paramref name="right"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_UnaryNegation(CesiumLanguageWriter.Duration)">
            <summary>
            Inverts a specified Duration.  For example, if the <paramref name="value"/> represents a positive
            quantity of time, the returned Duration will be a negative quantity of time.
            </summary>
            <param name="value">The value to invert.</param>
            <returns>The inverted duration.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_Multiply(CesiumLanguageWriter.Duration,System.Double)">
            <summary>
            Multiplies the duration by a constant.
            </summary>
            <param name="left">The duration to multiply.</param>
            <param name="right">The constant by which to multiply the Duration.</param>
            <returns>A Duration that represents the value of this instance multiplied by the constant.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_Division(CesiumLanguageWriter.Duration,CesiumLanguageWriter.Duration)">
            <summary>
            Divides the duration by another duration.
            </summary>
            <param name="dividend">The duration to divide.</param>
            <param name="divisor">The duration by which to divide the Duration.</param>
            <returns>The result of dividing the dividend by the divisor.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.op_Division(CesiumLanguageWriter.Duration,System.Double)">
            <summary>
            Divides the duration by a constant.
            </summary>
            <param name="dividend">The duration to divide.</param>
            <param name="divisor">The constant by which to divide the duration.</param>
            <returns>The result of dividing the dividend by the divisor.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.FromDays(System.Double)">
            <summary>
            Returns a Duration that represents the specified number of days.
            </summary>
            <param name="days">The number of days to be represented by the returned duration.</param>
            <returns>A <see cref="T:CesiumLanguageWriter.Duration"/> representing the specified number of days.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Duration.FromSeconds(System.Double)">
            <summary>
            Returns a Duration that represents the specified number of seconds.
            </summary>
            <param name="seconds">The number of seconds to be represented by the returned duration.</param>
            <returns>A <see cref="T:CesiumLanguageWriter.Duration"/> representing the specified number of seconds.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Duration.MaxValue">
            <summary>
            Gets the largest possible value of a <see cref="T:CesiumLanguageWriter.Duration"/>. 
            </summary>
            <remarks>
            The value is <see cref="F:System.Int32.MaxValue"/> days and 86399.0 seconds.
            </remarks>
        </member>
        <member name="P:CesiumLanguageWriter.Duration.MinValue">
            <summary>
            Gets the smallest possible value of a <see cref="T:CesiumLanguageWriter.Duration"/>. 
            </summary>
            <remarks>
            The value is <see cref="F:System.Int32.MinValue"/> days and -86399.0 seconds.
            </remarks>
        </member>
        <member name="P:CesiumLanguageWriter.Duration.Days">
            <summary>
            Gets the day component of this duration.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Duration.Seconds">
            <summary>
            Gets the seconds component of this duration.  This is the number of seconds represented by
            this duration in addition to the <see cref="P:CesiumLanguageWriter.Duration.Days"/>, so it will always be less than
            <see cref="F:CesiumLanguageWriter.TimeConstants.SecondsPerDay"/>.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Duration.TotalDays">
            <summary>
            Gets the total number of whole and fractional days represented by this Duration.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Duration.TotalSeconds">
            <summary>
            Gets the total number of seconds represented by this duration, including the seconds
            that compose the days returned by the <see cref="P:CesiumLanguageWriter.Duration.Days"/> property.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.JulianDate">
            <summary>
            An astronomical Julian Date, which is the number of days since noon on January 1, -4712 (4713 BC).
            For increased precision, this class stores the whole number part of the date as an <see cref="T:System.Int32"/>
            and the seconds into the day as a <see cref="T:System.Double"/>.
            </summary>
            <remarks>
            This type assumes that days always have <see cref="F:CesiumLanguageWriter.TimeConstants.SecondsPerDay"/> (86400.0) seconds.
            When using a <see cref="T:CesiumLanguageWriter.JulianDate"/> with the <see cref="F:CesiumLanguageWriter.TimeStandard.CoordinatedUniversalTime"/> (UTC) time standard,
            a day with a leap second actually has 86401.0 seconds.  The end result is that <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot
            represent the moment of a leap second with the UTC time standard.  It CAN represent the moment of a
            leap second in <see cref="F:CesiumLanguageWriter.TimeStandard.InternationalAtomicTime"/> (TAI), however.  Also, subtracting two
            UTC dates that are on opposite sides of a leap second will correctly take the leap second into account.
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.#ctor(System.DateTime)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.JulianDate"/> from a <see cref="T:System.DateTime"/>.
            The time standard will be Coordinated Universal Time (UTC).
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime"/>.</param>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.#ctor(CesiumLanguageWriter.GregorianDate)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.JulianDate"/> from a <see cref="T:CesiumLanguageWriter.GregorianDate"/>.
            The time standard will be <see cref="F:CesiumLanguageWriter.TimeStandard.CoordinatedUniversalTime"/> (UTC), except when
            the <paramref name="gregorianDate"/> represents time during a leap second.  During a leap second,
            the <see cref="T:CesiumLanguageWriter.JulianDate"/> will be in the <see cref="F:CesiumLanguageWriter.TimeStandard.InternationalAtomicTime"/> (TAI)
            standard.
            </summary>
            <param name="gregorianDate">The <see cref="T:CesiumLanguageWriter.GregorianDate"/> to use to specify the 
            <see cref="T:CesiumLanguageWriter.JulianDate"/>.</param>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.#ctor(System.DateTime,CesiumLanguageWriter.TimeStandard)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.JulianDate"/> from a <see cref="T:System.DateTime"/> and specified time standard.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime"/>.</param>
            <param name="standard">
            The time standard to use for this Julian Date.  The <paramref name="dateTime"/> is assumed to be expressed
            in this time standard.
            </param>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.#ctor(CesiumLanguageWriter.GregorianDate,CesiumLanguageWriter.TimeStandard)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.JulianDate"/> from a <see cref="T:CesiumLanguageWriter.GregorianDate"/> where the <see cref="T:CesiumLanguageWriter.GregorianDate"/> 
            is expressed in the given <see cref="T:CesiumLanguageWriter.TimeStandard"/>.  If the date is during a leap second, the 
            <see cref="T:CesiumLanguageWriter.JulianDate"/> will be expressed in <see cref="F:CesiumLanguageWriter.TimeStandard.InternationalAtomicTime"/> (TAI).
            </summary>
            <param name="gregorianDate">The <see cref="T:CesiumLanguageWriter.GregorianDate"/>.</param>
            <param name="standard">
            The time standard in which the <paramref name="gregorianDate"/> is expressed.  
            </param>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.#ctor(System.Int32,System.Double)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.JulianDate"/> from the provided values.  The values will be
            normalized so that the <see cref="P:CesiumLanguageWriter.JulianDate.SecondsOfDay"/> property is less than the length of a day.
            The time standard will be International Atomic Time (TAI).
            </summary>
            <param name="day">The whole number part of the date.</param>
            <param name="secondsOfDay">The time of day, expressed as seconds past noon on the given whole-number day.</param>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.#ctor(System.Int32,System.Double,CesiumLanguageWriter.TimeStandard)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.JulianDate"/> from the provided values.  The values will be
            normalized so that the <see cref="P:CesiumLanguageWriter.JulianDate.SecondsOfDay"/> property is less than the length of the day.
            </summary>
            <param name="day">The whole number part of the date.</param>
            <param name="secondsOfDay">The time of day, expressed as seconds past noon on the given whole-number day.</param>
            <param name="timeStandard">The time standard to use for this Julian Date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.#ctor(System.Double)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.JulianDate"/> from a double expressing the complete astronomical Julian Date.
            The time standard will be <see cref="F:CesiumLanguageWriter.TimeStandard.InternationalAtomicTime">International Atomic Time (TAI)</see>.
            </summary>
            <param name="dayCount">The complete astronomical Julian date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.#ctor(System.Double,CesiumLanguageWriter.TimeStandard)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.JulianDate"/> from a double expressing the complete astronomical Julian Date.
            </summary>
            <param name="dayCount">The complete Julian date.</param>
            <param name="timeStandard">The time standard to use for this Julian Date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.ToTimeStandard(CesiumLanguageWriter.TimeStandard)">
            <summary>
            Converts this <see cref="T:CesiumLanguageWriter.JulianDate"/> to the specified time standard.
            </summary>
            <param name="timeStandard">The requested time standard.</param>
            <returns>An equivalent <see cref="T:CesiumLanguageWriter.JulianDate"/> using the requested time
            standard.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the specified <see cref="T:CesiumLanguageWriter.TimeStandard"/> is is not capable of
            representing this <see cref="T:CesiumLanguageWriter.JulianDate"/>.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.TryConvertTimeStandard(CesiumLanguageWriter.TimeStandard,CesiumLanguageWriter.JulianDate@)">
            <summary>
            Try to convert this <see cref="T:CesiumLanguageWriter.JulianDate"/> to the specified 
            <see cref="T:CesiumLanguageWriter.TimeStandard"/>, if the specified <see cref="T:CesiumLanguageWriter.TimeStandard"/> is
            capable of representing this time.
            </summary>
            <param name="timeStandard">The requested time standard.</param>
            <param name="result">
            <filter name="Java">On input, an array with one element.  On return, the array is populated with</filter>
            <filter name="DotNet,Silverlight">On return,</filter>
            an equivalent
            <see cref="T:CesiumLanguageWriter.JulianDate"/> using the requested <see cref="T:CesiumLanguageWriter.TimeStandard"/>, if it
            is capable  of representing this time, otherwise <see cref="P:CesiumLanguageWriter.JulianDate.MinValue"/>.
            </param>
            <returns><see langword="true"/> if this date could be converted to the
            requested <see cref="T:CesiumLanguageWriter.TimeStandard"/>, otherwise false.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.ToInternationalAtomicTime">
            <summary>
            Converts this date to <see cref="F:CesiumLanguageWriter.TimeStandard.InternationalAtomicTime"/> (TAI).
            </summary>
            <returns>An equivalent date expressed in TAI.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.SecondsDifference(CesiumLanguageWriter.JulianDate)">
            <summary>
            Computes the number of seconds that have elapsed from this Julian date to the
            <paramref name="other"/> Julian date.
            </summary>
            <param name="other">The other Julian date, which is the end of the interval.</param>
            <returns>The number of seconds that have elapsed from this Julian date to the other Julian date.</returns>
            <remarks>
            This method subtracts the Julian date on which it is called from the <paramref name="other"/>
            Julian date and returns the number of seconds between them.  The computation is done in the time
            standard of this Julian date, or the closest standard that is safe for arithmetic if this
            Julian date's time standard is not safe.  For best performance, this Julian date and the
            <paramref name="other"/> Julian date should have the same time standard and it should be
            safe for arithmetic.
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.MinutesDifference(CesiumLanguageWriter.JulianDate)">
            <summary>
            Computes the number of minutes that have elapsed from this Julian date to the
            <paramref name="other"/> Julian date.
            </summary>
            <param name="other">The other Julian date, which is the end of the interval.</param>
            <returns>The number of minutes that have elapsed from this Julian date to the other Julian date.</returns>
            <remarks>
            This method subtracts the Julian date on which it is called from the <paramref name="other"/>
            Julian date and returns the number of minutes between them.  The computation is done in the time
            standard of this Julian date, or the closest standard that is safe for arithmetic if this
            Julian date's time standard is not safe.  For best performance, this Julian date and the
            <paramref name="other"/> Julian date should have the same time standard and it should be
            safe for arithmetic.
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.DaysDifference(CesiumLanguageWriter.JulianDate)">
            <summary>
            Computes the number of days that have elapsed from this Julian date to the
            <paramref name="other"/> Julian date.
            </summary>
            <param name="other">The other Julian date, which is the end of the interval.</param>
            <returns>The number of days that have elapsed from this Julian date to the other Julian date.</returns>
            <remarks>
            This method subtracts the Julian date on which it is called from the <paramref name="other"/>
            Julian date and returns the number of days between them.  The computation is done in the time
            standard of this Julian date, or the closest standard that is safe for arithmetic if this
            Julian date's time standard is not safe.  For best performance, this Julian date and the
            <paramref name="other"/> Julian date should have the same time standard and it should be
            safe for arithmetic.
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.Add(CesiumLanguageWriter.Duration)">
            <summary>
            Adds a <see cref="T:CesiumLanguageWriter.Duration"/> to this Julian date, producing a new Julian date.
            </summary>
            <param name="duration">The duration to add.</param>
            <returns>
            A new <see cref="T:CesiumLanguageWriter.JulianDate"/> that is the result of the addition.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.Subtract(CesiumLanguageWriter.JulianDate)">
            <summary>
            Subtracts another Julian date from this Julian date.
            </summary>
            <param name="subtrahend">The Julian Date to subtract from this Julian Date.</param>
            <returns>The Duration that is the result of the subtraction.  The time standard will be the same as the time standard of the subtrahend.</returns>
            <remarks>
            This method subtracts the <paramref name="subtrahend"/> Julian date from this
            Julian date and returns the <see cref="T:CesiumLanguageWriter.Duration"/> between them.  The computation is done in
            the time standard of the <paramref name="subtrahend"/>, or the closest standard that is safe for
            arithmetic if the subtrahend's time standard is not safe.  For best performance, this Julian date
            and the subtrahend Julian date should have the same time standard and it should be
            safe for arithmetic.
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.Subtract(CesiumLanguageWriter.Duration)">
            <summary>
            Subtracts a <see cref="T:CesiumLanguageWriter.Duration"/> from this Julian date, producing a new
            Julian date.
            </summary>
            <param name="duration">The duration to subtract.</param>
            <returns>
            A new <see cref="T:CesiumLanguageWriter.JulianDate"/> that is the result of the subtraction.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.AddSeconds(System.Double)">
            <summary>
            Adds the specified number of seconds to this date and returns the new date.
            </summary>
            <param name="seconds">The number of seconds.</param>
            <returns>The new date.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.SubtractSeconds(System.Double)">
            <summary>
            Subtracts the specified number of seconds to this date and returns the new
            date.
            </summary>
            <param name="seconds">The number of seconds.</param>
            <returns>The new date.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.AddDays(System.Double)">
            <summary>
            Adds the specified number of days to this date and returns the new date.
            </summary>
            <param name="days">The number of days.</param>
            <returns>The new date.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.op_Subtraction(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Subtracts a Julian date from another Julian date, yielding a 
            <see cref="T:CesiumLanguageWriter.Duration"/>.
            </summary>
            <param name="left">The minuend.</param>
            <param name="right">The subtrahend.</param>
            <returns>
            The Duration that is the result of the subtraction; that is, 
            <paramref name="left"/> minus <paramref name="right"/>.  The time standard will
            be the same as the time standard of the subtrahend.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.op_Subtraction(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.Duration)">
            <summary>
            Subtracts a <see cref="T:CesiumLanguageWriter.Duration"/> from a Julian date, yielding a new 
            <see cref="T:CesiumLanguageWriter.JulianDate"/>.
            </summary>
            <param name="left">The minuend.</param>
            <param name="right">The subtrahend.</param>
            <returns>
            A new Julian Date that is the result of the subtraction; that is, 
            <paramref name="left"/> minus <paramref name="right"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.op_Addition(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.Duration)">
            <summary>
            Adds a <see cref="T:CesiumLanguageWriter.Duration"/> to a <see cref="T:CesiumLanguageWriter.JulianDate"/>, producing a new
            Julian date.
            </summary>
            <param name="left">The Julian date.</param>
            <param name="right">The duration.</param>
            <returns>A new Julian Date that is the result of the addition.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.op_Equality(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Returns true if the two dates are exactly equal.  To be considered equal, the <see cref="P:CesiumLanguageWriter.JulianDate.Day"/>
            and <see cref="P:CesiumLanguageWriter.JulianDate.SecondsOfDay"/> properties must be identical when converted to a common time standard.
            It is highly recommended that you use <see cref="M:CesiumLanguageWriter.JulianDate.EqualsEpsilon(CesiumLanguageWriter.JulianDate,System.Double)"/> or <see cref="M:CesiumLanguageWriter.JulianDate.IsIdentical(CesiumLanguageWriter.JulianDate)"/>
            instead of this method.
            </summary>
            <param name="left">The date on the left side.</param>
            <param name="right">The date on the right side.</param>
            <returns><see langword="true"/> if the dates are equal, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.op_Inequality(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Returns true if the two dates are NOT exactly equal.  To be considered equal, the <see cref="P:CesiumLanguageWriter.JulianDate.Day"/>
            and <see cref="P:CesiumLanguageWriter.JulianDate.SecondsOfDay"/> properties must be identical when converted to a common time standard.
            It is highly recommended that you use <see cref="M:CesiumLanguageWriter.JulianDate.EqualsEpsilon(CesiumLanguageWriter.JulianDate,System.Double)"/> or <see cref="M:CesiumLanguageWriter.JulianDate.IsIdentical(CesiumLanguageWriter.JulianDate)"/>
            instead of this method.
            </summary>
            <param name="left">The date on the left side.</param>
            <param name="right">The date on the right side.</param>
            <returns><see langword="true"/> if the dates are not equal, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.op_LessThan(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Returns true if <paramref name="left"/> occurs before <paramref name="right"/>.
            </summary>
            <param name="left">The date on the left side.</param>
            <param name="right">The date on the right side.</param>
            <returns><see langword="true"/> if the <paramref name="left"/> is less than <paramref name="right"/>, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.op_GreaterThan(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Returns true if <paramref name="left"/> occurs after <paramref name="right"/>.
            </summary>
            <param name="left">The date on the left side.</param>
            <param name="right">The date on the right side.</param>
            <returns><see langword="true"/> if the <paramref name="left"/> is greater than <paramref name="right"/>, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.op_LessThanOrEqual(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Returns true if <paramref name="left"/> occurs before or at the same time as <paramref name="right"/>.
            </summary>
            <param name="left">The date on the left side.</param>
            <param name="right">The date on the right side.</param>
            <returns><see langword="true"/> if the <paramref name="left"/> is less than or equal to <paramref name="right"/>, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.op_GreaterThanOrEqual(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Returns true if <paramref name="left"/> occurs after or at the same time as <paramref name="right"/>.
            </summary>
            <param name="left">The date on the left side.</param>
            <param name="right">The date on the right side.</param>
            <returns><see langword="true"/> if the <paramref name="left"/> is greater than or equal to <paramref name="right"/>, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.Equals(System.Object)">
            <summary>
            Returns true if this date exactly equals another date.  To be considered equal, the <see cref="P:CesiumLanguageWriter.JulianDate.Day"/>
            and <see cref="P:CesiumLanguageWriter.JulianDate.SecondsOfDay"/> properties must be identical when converted to a common time standard.
            It is highly recommended that you use <see cref="M:CesiumLanguageWriter.JulianDate.EqualsEpsilon(CesiumLanguageWriter.JulianDate,System.Double)"/> or <see cref="M:CesiumLanguageWriter.JulianDate.IsIdentical(CesiumLanguageWriter.JulianDate)"/>
            instead of this method.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.Equals(CesiumLanguageWriter.JulianDate)">
            <summary>
            Returns true if this date exactly equals another date.  To be considered equal, the <see cref="P:CesiumLanguageWriter.JulianDate.Day"/>
            and <see cref="P:CesiumLanguageWriter.JulianDate.SecondsOfDay"/> properties must be identical when converted to a common time standard.
            It is highly recommended that you use <see cref="M:CesiumLanguageWriter.JulianDate.EqualsEpsilon(CesiumLanguageWriter.JulianDate,System.Double)"/> or <see cref="M:CesiumLanguageWriter.JulianDate.IsIdentical(CesiumLanguageWriter.JulianDate)"/>
            instead of this method.
            </summary>
            <param name="other">The date to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.IsIdentical(CesiumLanguageWriter.JulianDate)">
            <summary>
            Returns true if this date is identical to another date.  Unlike <see cref="M:CesiumLanguageWriter.JulianDate.Equals(CesiumLanguageWriter.JulianDate)"/>, this method will
            consider two dates with different time standards to be different even if the dates represent the same
            moment when expressed in the same time standard.
            </summary>
            <param name="other">The date to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> is identical to this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.EqualsEpsilon(CesiumLanguageWriter.JulianDate,System.Double)">
            <summary>
            Returns true if this date is within <paramref name="epsilon"/> seconds of the
            specified date.  That is, in order for the dates to be considered equal (and for
            this function to return true), the absolute value of the difference between them, in
            seconds, must be less than <paramref name="epsilon"/>.
            </summary>
            <param name="other">The Julian Date to compare to this date.</param>
            <param name="epsilon">The smallest difference between the dates, in seconds, such that they will NOT be considered equal.</param>
            <returns>true if the dates are equal as defined by the epsilon value.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.ToString">
            <summary>
            Returns the value of this <see cref="T:CesiumLanguageWriter.JulianDate"/> in the standard format.
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.CompareTo(CesiumLanguageWriter.JulianDate)">
            <summary>
            Compares this instance with another instance of the same type.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>
            A value indicating the relative order of the objects being compared.  The return value has these meanings:
            <list type="table">
              <listheader>
                <term>Value</term>
                <description>Meaning</description>
              </listheader>
              <item>
                <term>Less than zero</term>
                <description>
                  This instance is less than <paramref name="other"/>.
                </description>
              </item>
              <item>
                <term>Zero</term>
                <description>
                  This instance is equal to <paramref name="other"/>.
                </description>
              </item>
              <item>
                <term>Greater than zero</term>
                <description>
                  This instance is greater than <paramref name="other"/>.
                </description>
              </item>
            </list>
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.CompareTo(System.Object)">
            <summary>
            Compares this instance with another instance of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value indicating the relative order of the objects being compared.  The return value has these meanings:
            <list type="table">
              <listheader>
                <term>Value</term>
                <description>Meaning</description>
              </listheader>
              <item>
                <term>Less than zero</term>
                <description>
                  This instance is less than <paramref name="obj"/>.
                </description>
              </item>
              <item>
                <term>Zero</term>
                <description>
                  This instance is equal to <paramref name="obj"/>.
                </description>
              </item>
              <item>
                <term>Greater than zero</term>
                <description>
                  This instance is greater than <paramref name="obj"/>.
                </description>
              </item>
            </list>
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.ToDateTime">
            <summary>
            Converts this <see cref="T:CesiumLanguageWriter.JulianDate"/> to a <filter name="DotNet,Silverlight">.NET standard</filter>
            <see cref="T:System.DateTime"/> with a default time standard of Coordinated Universal
            Time.
            </summary>
            <returns>The <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.ToDateTime(CesiumLanguageWriter.TimeStandard)">
            <summary>
            Converts this <see cref="T:CesiumLanguageWriter.JulianDate"/> to a <filter name="DotNet,Silverlight">.NET standard</filter>
            <see cref="T:System.DateTime"/> expressed in the specified time standard.
            </summary>
            <param name="standard">The time standard in which to express the returned
            <see cref="T:System.DateTime"/>.</param>
            <returns>The <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.ToGregorianDate">
            <summary>
            Converts this <see cref="T:CesiumLanguageWriter.JulianDate"/> to a <see cref="T:CesiumLanguageWriter.GregorianDate"/> with a
            default time standard of Coordinated Universal Time.
            </summary>
            <returns>The <see cref="T:CesiumLanguageWriter.GregorianDate"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.ToGregorianDate(CesiumLanguageWriter.TimeStandard)">
            <summary>
            Converts this <see cref="T:CesiumLanguageWriter.JulianDate"/> to a <see cref="T:CesiumLanguageWriter.GregorianDate"/>
            expressed in the specified time standard.
            </summary>
            <param name="standard">The time standard in which to express the returned
            <see cref="T:CesiumLanguageWriter.GregorianDate"/>.</param>
            <returns>The <see cref="T:CesiumLanguageWriter.GregorianDate"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.IsClose(CesiumLanguageWriter.JulianDate)">
            <summary>
            Returns 0 if this date is anywhere near the specified date such that time
            standard conversions might affect their equality or ordering.  Otherwise
            returns the difference Day - other.Day.  This is helpful for optimizations.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Converts a 
            <see cref="T:CesiumLanguageWriter.JulianDate"/> to a <see cref="T:System.DateTime"/> object.
            </summary>
            <returns>A <see cref="T:System.DateTime"/> representation of a <see cref="T:CesiumLanguageWriter.JulianDate"/>
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#GetTypeCode">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Returns the 
            <see cref="T:System.TypeCode"/> for this instance.
            </summary>
            <returns><see cref="F:System.TypeCode.Object"/></returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToByte(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToChar(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToDouble(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Converts 
            <see cref="T:CesiumLanguageWriter.JulianDate"/> to its decimal representation.
            </summary>
            <returns>The total number of whole and fractional days represented by this astronomical
            Julian date.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToInt16(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToInt32(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToInt64(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToSByte(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToSingle(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToString(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Converts the 
            <see cref="T:CesiumLanguageWriter.JulianDate"/> to a string representation.
            </summary>
            <returns>The string representation of this <see cref="T:CesiumLanguageWriter.JulianDate"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Converts this 
            <see cref="T:CesiumLanguageWriter.JulianDate"/> to the  type given by 
            <paramref name="conversionType"/>.
            </summary>
            <returns>A <see cref="T:CesiumLanguageWriter.JulianDate"/> converted to the type specified by 
            <paramref name="conversionType"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.JulianDate.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <summary>
            Implements <see cref="T:System.IConvertible"/> interface. Throws an 
            <see cref="T:System.InvalidCastException"/> because a <see cref="T:CesiumLanguageWriter.JulianDate"/> cannot be
            converted to this type of object.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.JulianDate.MinValue">
            <summary>
            Gets the smallest value possible of <see cref="T:CesiumLanguageWriter.JulianDate"/>.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.JulianDate.MaxValue">
            <summary>
            Gets the largest possible value of <see cref="T:CesiumLanguageWriter.JulianDate"/>.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.JulianDate.TotalDays">
            <summary>
            Gets the total number of whole and fractional days represented by this astronomical Julian date.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.JulianDate.Day">
            <summary>
            Gets the integer portion of the Julian Date (or astronomical Julian day number).
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.JulianDate.SecondsOfDay">
            <summary>
            Gets the number of seconds past noon on the whole-number Julian Day.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.JulianDate.Standard">
            <summary>
            Gets the <see cref="T:CesiumLanguageWriter.TimeStandard"/> that this astronomical Julian date is based upon.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.LeapSecond">
            <summary>
            Describes a single leap second.
            </summary>
            <remarks>
            The International Earth Rotation Service (IERS) periodically introduces an intercalary adjustment
            to the Coordinated Universal Time (UTC) time scale in order to keep it in close agreement with the
            Universal Time (UT1) time scale.  This adjustment amounts to a one second discontinuity, a leap second,
            in the UTC time scale that, in addition to the UT1 time scales, also affects transformations to
            other continuous time scales.  Since the inception of leap seconds, all adjustments have been
            performed either at the end of 30 June or 31 December UTC though a leap second could, by rule,
            be applied at the end of any month.
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSecond.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of a Leap Second.
            </summary>
            <param name="date">The Julian date of the leap second, in Coordinated Universal Time (UTC).</param>
            <param name="totalTaiOffsetFromUtc">The offset of TAI from UTC after this leap second.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSecond.#ctor(CesiumLanguageWriter.JulianDate,System.Double)">
            <summary>
            Initializes a new instance of a Leap Second.
            </summary>
            <param name="date">The date of the leap second.  This will be assumed to be Coordinated Universal Time (UTC) regardless of the actual time standard associated with the date.</param>
            <param name="totalTaiOffsetFromUtc">The offset of TAI from UTC after this leap second.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSecond.Equals(CesiumLanguageWriter.LeapSecond)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSecond.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSecond.ToString">
            <summary>
            Returns the date of this LeapSecond and offset from UTC as a string.
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSecond.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSecond.op_Equality(CesiumLanguageWriter.LeapSecond,CesiumLanguageWriter.LeapSecond)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSecond.op_Inequality(CesiumLanguageWriter.LeapSecond,CesiumLanguageWriter.LeapSecond)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="P:CesiumLanguageWriter.LeapSecond.Date">
            <summary>
            Gets the date of the leap second.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LeapSecond.TotalTaiOffsetFromUtc">
            <summary>
            Gets the total difference TAI - UTC after this leap second, in seconds.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.LeapSeconds">
            <summary>
            Manages Leap Seconds.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSeconds.#ctor">
            <summary>
            Initializes a new instance with the list of leap seconds that was available
            when the library was released.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSeconds.#ctor(System.Collections.Generic.IEnumerable{CesiumLanguageWriter.LeapSecond})">
            <summary>
            Initializes a new instance with the specified list of leap seconds.
            </summary>
            <param name="leapSeconds">The list of leap seconds.</param>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSeconds.GetTaiMinusUtc(CesiumLanguageWriter.JulianDate)">
            <summary>
            Returns the difference TAI - UTC as of the given date, in seconds.
            </summary>
            <param name="date">The date.</param>
            <returns>The difference.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSeconds.ConvertTaiToUtc(CesiumLanguageWriter.JulianDate)">
            <summary>
            Convert <paramref name="date"/> from TAI to UTC, if possible.
            </summary>
            <param name="date">The date, which must be in the TAI 
            <see cref="T:CesiumLanguageWriter.TimeStandard"/>.</param>
            <returns>The resulting UTC 
            <see cref="T:CesiumLanguageWriter.JulianDate"/>, if it was possible to convert.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the date could not be
            converted to UTC.</exception>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSeconds.TryConvertTaiToUtc(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate@)">
            <summary>
            Try to convert <paramref name="date"/> from TAI to UTC, if possible.
            </summary>
            <param name="date">The date, which must be in the TAI 
            <see cref="T:CesiumLanguageWriter.TimeStandard"/>.</param>
            <param name="result">Out parameter for returning the resulting UTC 
            <see cref="T:CesiumLanguageWriter.JulianDate"/>, if it was possible to convert.</param>
            <returns><see langword="true"/> if <paramref name="date"/> could be converted
            to UTC, otherwise false.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.LeapSeconds.DoesDayHaveLeapSecond(System.Int32)">
            <summary>
            Determines if a given day contains a leap second.
            </summary>
            <param name="julianDayNumber">The day, specified as a Julian day number.</param>
            <returns>true if the day contains a leap second, otherwise false.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.LeapSeconds.Instance">
            <summary>
            Gets the default (and usually only) instance.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.LeapSeconds.LeapSecondList">
            <summary>
            Gets the list of leap seconds currently being used by this class.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.Matrix3By3">
            <summary>
            A 3-by-3 matrix. This type is often used to represent a rotation.
            </summary>
            <seealso cref="T:CesiumLanguageWriter.UnitQuaternion"/>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.CrossProductEquivalentMatrix(CesiumLanguageWriter.Cartesian)">
            <summary>
            Forms a <see cref="T:CesiumLanguageWriter.Matrix3By3"/> from the input vector such that the result of the cross product of the input vector
            with another vector is equivalent to pre-multiplying the other vector by the returned matrix.
            </summary>
            <param name="vector">The vector for which the cross product equivalent matrix is desired.</param>
            <returns>The cross product equivalent matrix.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.CrossProductEquivalentMatrix(CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Forms a <see cref="T:CesiumLanguageWriter.Matrix3By3"/> from the input vector such that the result of the cross product of the input unit vector
            with another vector is equivalent to pre-multiplying the other vector by the returned matrix.
            </summary>
            <param name="vector">The unit vector for which the cross product equivalent matrix is desired.</param>
            <returns>The cross product equivalent matrix.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.DiagonalMatrix(System.Double,System.Double,System.Double)">
            <summary>
            Forms a diagonal matrix from the input elements.
            </summary>
            <param name="m11">1,1</param>
            <param name="m22">2,2</param>
            <param name="m33">3,3</param>
            <returns>The diagonal matrix.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.DiagonalMatrix(CesiumLanguageWriter.Cartesian)">
            <summary>
            Forms a diagonal matrix from the input vector.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The diagonal matrix</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.DiagonalMatrix(CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Forms a diagonal matrix from the input unit vector.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The diagonal matrix.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.#ctor(CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Initializes a new instance from a <see cref="T:CesiumLanguageWriter.UnitQuaternion"/>.
            </summary>
            <param name="quaternion">The quaternion.</param>
            <returns>The resulting 3-by-3 matrix.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance from elements.
            </summary>
            <param name="m11">1,1</param>
            <param name="m12">1,2</param>
            <param name="m13">1,3</param>
            <param name="m21">2,1</param>
            <param name="m22">2,2</param>
            <param name="m23">2,3</param>
            <param name="m31">3,1</param>
            <param name="m32">3,2</param>
            <param name="m33">3,3</param>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.Transpose">
            <summary>
            Transposes the matrix.
            </summary>
            <returns>The transposed matrix.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.Determinant">
            <summary>
            The determinant of the matrix.
            </summary>
            <returns>The determinant of the matrix.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.Invert">
            <summary>
            Inverts the matrix.
            </summary>
            <returns>The inverted matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Thrown when the absolute value of the <see cref="M:CesiumLanguageWriter.Matrix3By3.Determinant"/> is less than
            <see cref="F:CesiumLanguageWriter.Constants.Epsilon15"/>.</exception>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.Add(CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Adds a matrix to this matrix.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>The sum of the matrices.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.Subtract(CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Subtracts a matrix from this matrix.
            </summary>
            <param name="matrix">The matrix to subtract.</param>
            <returns>The result of the subtraction.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.Multiply(System.Double)">
            <summary>
            Multiplies this matrix by a scalar.
            </summary>
            <param name="scalar">The scalar to multiply by.</param>
            <returns>The result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.Multiply(CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Multiplies this matrix by a matrix.
            </summary>
            <param name="matrix">The matrix to multiply by.</param>
            <returns>The result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.Multiply(CesiumLanguageWriter.Cartesian)">
            <summary>
            Forms a new Cartesian3 vector as the product of this 3-by-3 matrix and the provided Cartesian3 vector.
            </summary>
            <param name="vector">The vector.</param>
            <returns>The resulting Cartesian3 vector.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.op_Multiply(CesiumLanguageWriter.Matrix3By3,System.Double)">
            <summary>
            Multiplies a matrix by a scalar.
            </summary>
            <param name="matrix">The matrix.</param>
            <param name="scalar">The scalar.</param>
            <returns>The result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.op_Multiply(System.Double,CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Multiplies a scalar by a matrix.
            </summary>
            <param name="scalar">The scalar.</param>
            <param name="matrix">The matrix.</param>
            <returns>The result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.op_Multiply(CesiumLanguageWriter.Matrix3By3,CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Multiplies the left matrix by the right matrix.
            </summary>
            <param name="left">The matrix on the left.</param>
            <param name="right">The matrix on the right.</param>
            <returns>The result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.op_Multiply(CesiumLanguageWriter.Matrix3By3,CesiumLanguageWriter.Cartesian)">
            <summary>
            Multiplies the 3-by-3 matrix by the Cartesian3 vector.
            </summary>
            <param name="matrix">The matrix.</param>
            <param name="vector">The vector.</param>
            <returns>The result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.op_Addition(CesiumLanguageWriter.Matrix3By3,CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Adds a matrix to this matrix.
            </summary>
            <param name="left">The left matrix.</param>
            <param name="right">The right matrix.</param>
            <returns>The sum of the matrices.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.op_Subtraction(CesiumLanguageWriter.Matrix3By3,CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Subtracts the second matrix from the first.
            </summary>
            <param name="left">The left matrix.</param>
            <param name="right">The right matrix.</param>
            <returns>The result of subtracting the second matrix from the first.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.EqualsEpsilon(CesiumLanguageWriter.Matrix3By3,System.Double)">
            <summary>
            Returns true if all of the elements of this matrix are within <paramref name="epsilon"/>
            of the same elements of the specified matrix.  That is, in order for the matrices to be
            considered equal (and for this function to return true), the absolute value of the
            difference between each of their elements must be less than <paramref name="epsilon"/>.
            </summary>
            <param name="other">The <see cref="T:CesiumLanguageWriter.Matrix3By3"/> to compare to this matrix.</param>
            <param name="epsilon">The smallest difference between the elements of the matrices for which they will NOT be considered equal.</param>
            <returns>true if the matrices are equal as defined by the epsilon value.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.op_Equality(CesiumLanguageWriter.Matrix3By3,CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.op_Inequality(CesiumLanguageWriter.Matrix3By3,CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Matrix3By3.Equals(CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.Identity">
            <summary>
            Gets a <see cref="T:CesiumLanguageWriter.Matrix3By3"/> representing an identity transformation.
            </summary>
            <returns>The 3-by-3 identity matrix.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.Undefined">
            <summary>
            Gets a <see cref="T:CesiumLanguageWriter.Matrix3By3"/> with elements of <see cref="F:System.Double.NaN"/>.
            </summary>
            <remarks>
            Use <see cref="P:CesiumLanguageWriter.Matrix3By3.IsUndefined"/> to test whether a <see cref="T:CesiumLanguageWriter.Matrix3By3"/> instance
            is undefined since it will return <see langword="true"/> if any of the element values
            are <see cref="F:System.Double.NaN"/>.
            </remarks>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.Zero">
            <summary>
            Gets a <see cref="T:CesiumLanguageWriter.Matrix3By3"/> representing the zero matrix.
            </summary>
            <returns>The 3-by-3 zero matrix.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.Item(System.Int32,System.Int32)">
            <summary>
            Accesses the matrix elements using zero-based indexing.
            </summary>
            <param name="row">The row index.</param>
            <param name="column">The column index.</param>
            <returns>The value corresponding to the indicated element of the matrix.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when either <paramref name="row"/> or <paramref name="column"/> is less than 0 or greater than 2.
            </exception>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.M11">
            <summary>
            Gets the element in the first row, first column.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.M12">
            <summary>
            Gets the element in the first row, second column.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.M13">
            <summary>
            Gets the element in the first row, third column.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.M21">
            <summary>
            Gets the element in the second row, first column.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.M22">
            <summary>
            Gets the element in the second row, second column.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.M23">
            <summary>
            Gets the element in the second row, third column.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.M31">
            <summary>
            Gets the element in the third row, first column.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.M32">
            <summary>
            Gets the element in the third row, second column.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.M33">
            <summary>
            Gets the element in the third row, third column.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Matrix3By3.IsUndefined">
            <summary>
            Gets an indication as to whether any of the matrix values are <see cref="F:System.Double.NaN"/>.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.Rectangular">
            <summary>
            A set of rectilinear 2-dimensional coordinates.
            </summary>
            <remarks>
            The corresponding 3-dimensional coordinates are <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.#ctor(System.Double[],System.Int32)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates from 2 consecutive elements in the provided array.
            </summary>
            <param name="elements">The array of coordinate values.</param>
            <param name="startIndex">The index of the first element in the array to use.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the array of <paramref name="elements"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when an object of this type is constructed from an array with less than 2 <paramref name="elements"/>.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.#ctor(System.Double[])">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates from the first 2 consecutive elements in the provided array.
            </summary>
            <param name="elements">The array of coordinate values.</param>
            <exception cref="T:System.ArgumentNullException">
            The array of <paramref name="elements"/> cannot be null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            An object of this type must be constructed from an array with at least 2 <paramref name="elements"/>.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates from the provided values.
            </summary>
            <param name="x">The linear coordinate along the positive x-axis.</param>
            <param name="y">The linear coordinate along the positive y-axis.</param>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.Invert">
            <summary>
            Inverts this instance.
            </summary>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates that represents the inverse of this instance.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.Multiply(System.Double)">
            <summary>
            Multiplies this instance by a scalar.
            </summary>
            <param name="scalar">The multiplier, or value which is to multiply this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates that represents the result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.Divide(System.Double)">
            <summary>
            Divides this instance by a scalar.
            </summary>
            <param name="scalar">The divisor, or value which is to divide this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates that represents the result of the division.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.Add(CesiumLanguageWriter.Rectangular)">
            <summary>
            Adds the specified set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates to this instance.
            </summary>
            <param name="other">The addend, or value which is to be added to this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates that represents the result of the addition.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.Subtract(CesiumLanguageWriter.Rectangular)">
            <summary>
            Subtracts the specified set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates from this instance.
            </summary>
            <param name="other">The subtrahend, or value which is to be subtracted from this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates that represents the result of the subtraction.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.Dot(CesiumLanguageWriter.Rectangular)">
            <summary>
            Forms the dot product of the specified set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates with this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates to dot with this instance.</param>
            <returns>A <see cref="T:System.Double"/> that represents the result of the product.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.op_Multiply(CesiumLanguageWriter.Rectangular,System.Double)">
            <summary>
            Multiplies a specified set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates by a scalar.
            </summary>
            <param name="left">The multiplicand, or value which is to be multiplied by <paramref name="right"/>.</param>
            <param name="right">The multiplier, or value which is to multiply <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates that represents the result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.op_Multiply(System.Double,CesiumLanguageWriter.Rectangular)">
            <summary>
            Multiplies a scalar by a specified set of set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates.
            </summary>
            <param name="left">The multiplicand, or value which is to be multiplied by <paramref name="right"/>.</param>
            <param name="right">The multiplier, or value which is to multiply <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates that represents the result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.op_Division(CesiumLanguageWriter.Rectangular,System.Double)">
            <summary>
            Divides a specified set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates by a scalar.
            </summary>
            <param name="left">The dividend, or value which is to be divided by <paramref name="right"/>.</param>
            <param name="right">The divisor, or value which is to divide <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates that represents the result of the division.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.op_Addition(CesiumLanguageWriter.Rectangular,CesiumLanguageWriter.Rectangular)">
            <summary>
            Adds a specified set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates to another specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </summary>
            <param name="left">The augend, or value to which <paramref name="right"/> is to be added.</param>
            <param name="right">The addend, or value which is to be added to <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates that represents the result of the addition.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.op_Subtraction(CesiumLanguageWriter.Rectangular,CesiumLanguageWriter.Rectangular)">
            <summary>
            Subtracts a specified set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates from another specified set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates.
            </summary>
            <param name="left">The minuend, or value from which <paramref name="right"/> is to be subtracted.</param>
            <param name="right">The subtrahend, or value which is to be subtracted from <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates that represents the result of the subtraction.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.op_UnaryNegation(CesiumLanguageWriter.Rectangular)">
            <summary>
            Negates the specified set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates, yielding a new set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates.
            </summary>
            <param name="coordinates">The set of coordinates.</param>
            <returns>The result of negating the elements of the original set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.Rotate(System.Double)">
            <summary>
            Produces a set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates representing this instance which results from rotating
            the original axes used to represent this instance by the provided angle.
            </summary>
            <param name="angle">The angle of rotation.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates which is the result of the rotation.</returns>
            <remarks>
            This type of rotation is sometimes referred to as an "alias rotation".
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.EqualsEpsilon(CesiumLanguageWriter.Rectangular,System.Double)">
            <summary>
            Indicates whether each coordinate value of another instance of this type
            is within the required tolerance of the corresponding coordinate value of this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates to compare to this instance.</param>
            <param name="epsilon">The limit at which the absolute differences between the coordinate values will not be considered equal.</param>
            <returns>
            <see langword="true"/> if the absolute differences are less than <paramref name="epsilon"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.ToString">
            <summary>
            Returns the string representation of the value of this instance.
            </summary>
            <returns>
            A string that represents the value of this instance in the form
            "X, Y".
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.op_Equality(CesiumLanguageWriter.Rectangular,CesiumLanguageWriter.Rectangular)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.op_Inequality(CesiumLanguageWriter.Rectangular,CesiumLanguageWriter.Rectangular)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.Rectangular.Equals(CesiumLanguageWriter.Rectangular)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.Rectangular.Zero">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates with values of zero.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Rectangular.Undefined">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.Rectangular"/> coordinates with values of <see cref="F:System.Double.NaN"/>.
            </summary>
            <remarks>
            Use <see cref="P:CesiumLanguageWriter.Rectangular.IsUndefined"/> to test whether a <see cref="T:CesiumLanguageWriter.Rectangular"/> instance
            is undefined since it will return <see langword="true"/> if any of the coordinate values
            are <see cref="F:System.Double.NaN"/>.
            </remarks>
        </member>
        <member name="P:CesiumLanguageWriter.Rectangular.X">
            <summary>
            Gets the linear coordinate along the positive x-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Rectangular.Y">
            <summary>
            Gets the linear coordinate along the positive y-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Rectangular.Magnitude">
            <summary>
            Gets the magnitude of this instance.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Rectangular.MagnitudeSquared">
            <summary>
            Gets the square of the <see cref="P:CesiumLanguageWriter.Rectangular.Magnitude"/> of this instance.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Rectangular.HasZeroMagnitude">
            <summary>
            Gets a value indicating if the <see cref="P:CesiumLanguageWriter.Rectangular.Magnitude"/> of this instance is zero.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Rectangular.IsUndefined">
            <summary>
            Gets whether or not any of the coordinates for this instance have the value <see cref="F:System.Double.NaN"/>.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Rectangular.Length">
            <summary>
            Gets the number of elements in this set of coordinates.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.Rectangular.Item(System.Int32)">
            <summary>
            Gets the value of the specified element with <paramref name="index"/> of 0 and 1 corresponding to the coordinates
            X and Y.
            </summary>
            <param name="index">Either 0 or 1 corresponding to the coordinates X or Y.</param>
            <returns>The coordinate associated with the specified <paramref name="index"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the <paramref name="index"/> is less than 0 or is equal to or greater than <see cref="P:CesiumLanguageWriter.Rectangular.Length"/>.
            </exception>
        </member>
        <member name="T:CesiumLanguageWriter.TimeConstants">
            <summary>
            Contains time-related constants.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeConstants.SecondsPerMinute">
            <summary>
            The number of seconds in a minute.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeConstants.MinutesPerHour">
            <summary>
            The number of minutes in an hour.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeConstants.HoursPerDay">
            <summary>
            The number of hours in a day.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeConstants.SecondsPerHour">
            <summary>
            The number of seconds in an hour.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeConstants.MinutesPerDay">
            <summary>
            The number of minutes in a day.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeConstants.SecondsPerDay">
            <summary>
            The number of seconds in a standard day that does not have leap seconds.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeConstants.DaysPerJulianCentury">
            <summary>
            The number of standard days in a Julian century.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeConstants.PicoSecond">
            <summary>
            One picosecond
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeConstants.ModifiedJulianDateDifference">
            <summary>
            The difference between a Julian date and a modified Julian date.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeConstants.NextBefore86400">
            <summary>
            The next representable 64-bit double before 86400.0.  This is useful for normalizing
            times that must be less than a day (for example, the <see cref="P:CesiumLanguageWriter.JulianDate.SecondsOfDay"/> property
            of <see cref="T:CesiumLanguageWriter.JulianDate"/>).
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.TimeInterval">
            <summary>
            An interval defined by a start date and a stop date.  The end points are optionally included
            in the interval.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.#ctor(CesiumLanguageWriter.JulianDate,CesiumLanguageWriter.JulianDate)">
            <summary>
            Initializes a new interval with the specified start date and stop date.
            The new interval is closed, meaning that both end points are included.
            </summary>
            <param name="start">The first date in the interval.</param>
            <param name="stop">The last date in the interval.</param>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.ToDuration">
            <summary>
            Returns a <see cref="T:CesiumLanguageWriter.Duration"/> representing the span of time between the
            <see cref="P:CesiumLanguageWriter.TimeInterval.Start"/> and <see cref="P:CesiumLanguageWriter.TimeInterval.Stop"/> of the interval.
            </summary>
            <returns>The duration.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.ToTimeStandard(CesiumLanguageWriter.TimeStandard)">
            <summary>
            Returns a <see cref="T:CesiumLanguageWriter.TimeInterval"/> equivalent to this one where the time standard
            of the start and end dates has been converted to the specified standard.
            </summary>
            <param name="timeStandard">The time standard of the new interval.</param>
            <returns>An equivalent interval with the new time standard.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.Contains(CesiumLanguageWriter.JulianDate)">
            <summary>
            Determines if the interval contains a specified date.
            </summary>
            <param name="date">The date to test.</param>
            <returns>true if the interval contains the date, otherwise false.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.EqualsEpsilon(CesiumLanguageWriter.TimeInterval,System.Double)">
            <summary>
            Determines if this time interval is equal to another time interval, using an epsilon to compare
            the <see cref="P:CesiumLanguageWriter.TimeInterval.Start"/> and <see cref="P:CesiumLanguageWriter.TimeInterval.Stop"/> properties of the
            two intervals.  The dates are considered equal if they are within <paramref name="epsilon"/>
            seconds of each other.  All other properties must be identical.
            </summary>
            <param name="other">The time interval to compare to this time interval.</param>
            <param name="epsilon">The smallest difference between the <see cref="P:CesiumLanguageWriter.TimeInterval.Start"/> and <see cref="P:CesiumLanguageWriter.TimeInterval.Stop"/> dates, in seconds, such that they will NOT be considered equal.</param>
            <returns>true if the <see cref="P:CesiumLanguageWriter.TimeInterval.Start"/> and <see cref="P:CesiumLanguageWriter.TimeInterval.Stop"/> dates of the intervals are equal as defined by the epsilon value and all other properties are identical.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.Equals(CesiumLanguageWriter.TimeInterval)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.ToString">
            <summary>
            Returns a string with interval in the format "[Start, Stop)".  Square brackets indicate
            that the end point of the interval is included in the intervals.  Parenthesis indicate that the
            end point is not included.
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.op_Equality(CesiumLanguageWriter.TimeInterval,CesiumLanguageWriter.TimeInterval)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.TimeInterval.op_Inequality(CesiumLanguageWriter.TimeInterval,CesiumLanguageWriter.TimeInterval)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="P:CesiumLanguageWriter.TimeInterval.Start">
            <summary>
            Gets the start date of the interval.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.TimeInterval.Stop">
            <summary>
            Gets the stop date of the interval.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.TimeInterval.IsEmpty">
            <summary>
            Gets a value indicating whether or not the interval is empty.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.TimeInterval.Empty">
            <summary>
            Gets an empty interval.
            </summary>
        </member>
        <member name="T:CesiumLanguageWriter.TimeStandard">
            <summary>
            Provides a means for measuring time by specifying the rate at which time passes and/or points in time.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeStandard.InternationalAtomicTime">
            <summary>
            The International Atomic Time (TAI) time standard.
            </summary>
        </member>
        <member name="F:CesiumLanguageWriter.TimeStandard.CoordinatedUniversalTime">
            <summary>
            The Coordinated Universal Time (UTC) time standard.
            </summary>
            <remarks>
            <para>
            UTC is related to TAI according to the relationship
            </para>
            <para>
            <code>UTC = TAI - deltaT</code>
            </para>
            <para>
            where 
            <code>deltaT</code>
            is the number of leap seconds which have been introduced as of 
            the time in TAI.
            </para>
            </remarks>
        </member>
        <member name="T:CesiumLanguageWriter.UnitCartesian">
            <summary>
            A set of rectilinear 3-dimensional coordinates with unit magnitude.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.#ctor(System.Double[],System.Int32)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from 3 consecutive elements in the provided array.
            </summary>
            <param name="elements">The array of coordinate values.</param>
            <param name="startIndex">The index of the first element in the array to use.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the array of <paramref name="elements"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when an object of this type is constructed from an array with less than 3 <paramref name="elements"/>.
            </exception>
            <exception cref="T:System.DivideByZeroException">
            Thrown when the magnitude of the provided coordinates are zero.
            </exception>
            <exception cref="T:System.NotFiniteNumberException">
            Thrown when the magnitude of the provided coordinates is infinite.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.#ctor(System.Double[])">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from the first 3 consecutive elements in the provided array.
            </summary>
            <param name="elements">The array of coordinate values.</param>
            <exception cref="T:System.ArgumentNullException">
            The array of <paramref name="elements"/> cannot be null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            An object of this type must be constructed from an array with at least 3 <paramref name="elements"/>.
            </exception>
            <exception cref="T:System.DivideByZeroException">
            The magnitude of the provided coordinates must not be zero.
            </exception>
            <exception cref="T:System.NotFiniteNumberException">
            The magnitude of the provided coordinates must not be infinite.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from the provided values.
            </summary>
            <param name="x">The linear coordinate along the positive x-axis.</param>
            <param name="y">The linear coordinate along the positive y-axis.</param>
            <param name="z">The linear coordinate along the positive z-axis.</param>
            <exception cref="T:System.DivideByZeroException">
            The magnitude of the provided coordinates must not be zero.
            </exception>
            <exception cref="T:System.NotFiniteNumberException">
            The magnitude of the provided coordinates must not be infinite.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.#ctor(System.Double,System.Double,System.Double,System.Double@)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from the provided values.
            </summary>
            <param name="x">The linear coordinate along the positive x-axis.</param>
            <param name="y">The linear coordinate along the positive y-axis.</param>
            <param name="z">The linear coordinate along the positive z-axis.</param>
            <param name="magnitude">
            <filter name="Java">On input, an array with one element.  On return, the array is populated with</filter>
            <filter name="DotNet,Silverlight">On return,</filter>
            the magnitude of the original set of coordinates.
            </param>
            <exception cref="T:System.DivideByZeroException">
            The magnitude of the provided coordinates must not be zero.
            </exception>
            <exception cref="T:System.NotFiniteNumberException">
            The magnitude of the provided coordinates must not be infinite.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.#ctor(CesiumLanguageWriter.Cartesian)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from the provided set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </summary>
            <param name="coordinates">The set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.</param>
            <exception cref="T:System.DivideByZeroException">
            The magnitude of the provided coordinates must not be zero.
            </exception>
            <exception cref="T:System.NotFiniteNumberException">
            The magnitude of the provided coordinates must not be infinite.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.#ctor(CesiumLanguageWriter.Cartesian,System.Double@)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from the provided set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </summary>
            <param name="coordinates">The set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.</param>
            <param name="magnitude">
            <filter name="Java">On input, an array with one element.  On return, the array is populated with</filter>
            <filter name="DotNet,Silverlight">On return,</filter>
            the magnitude of the original set of coordinates.
            </param>
            <exception cref="T:System.DivideByZeroException">
            The magnitude of the provided coordinates must not be zero.
            </exception>
            <exception cref="T:System.NotFiniteNumberException">
            The magnitude of the provided coordinates must not be infinite.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from the provided spherical coordinates.
            </summary>
            <param name="clock">The angular coordinate lying in the xy-plane measured from the positive x-axis and toward the positive y-axis.</param>
            <param name="cone">The angular coordinate measured from the positive z-axis and toward the negative z-axis.</param>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.#ctor(CesiumLanguageWriter.UnitSpherical)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from the provided set of
            <see cref="T:CesiumLanguageWriter.UnitSpherical"/> coordinates.
            </summary>
            <param name="unitSpherical">The set of <see cref="T:CesiumLanguageWriter.UnitSpherical"/> coordinates.</param>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Invert">
            <summary>
            Inverts this instance.
            </summary>
            <returns>A set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates that represents the inverse of this instance.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Multiply(System.Double)">
            <summary>
            Multiplies this instance by a scalar.
            </summary>
            <param name="scalar">The multiplier, or value by which to multiply this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Divide(System.Double)">
            <summary>
            Divides this instance by a scalar.
            </summary>
            <param name="scalar">The divisor, or value by which to divide this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the division.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Add(CesiumLanguageWriter.Cartesian)">
            <summary>
            Adds the specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to this instance.
            </summary>
            <param name="other">The addend, or value which is to be added to this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the addition.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Add(CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Adds the specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates to this instance.
            </summary>
            <param name="other">The addend, or value which is to be added to this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the addition.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Subtract(CesiumLanguageWriter.Cartesian)">
            <summary>
            Subtracts the specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates from this instance.
            </summary>
            <param name="other">The subtrahend, or value which is to be subtracted from this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the subtraction.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Subtract(CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Subtracts the specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from this instance.
            </summary>
            <param name="other">The subtrahend, or value which is to be subtracted from this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the subtraction.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Cross(CesiumLanguageWriter.Cartesian)">
            <summary>
            Forms the cross product of the specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates with this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to cross with this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the product.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Cross(CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Forms the cross product of the specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates with this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to cross with this instance.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the product.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Dot(CesiumLanguageWriter.Cartesian)">
            <summary>
            Forms the dot product of the specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates with this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to dot with this instance.</param>
            <returns>A <see cref="T:System.Double"/> that represents the result of the product.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Dot(CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Forms the dot product of the specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates with this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to dot with this instance.</param>
            <returns>A <see cref="T:System.Double"/> that represents the result of the product.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Multiply(CesiumLanguageWriter.UnitCartesian,System.Double)">
            <summary>
            Multiplies a specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates by a scalar.
            </summary>
            <param name="left">The multiplicand, or value which is to be multiplied by <paramref name="right"/>.</param>
            <param name="right">The multiplier, or value which is to multiply <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Multiply(System.Double,CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Multiplies a scalar by a specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates.
            </summary>
            <param name="left">The multiplicand, or value to be multiplied by <paramref name="right"/>.</param>
            <param name="right">The multiplier, or value which by which <paramref name="left"/> is to be multiplied.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Division(CesiumLanguageWriter.UnitCartesian,System.Double)">
            <summary>
            Divides a specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates by a scalar.
            </summary>
            <param name="left">The dividend, or value to be divided by <paramref name="right"/>.</param>
            <param name="right">The divisor, or value by which <paramref name="left"/> is to be divided.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the division.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Addition(CesiumLanguageWriter.UnitCartesian,CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Adds a specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates to another specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates.
            </summary>
            <param name="left">The augend, or value to which <paramref name="right"/> is to be added.</param>
            <param name="right">The addend, or value which is to be added to <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the addition.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Addition(CesiumLanguageWriter.UnitCartesian,CesiumLanguageWriter.Cartesian)">
            <summary>
            Adds a specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates to a specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates.
            </summary>
            <param name="left">The augend, or value to which <paramref name="right"/> is to be added.</param>
            <param name="right">The addend, or value which is to be added to <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the addition.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Addition(CesiumLanguageWriter.Cartesian,CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Adds a specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates to a specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </summary>
            <param name="left">The augend, or value to which <paramref name="right"/> is to be added.</param>
            <param name="right">The addend, or value which is to be added to <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the addition.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Subtraction(CesiumLanguageWriter.UnitCartesian,CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Subtracts a specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from another specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates.
            </summary>
            <param name="left">The minuend, or value from which <paramref name="right"/> is to be subtracted.</param>
            <param name="right">The subtrahend, or value which is to be subtracted from <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the subtraction.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Subtraction(CesiumLanguageWriter.UnitCartesian,CesiumLanguageWriter.Cartesian)">
            <summary>
            Subtracts a specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates from a specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates.
            </summary>
            <param name="left">The minuend, or value from which <paramref name="right"/> is to be subtracted.</param>
            <param name="right">The subtrahend, or value which is to be subtracted from <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the subtraction.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Subtraction(CesiumLanguageWriter.Cartesian,CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Subtracts a specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates from a specified set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates.
            </summary>
            <param name="left">The minuend, or value from which <paramref name="right"/> is to be subtracted.</param>
            <param name="right">The subtrahend, or value which is to be subtracted from <paramref name="left"/>.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.Cartesian"/> coordinates that represents the result of the subtraction.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_UnaryNegation(CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Negates the specified <see cref="T:CesiumLanguageWriter.UnitCartesian"/>, yielding a new <see cref="T:CesiumLanguageWriter.UnitCartesian"/>.
            </summary>
            <param name="coordinates">The set of coordinates.</param>
            <returns>The result of negating the elements of the original <see cref="T:CesiumLanguageWriter.UnitCartesian"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Rotate(CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Produces a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates representing this instance which results from rotating
            the original axes used to represent this instance by the provided <see cref="T:CesiumLanguageWriter.Matrix3By3"/> rotation.
            </summary>
            <param name="rotation">The <see cref="T:CesiumLanguageWriter.Matrix3By3"/> rotation.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates which is the result of the rotation.</returns>
            <remarks>
            This type of rotation is sometimes referred to as an "alias rotation".
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Rotate(CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Produces a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates representing this instance which results from rotating
            the original axes used to represent this instance by the provided <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> rotation.
            </summary>
            <param name="rotation">The <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> rotation.</param>
            <returns>A set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates which is the result of the rotation.</returns>
            <remarks>
            This type of rotation is sometimes referred to as an "alias rotation".
            </remarks>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.EqualsEpsilon(CesiumLanguageWriter.UnitCartesian,System.Double)">
            <summary>
            Indicates whether each coordinate value of another instance of this type
            is within the required tolerance of the corresponding coordinate value of this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates to compare to this instance.</param>
            <param name="epsilon">The limit at which the absolute differences between the coordinate values will not be considered equal.</param>
            <returns>
            <see langword="true"/> if the absolute differences are less than <paramref name="epsilon"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.ToString">
            <summary>
            Returns the string representation of the value of this instance.
            </summary>
            <returns>
            A string that represents the value of this instance in the form
            "X, Y, Z".
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Equality(CesiumLanguageWriter.UnitCartesian,CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.op_Inequality(CesiumLanguageWriter.UnitCartesian,CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.AngleBetween(CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Determines the angle in radians between the specified set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates and this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates to evaluate.</param>
            <returns>A <see cref="T:System.Double"/> that represents the angle in radians between the two instances.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitCartesian.Equals(CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.Undefined">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates with values of <see cref="F:System.Double.NaN"/>.
            </summary>
            <remarks>
            Use <see cref="P:CesiumLanguageWriter.UnitCartesian.IsUndefined"/> to test whether a <see cref="T:CesiumLanguageWriter.UnitCartesian"/> instance
            is undefined since it will return <see langword="true"/> if any of the coordinate values
            are <see cref="F:System.Double.NaN"/>.
            </remarks>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.UnitX">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates representing the x-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.UnitY">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates representing the y-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.UnitZ">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates representing the z-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.X">
            <summary>
            Gets the linear coordinate along the positive x-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.Y">
            <summary>
            Gets the linear coordinate along the positive y-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.Z">
            <summary>
            Gets the linear coordinate along the positive z-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.MostOrthogonalAxis">
            <summary>
            Gets the axis that is most orthogonal to this instance.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.MostParallelAxis">
            <summary>
            Gets the axis which is most parallel to this instance.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.IsUndefined">
            <summary>
            Gets whether or not any of the coordinates for this instance have the value <see cref="F:System.Double.NaN"/>.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.Length">
            <summary>
            Gets the number of elements in this set of coordinates.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitCartesian.Item(System.Int32)">
            <summary>
            Gets the value of the specified element with <paramref name="index"/> of 0, 1, and 2 corresponding to the coordinates
            X, Y, and Z.
            </summary>
            <param name="index">Either 0, 1, or 2 corresponding to the coordinates X, Y, or Z.</param>
            <returns>The coordinate associated with the specified <paramref name="index"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="index"/> is less than 0 or is equal to or greater than <see cref="P:CesiumLanguageWriter.UnitCartesian.Length"/>.
            </exception>
        </member>
        <member name="T:CesiumLanguageWriter.UnitQuaternion">
            <summary>
            A set of 4-dimensional coordinates used to represent rotation in 3-dimensional space.
            </summary>
            <remarks>
            To transform a <see cref="T:CesiumLanguageWriter.Cartesian"/> with this rotation, see <see cref="M:CesiumLanguageWriter.Cartesian.Rotate(CesiumLanguageWriter.UnitQuaternion)"/>.
            </remarks>
            <seealso cref="T:CesiumLanguageWriter.Matrix3By3"/>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> coordinates from the provided values.
            </summary>
            <param name="w">The W coordinate.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="z">The Z coordinate.</param>
            <exception cref="T:System.DivideByZeroException">
            The magnitude of the provided coordinates must not be zero.
            </exception>
            <exception cref="T:System.NotFiniteNumberException">
            The magnitude of the provided coordinates must not be infinite.
            </exception>
            <remarks>The given values will be normalized to ensure a unit magnitude.</remarks>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double@)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> coordinates from the provided values.
            </summary>
            <param name="w">The W coordinate.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="z">The Z coordinate.</param>
            <param name="magnitude">
            <filter name="Java">On input, an array with one element.  On return, the array is populated with</filter>
            <filter name="DotNet,Silverlight">On return,</filter>
            the magnitude of the original set of coordinates.
            </param>
            <exception cref="T:System.DivideByZeroException">
            The magnitude of the provided coordinates must not be zero.
            </exception>
            <exception cref="T:System.NotFiniteNumberException">
            The magnitude of the provided coordinates must not be infinite.
            </exception>
            <remarks>The given values will be normalized to ensure a unit magnitude.</remarks>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.#ctor(CesiumLanguageWriter.Matrix3By3)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> coordinates from the provided rotation matrix (<see cref="T:CesiumLanguageWriter.Matrix3By3"/>).
            Note that if the given <paramref name="matrix"/> is not an orthogonal rotation matrix, 
            it will create a non-unit <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> and could cause problems in code which assumes that the <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> represents a rotation.
            </summary>
            <param name="matrix">The 3-by-3 rotation matrix.</param>
            <returns>The resulting quaternion.</returns>
            <remarks>For performance reasons, there is no check to ensure that the <paramref name="matrix"/> is a unit rotation prior
            to converting to a unit quaternion.  If necessary, the surrounding code is responsible for ensuring that the given
            <paramref name="matrix"/> is a valid orthogonal rotation matrix.</remarks>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.Conjugate">
            <summary>
            Forms the conjugate of this instance.
            </summary>
            <returns>A set of <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> coordinates that represents the conjugate of this instance.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.Multiply(CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Multiplies this instance by the specified <see cref="T:CesiumLanguageWriter.UnitQuaternion"/>, yielding a new <see cref="T:CesiumLanguageWriter.UnitQuaternion"/>.
            </summary>
            <param name="quaternion">The quaternion by which to multiply this quaternion.</param>
            <returns>The result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.op_Multiply(CesiumLanguageWriter.UnitQuaternion,CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Multiplies a specified <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> by another specified <see cref="T:CesiumLanguageWriter.UnitQuaternion"/>, yielding a new <see cref="T:CesiumLanguageWriter.UnitQuaternion"/>.
            </summary>
            <param name="left">The first unit quaternion.</param>
            <param name="right">The second unit quaternion.</param>
            <returns>The result of the multiplication.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.op_UnaryNegation(CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Negates the specified <see cref="T:CesiumLanguageWriter.UnitQuaternion"/>, yielding a new <see cref="T:CesiumLanguageWriter.UnitQuaternion"/>.
            </summary>
            <param name="coordinates">The set of coordinates.</param>
            <returns>The result of negating the elements of the original <see cref="T:CesiumLanguageWriter.UnitQuaternion"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.EqualsEpsilon(CesiumLanguageWriter.UnitQuaternion,System.Double)">
            <summary>
            Indicates whether each coordinate value of another instance of this type
            is within the required tolerance of the corresponding coordinate value of this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> coordinates to compare to this instance.</param>
            <param name="epsilon">The limit at which the absolute differences between the coordinate values will not be considered equal.</param>
            <returns>
            <see langword="true"/> if the absolute differences are less than <paramref name="epsilon"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.ToString">
            <summary>
            Returns the string representation of the value of this instance.
            </summary>
            <returns>
            A string that represents the value of this instance in the form
            "W, X, Y, Z".
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.op_Equality(CesiumLanguageWriter.UnitQuaternion,CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.op_Inequality(CesiumLanguageWriter.UnitQuaternion,CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitQuaternion.Equals(CesiumLanguageWriter.UnitQuaternion)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.UnitQuaternion.Undefined">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> coordinates with values of <see cref="F:System.Double.NaN"/>.
            </summary>
            <remarks>
            Use <see cref="P:CesiumLanguageWriter.UnitQuaternion.IsUndefined"/> to test whether a <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> instance
            is undefined since it will return <see langword="true"/> if any of the coordinate values
            are <see cref="F:System.Double.NaN"/>.
            </remarks>
        </member>
        <member name="P:CesiumLanguageWriter.UnitQuaternion.Identity">
            <summary>
            Gets a set of <see cref="T:CesiumLanguageWriter.UnitQuaternion"/> coordinates representing the identity vector.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitQuaternion.W">
            <summary>
            Gets the W coordinate.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitQuaternion.X">
            <summary>
            Gets the X coordinate.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitQuaternion.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitQuaternion.Z">
            <summary>
            Gets the Z coordinate.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitQuaternion.IsUndefined">
            <summary>
            Gets whether or not any of the coordinates for this instance have the value <see cref="F:System.Double.NaN"/>.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitQuaternion.Length">
            <summary>
            Gets the number of elements in this set of coordinates.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitQuaternion.Item(System.Int32)">
            <summary>
            Gets the value of the specified element with <paramref name="index"/> of 0, 1, 2, and 3 corresponding to the coordinates
            W, X, Y, and Z.
            </summary>
            <param name="index">Either 0, 1, 2, or 3 corresponding to the coordinates W, X, Y, or Z.</param>
            <returns>The coordinate associated with the specified <paramref name="index"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="index"/> is less than 0 or is greater than or equal to the <see cref="P:CesiumLanguageWriter.UnitQuaternion.Length"/>.
            </exception>
        </member>
        <member name="T:CesiumLanguageWriter.UnitSpherical">
            <summary>
            A set of curvilinear 3-dimensional coordinates with unit magnitude.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.#ctor(System.Double[],System.Int32)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitSpherical"/> coordinates from the provided array.
            </summary>
            <param name="elements">The array of coordinate values.</param>
            <param name="startIndex">The index of the first element in the array to use.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the array of <paramref name="elements"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when an object of this type is constructed from an array with less than 2 <paramref name="elements"/>.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.#ctor(System.Double[])">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitSpherical"/> coordinates from the first 2 consecutive elements in the provided array.
            </summary>
            <param name="elements">The array of coordinate values.</param>
            <exception cref="T:System.ArgumentNullException">
            The array of <paramref name="elements"/> cannot be null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            An object of this type must be constructed from an array with at least 2 <paramref name="elements"/>.
            </exception>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitSpherical"/> coordinates from the provided clock angle and cone angle.
            </summary>
            <param name="clock">The angular coordinate lying in the xy-plane measured from the positive x-axis and toward the positive y-axis.</param>
            <param name="cone">The angular coordinate measured from the positive z-axis and toward the negative z-axis.</param>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.#ctor(CesiumLanguageWriter.UnitCartesian)">
            <summary>
            Initializes a set of <see cref="T:CesiumLanguageWriter.UnitSpherical"/> coordinates from the provided set of <see cref="T:CesiumLanguageWriter.UnitCartesian"/> coordinates.
            </summary>
            <param name="coordinates">The set of UnitCartesian3 coordinates.</param>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.EqualsEpsilon(CesiumLanguageWriter.UnitSpherical,System.Double)">
            <summary>
            Indicates whether each coordinate value of another instance of this type
            is within the required tolerance of the corresponding coordinate value of this instance.
            </summary>
            <param name="other">The set of <see cref="T:CesiumLanguageWriter.UnitSpherical"/> coordinates to compare to this instance.</param>
            <param name="epsilon">The limit at which the absolute differences between the coordinate values will not be considered equal.</param>
            <returns>
            <see langword="true"/> if the absolute differences are less than <paramref name="epsilon"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.ToString">
            <summary>
            Returns the string representation of the value of this instance.
            </summary>
            <returns>
            A string that represents the value of this instance in the form
            Clock, Cone, and Magnitude.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.op_Equality(CesiumLanguageWriter.UnitSpherical,CesiumLanguageWriter.UnitSpherical)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.op_Inequality(CesiumLanguageWriter.UnitSpherical,CesiumLanguageWriter.UnitSpherical)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.UnitSpherical.Equals(CesiumLanguageWriter.UnitSpherical)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.UnitSpherical.Clock">
            <summary>
            Gets the angular coordinate lying in the xy-plane measured from the positive x-axis and toward the positive y-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitSpherical.Cone">
            <summary>
            Gets the angular coordinate measured from the positive z-axis and toward the negative z-axis.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitSpherical.Magnitude">
            <summary>
            Gets the linear coordinate measured from the origin.  The value of this property is always 1.0.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitSpherical.Length">
            <summary>
            Gets the number of elements in this set of coordinates.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.UnitSpherical.Item(System.Int32)">
            <summary>
            Gets the value of the specified element with <paramref name="index"/> of 0 and 1 corresponding to the coordinates
            Clock and Cone.
            </summary>
            <param name="index">Either 0 or 1 corresponding to the coordinates Clock or Cone.</param>
            <returns>The coordinate associated with the specified <paramref name="index"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the <paramref name="index"/> is less than 0 or is equal to or greater than <see cref="P:CesiumLanguageWriter.UnitSpherical.Length"/>.
            </exception>
        </member>
        <member name="T:CesiumLanguageWriter.YearMonthDay">
            <summary>
            Represents a calendar year, month, and day.
            </summary>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.YearMonthDay"/> from the provided values.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month of the year (in the range 1 through 12)</param>
            <param name="day">The day of the month (in the range 1 through the number of
            days in <paramref name="month"/>)</param>
            <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="year"/>, <paramref name="month"/>, or 
            <paramref name="day"/> is outside of its acceptable range.</exception>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.YearMonthDay"/> from the provided values.
            </summary>
            <param name="year">The year.</param>
            <param name="dayOfYear">The day of the year
            (in the range 1 through the number of days in the year).</param>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.#ctor(System.Int32)">
            <summary>
            Initializes a <see cref="T:CesiumLanguageWriter.YearMonthDay"/> in the Gregorian calendar from the
            provided astronomical  Julian day number, assuming the beginning of the Julian
            day (noon).
            </summary>
            <param name="astronomicalJulianDayNumber">The astronomical Julian day number.
            </param>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.#ctor(CesiumLanguageWriter.JulianDate)">
            <summary>
            Initializes a new instance from a <see cref="T:CesiumLanguageWriter.JulianDate"/>.
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.GetAdjustedJulianDayNumber(CesiumLanguageWriter.JulianDate)">
            <summary>
            The constructor taking an integer Julian day number assumes that the desired 
            <see cref="T:CesiumLanguageWriter.YearMonthDay"/> should represent the Gregorian day corresponding to
            the beginning of the provided Julian day number. If the 
            <see cref="T:CesiumLanguageWriter.JulianDate"/> is more than one half day later than that, the
            calculation will be wrong.
            
            So, if <paramref name="date"/> is more than 12 hours past the start of the
            Julian day, we instead use the  Julian date number of tomorrow.
            </summary>
            <param name="date">The date.</param>
            <returns>The Julian day number that will produce the correct Gregorian day
            number.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.IsLeapYear(System.Int32)">
            <summary>
            Indicates whether the year in question is a leap year.
            </summary>
            <param name="year">The year.</param>
            <returns><see langword="true"/> if <paramref name="year"/> is a leap year and 
            <see langword="false"/> if it is not.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.DaysInMonth(System.Int32,System.Int32)">
            <summary>
            Provides the number of days in the month of the indicated year.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month of the year.</param>
            <returns>The number of days in the month.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.DaysInYear(System.Int32)">
            <summary>
            Provides the number of days in the indicated year.
            </summary>
            <param name="year">The year.</param>
            <returns>The number of days in the year (365 for a common year and 366 for a
            leap year).</returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.IsValidDate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Indicates whether the year, month, and day are a valid representation.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month of the year (in the range 1 through 12)</param>
            <param name="day">The day of the month (in the range 1 through the number of days in 
            <paramref name="month"/>)</param>
            <returns><see langword="true"/> if the representation is valid and 
            <see langword="false"/> if it is not.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.GetHashCode">
            <summary>
            Returns a hash code for this instance, which is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.Equals(CesiumLanguageWriter.YearMonthDay)">
            <summary>
            Indicates whether another instance of this type is exactly equal to this instance.
            </summary>
            <param name="other">The instance to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="other"/> represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.Equals(System.Object)">
            <summary>
            Indicates whether another object is exactly equal to this instance.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is an instance of this type and represents the same value as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.ToString">
            <summary>
            Returns a string formatted as Year:Month:Day
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.CompareTo(CesiumLanguageWriter.YearMonthDay)">
            <summary>
            Compares this instance with another instance of the same type.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>
            A value indicating the relative order of the objects being compared.  The return value has these meanings:
            <list type="table">
              <listheader>
                <term>Value</term>
                <description>Meaning</description>
              </listheader>
              <item>
                <term>Less than zero</term>
                <description>
                  This instance is less than <paramref name="other"/>.
                </description>
              </item>
              <item>
                <term>Zero</term>
                <description>
                  This instance is equal to <paramref name="other"/>.
                </description>
              </item>
              <item>
                <term>Greater than zero</term>
                <description>
                  This instance is greater than <paramref name="other"/>.
                </description>
              </item>
            </list>
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.CompareTo(System.Object)">
            <summary>
            Compares this instance with another instance of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value indicating the relative order of the objects being compared.  The return value has these meanings:
            <list type="table">
              <listheader>
                <term>Value</term>
                <description>Meaning</description>
              </listheader>
              <item>
                <term>Less than zero</term>
                <description>
                  This instance is less than <paramref name="obj"/>.
                </description>
              </item>
              <item>
                <term>Zero</term>
                <description>
                  This instance is equal to <paramref name="obj"/>.
                </description>
              </item>
              <item>
                <term>Greater than zero</term>
                <description>
                  This instance is greater than <paramref name="obj"/>.
                </description>
              </item>
            </list>
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.op_Equality(CesiumLanguageWriter.YearMonthDay,CesiumLanguageWriter.YearMonthDay)">
            <summary>
            Returns <see langword="true"/> if the two instances are exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> represents the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.op_Inequality(CesiumLanguageWriter.YearMonthDay,CesiumLanguageWriter.YearMonthDay)">
            <summary>
            Returns <see langword="true"/> if the two instances are not exactly equal.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> does not represent the same value as <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.op_LessThan(CesiumLanguageWriter.YearMonthDay,CesiumLanguageWriter.YearMonthDay)">
            <summary>
            Returns <see langword="true"/> if <paramref name="left"/> is less than <paramref name="right"/>.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> is less than <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.op_GreaterThan(CesiumLanguageWriter.YearMonthDay,CesiumLanguageWriter.YearMonthDay)">
            <summary>
            Returns <see langword="true"/> if <paramref name="left"/> is greater than <paramref name="right"/>.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> is greater than <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.op_LessThanOrEqual(CesiumLanguageWriter.YearMonthDay,CesiumLanguageWriter.YearMonthDay)">
            <summary>
            Returns <see langword="true"/> if <paramref name="left"/> is less than or equal to <paramref name="right"/>.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> is less than or equal to <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:CesiumLanguageWriter.YearMonthDay.op_GreaterThanOrEqual(CesiumLanguageWriter.YearMonthDay,CesiumLanguageWriter.YearMonthDay)">
            <summary>
            Returns <see langword="true"/> if <paramref name="left"/> is greater than or equal to <paramref name="right"/>.
            </summary>
            <param name="left">The instance to compare to <paramref name="right"/>.</param>
            <param name="right">The instance to compare to <paramref name="left"/>.</param>
            <returns>
            <see langword="true"/> if <paramref name="left"/> is greater than or equal to <paramref name="right"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="P:CesiumLanguageWriter.YearMonthDay.Year">
            <summary>
            Gets the year.
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.YearMonthDay.Month">
            <summary>
            Gets the month of the year (in the range 1 through 12).
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.YearMonthDay.Day">
            <summary>
            Gets the day of the month (in the range 1 through the number of days in the
            month).
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.YearMonthDay.DayOfYear">
            <summary>
            Gets the day of the year (in the range 1 through the number of days in the
            year).
            </summary>
        </member>
        <member name="P:CesiumLanguageWriter.YearMonthDay.DayOfWeek">
            <summary>Gets the day of the week represented by this instance.</summary>
            <returns>A <see cref="P:CesiumLanguageWriter.YearMonthDay.DayOfWeek"/> enumerated constant that indicates the day
            of the week. This property value ranges from zero, indicating Sunday, to six,
            indicating Saturday.</returns>
        </member>
        <member name="P:CesiumLanguageWriter.YearMonthDay.JulianDayNumber">
            <summary>
            Gets the Julian day number for this <see cref="T:CesiumLanguageWriter.YearMonthDay"/> instance,
            assuming noon on this day.
            </summary>
        </member>
    </members>
</doc>
